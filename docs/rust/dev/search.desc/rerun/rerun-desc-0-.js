searchState.loadedDescShard("rerun", 0, "Rerun - Visualize streams of multimodal data.\nRefer to all instances in a batch.\n<strong>Component</strong>: A color multiplier, usually applied to a whole …\n<strong>Datatype</strong>: Angle in radians.\n<strong>Archetype</strong>: The annotation context provides additional …\n<strong>Datatype</strong>: Annotation info annotating a class id or …\nThe user-chosen name of the application doing the logging.\nAn archetype is a high-level construct that represents a …\nThe fully-qualified name of an <code>Archetype</code>, e.g. …\n<strong>Archetype</strong>: 2D arrows with optional colors, radii, labels, …\n<strong>Archetype</strong>: 3D arrows with optional colors, radii, labels, …\nDescribes the interface for interpreting an object as a …\n<strong>Archetype</strong>: A prepacked 3D asset (<code>.gltf</code>, <code>.glb</code>, <code>.obj</code>, <code>.stl</code>, …\n<strong>Archetype</strong>: A video binary.\nRotation defined with an axis and an angle.\nX=Back, Y=Down, Z=Left\nX=Back, Y=Down, Z=Right\nBlue, Green, Red\nBlue, Green, Red, Alpha\nBlack and opaque.\nBlack and opaque.\nX=Back, Y=Left, Z=Down\nX=Back, Y=Left, Z=Up\nX=Back, Y=Right, Z=Down\nX=Back, Y=Right, Z=Up\nX=Back, Y=Up, Z=Left\nX=Back, Y=Up, Z=Right\n<strong>Archetype</strong>: A bar chart.\nData associated with the blueprint state.\n<strong>Archetype</strong>: 2D boxes with half-extents and optional center, …\n<strong>Archetype</strong>: 3D boxes with half-extents and optional center, …\nDesignates catastrophic failures.\nWhere are we calling <code>run</code> from?\n<strong>Datatype</strong>: The innermost datatype of an image.\nThe transform describes how to transform into the child …\nError within the underlying chunk batcher.\nError within the underlying chunk batcher.\nEverything needed to build custom <code>ChunkStoreSubscriber</code>s. A …\nEverything needed to build custom <code>ChunkStoreSubscriber</code>s. …\nEverything needed to build custom <code>ChunkStoreSubscriber</code>s. …\nEverything needed to build custom <code>ChunkStoreSubscriber</code>s. …\nEverything needed to build custom <code>ChunkStoreSubscriber</code>s. …\nEverything needed to build custom <code>ChunkStoreSubscriber</code>s. A …\n<strong>Datatype</strong>: The description of a semantic Class.\n<strong>Archetype</strong>: Empties all the components of an entity.\nCalled from a command-line-input (the terminal).\n<strong>Component</strong>: An RGBA color with unmultiplied/separate alpha, …\n<strong>Datatype</strong>: Specified what color components are present in …\nA <code>Component</code> describes semantic data that can be used by …\nA <code>ComponentBatch</code> represents an array’s worth of <code>Component</code>…\nThe fully-qualified name of a <code>Component</code>, e.g. …\nX=Down, Y=Back, Z=Left\nX=Down, Y=Back, Z=Right\nDesignates lower priority information.\nX=Down, Y=Forward, Z=Left\nX=Down, Y=Forward, Z=Right\nX=Down, Y=Left, Z=Back\nX=Down, Y=Left, Z=Forward\nX=Down, Y=Right, Z=Back\nX=Down, Y=Right, Z=Forward\nA <code>DataLoader</code> loads data from a file path and/or a file’s …\nErrors that might happen when loading data through a …\nAn error occurred while attempting to use a …\nRecommended settings for the <code>DataLoader</code>.\nThe fully-qualified name of a [<code>Datatype</code>], e.g. …\nCreate a new angle from degrees.\nMany lines are drawn to represent the surface of the shape …\n<strong>Archetype</strong>: A depth image, i.e. as captured by a depth …\n<strong>Archetype</strong>: Spatially disconnect this entity from its …\nDesignates very serious errors.\nWhen an external <code>DataLoader</code> is asked to load some data …\nTo register a new external data loader, simply add an …\n<strong>Archetype</strong>: 3D ellipsoids or spheres.\n<strong>Archetype</strong>: An image encoded as e.g. a JPEG or PNG.\nThe unique identifier of an entity, e.g. <code>camera/3/points</code>\nThe different parts that make up an <code>EntityPath</code>.\nContains the error value\nFailed to find Rerun Viewer executable at explicit path.\nFailed to find Rerun Viewer executable in PATH.\n16-bit IEEE-754 floating point, also known as <code>half</code>.\n16bit IEEE-754 floating point, also known as <code>half</code>.\n32-bit IEEE-754 floating point, also known as <code>float</code> or …\n32bit IEEE-754 floating point, also known as <code>float</code> or …\n64-bit IEEE-754 floating point, also known as <code>double</code>.\n64bit IEEE-754 floating point, also known as <code>double</code>.\nX=Forward, Y=Down, Z=Left\nX=Forward, Y=Down, Z=Right\nX=Forward, Y=Left, Z=Down\nX=Forward, Y=Left, Z=Up\nX=Forward, Y=Right, Z=Down\nX=Forward, Y=Right, Z=Up\nX=Forward, Y=Up, Z=Left\nX=Forward, Y=Up, Z=Right\nError within the underlying file sink.\n<strong>Component</strong>: How a geometric shape is drawn and colored.\n<strong>Datatype</strong>: A single-precision 32-bit IEEE 754 floating …\nBinary <code>glTF</code>.\n<code>glTF</code>.\nA generic indicator component that can be specialized for …\n<strong>Component</strong>: Half-size (radius) of a 2D box.\n<strong>Component</strong>: Half-size (radius) of a 3D box.\n16-bit signed integer.\n16bit signed integer.\n32-bit signed integer.\n32bit signed integer.\n64-bit signed integer.\n64bit signed integer.\n8-bit signed integer.\n8bit signed integer.\nThe identity transform.\nThe identity matrix.\nThe identity quaternion representing no rotation.\nThe identity rotation, representing no rotation.\nThe identity rotation, expressed as a quaternion\nDesignates useful information.\n<strong>Archetype</strong>: A monochrome or color image.\n<strong>Component</strong>: The metadata describing the contents of a …\nThe associated indicator component, whose presence …\nA unique numeric index for each individual instance within …\n<strong>Archetype</strong>: One or more transforms between the current …\nOther I/O error.\nJPEG image: <code>image/jpeg</code>.\n<strong>Datatype</strong>: A connection between two <code>datatypes::KeypointId</code>s.\nGrayscale luminance intencity/brightness/value, sometimes …\nX=Left, Y=Back, Z=Down\nX=Left, Y=Back, Z=Up\nX=Left, Y=Down, Z=Back\nX=Left, Y=Down, Z=Forward\nX=Down, Y=Right, Z=Forward\nX=Up, Y=Right, Z=Back\nX=Right, Y=Down, Z=Back\nX=Right, Y=Up, Z=Forward\nX=Right, Y=Forward, Z=Down\nX=Right, Y=Back, Z=Up\nX=Left, Y=Forward, Z=Down\nX=Left, Y=Forward, Z=Up\nX=Left, Y=Up, Z=Back\nX=Left, Y=Up, Z=Forward\n<strong>Component</strong>: A line strip in 2D space.\n<strong>Component</strong>: A line strip in 3D space.\n<strong>Archetype</strong>: 2D line strips with positions and optional …\n<strong>Archetype</strong>: 3D line strips with positions and optional …\nWhat <code>DataLoader</code>s load.\nA <code>Loggable</code> represents a single instance in an array of …\nA <code>LoggableBatch</code> represents an array’s worth of <code>Loggable</code> …\nMarkdown.\nVideos: MP4 video: <code>video/mp4</code>.\nLines are drawn around the parts of the shape which …\n<strong>Datatype</strong>: A 3x3 Matrix.\nHolds either an owned <code>ComponentBatch</code> that lives on heap, …\n<strong>Component</strong>: A standardized media type (RFC2046, formerly …\nRepresents a limit in how much RAM to use for the entire …\n<strong>Archetype</strong>: A 3D triangle mesh as specified by its per-mesh …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 2 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 2 …\nThe total number of components in the archetype: 0 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 2 …\nThe total number of components in the archetype: 0 …\nThe total number of components in the archetype: 0 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 0 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\n<code>NV12</code> (aka <code>Y_UV12</code>) is a YUV 4:2:0 chroma downsampled form …\nAn arbitrary named indicator component.\nWavefront .obj.\n<code>[1, 1]</code>, i.e. the multiplicative identity.\n<code>[1, 1, 1]</code>, i.e. the multiplicative identity.\nThe unit vector <code>[1, 1]</code>, i.e. the multiplicative identity.\n<code>[1, 1, 1]</code>, i.e. the multiplicative identity.\nRadius of length 1 in ui points.\nContains the success value\nPNG image: <code>image/png</code>.\nThe transform describes how to transform into the parent …\n<strong>Archetype</strong>: Camera perspective projection (a.k.a. …\n<strong>Datatype</strong>: Specifieds a particular format of an …\n<strong>Archetype</strong>: A 2D point cloud with positions and optional …\n<strong>Archetype</strong>: A 3D point cloud with positions and optional …\n<strong>Component</strong>: A position in 2D space.\n<strong>Component</strong>: A position in 3D space.\n<strong>Datatype</strong>: A Quaternion represented by 4 real numbers.\nRotation defined by a quaternion.\nX=Right, Y=Back, Z=Down\nX=Right, Y=Back, Z=Up\nX=Right, Y=Down, Z=Back\nX=Right, Y=Down, Z=Forward\nX=Right, Y=Forward, Z=Down\nX=Right, Y=Forward, Z=Up\nRed, Green, Blue\nRed, Green, Blue, Alpha\nX=Down, Y=Right, Z=Back\nX=Up, Y=Right, Z=Forward\nX=Right, Y=Down, Z=Forward\nX=Right, Y=Up, Z=Back\nX=Right, Y=Back, Z=Down\nX=Right, Y=Forward, Z=Up\nX=Right, Y=Up, Z=Back\nX=Right, Y=Up, Z=Forward\nCreate a new angle from radians.\n<strong>Component</strong>: The radius of something, e.g. a point.\nA recording of user-data.\nA <code>RecordingStream</code> handles everything related to logging …\nConstruct a <code>RecordingStream</code>.\nErrors that can occur when creating/manipulating a …\nResults that can occur when creating/manipulating a …\n<strong>Datatype</strong>: An RGBA color with unmultiplied/separate alpha, …\nA 3D rotation.\n<strong>Datatype</strong>: 3D rotation represented by a rotation around a …\nStereolithography Model <code>stl</code>: <code>model/stl</code>.\n<strong>Archetype</strong>: A double-precision scalar, e.g. for use for …\n<strong>Component</strong>: A 3D scale factor.\n<strong>Archetype</strong>: An image made up of integer <code>components::ClassId</code>…\nError within the underlying serializer.\n<strong>Archetype</strong>: Define the style properties for a line series …\n<strong>Archetype</strong>: Define the style properties for a point series …\nApproximations of stack and heap size for both internal …\nThe surface of the shape is filled in with a solid color. …\nErrors that can occur when <code>spawn</code>ing a Rerun Viewer.\nOptions to control the behavior of <code>spawn</code>.\nError spawning one of the background threads.\nError spawning a Rerun Viewer process.\nA unique id per store.\nWhat kind of Store this is.\nPlain text.\nDesignates very low priority, often extremely verbose, …\nFully transparent (invisible).\nFully transparent (invisible).\n<strong>Archetype</strong>: An N-dimensional array of numbers.\n<strong>Datatype</strong>: The underlying storage for <code>archetypes::Tensor</code>.\n<strong>Datatype</strong>: An N-dimensional array of numbers.\n<strong>Datatype</strong>: A single dimension within a multi-dimensional …\n<strong>Component</strong>: A string of text, e.g. for labels and text …\n<strong>Archetype</strong>: A text element intended to be displayed in its …\n<strong>Archetype</strong>: A log entry in a text log, comprised of a text …\n<strong>Component</strong>: The severity level of a text log message.\nScale individually along each axis.\nA date-time represented as nanoseconds since unix epoch\nA point in time on any number of <code>Timeline</code>s.\nA time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …\n<strong>Archetype</strong>: A transform between two 3D spaces, i.e. a pose.\n<strong>Component</strong>: Specifies relation a spatial transform …\n<strong>Component</strong>: The three indices of a triangle in a triangle …\n16-bit unsigned integer.\n16bit unsigned integer.\n32-bit unsigned integer.\n32bit unsigned integer.\n64-bit unsigned integer.\n64bit unsigned integer.\n8-bit unsigned integer.\n8bit unsigned integer.\nX=Up, Y=Back, Z=Left\nX=Up, Y=Back, Z=Right\nX=Up, Y=Forward, Z=Left\nX=Up, Y=Forward, Z=Right\nX=Up, Y=Left, Z=Back\nX=Up, Y=Left, Z=Forward\nNo limit.\nX=Up, Y=Right, Z=Back\nX=Up, Y=Right, Z=Forward\nScale the same amount along all axis.\n<strong>Datatype</strong>: A vector in 2D space.\n<strong>Datatype</strong>: A vector in 3D space.\n<strong>Datatype</strong>: A vector in 4D space.\n<strong>Component</strong>: A vector in 2D space.\n<strong>Component</strong>: A vector in 3D space.\n<strong>Archetype</strong>: References a single video frame.\n<strong>Archetype</strong>: How we interpret the coordinate system of an …\nDesignates hazardous situations.\nWhite and opaque.\nWhite and opaque.\nFailure to host a web viewer and/or Rerun server.\nMonochrome Y plane only, essentially a YUV 4:0:0 planar …\nMonochrome Y plane only, essentially a YUV 4:0:0 planar …\n<code>YUY2</code> (aka <code>YUYV</code>, <code>YUYV16</code> or <code>NV21</code>), is a YUV 4:2:2 chroma …\n<code>Y_U_V12</code> is a YUV 4:2:0 fully planar YUV format without …\n<code>Y_U_V12</code> is a YUV 4:2:0 fully planar YUV format without …\n<code>Y_U_V16</code> is a YUV 4:2:2 fully planar YUV format without …\n<code>Y_U_V16</code> is a YUV 4:2:2 fully planar YUV format without …\n<code>Y_U_V24</code> is a YUV 4:4:4 fully planar YUV format without …\n<code>Y_U_V24</code> is a YUV 4:4:4 fully planar YUV format without …\nThe origin.\nThe origin.\nZero radius.\nThe zero vector, i.e. the additive identity.\nThe zero vector, i.e. the additive identity.\nZero angle, often used for representing no rotation.\nThe zero vector, i.e. the additive identity.\nThe zero vector, i.e. the additive identity.\nThe zero vector, i.e. the additive identity.\nConfigures the zoom-dependent scalar aggregation.\nA color multiplier applied to the whole mesh.\nOptional albedo texture.\nThe format of the <code>albedo_texture_buffer</code>, if any.\nReturns the names of all components that must, should and …\nRetrieve all <code>ComponentName</code>s in the store.\nRetrieve all the <code>ComponentName</code>s that have been written to …\nRetrieve all the <code>ComponentName</code>s that have been written to …\nRetrieve all <code>EntityPath</code>s in the store.\nRetrieve all <code>Timeline</code>s in the store.\nHow much to rotate around the axis.\nThe recommended <code>re_log_types::ApplicationId</code> to log the …\nArchetype are the high-level things you can log, like <code>Image</code>…\nThe underlying <code>arrow2::datatypes::DataType</code>, excluding …\nWorkaround for downcasting support, simply return <code>self</code>:\nWorkaround for downcasting support, simply return <code>self</code>:\nExposes the object’s contents as a set of <code>ComponentBatch</code>…\nReturns the media type as a string slice, e.g. “…\nThe text as a string slice.\nThe log level as a string slice, e.g. “INFO”.\nWidth/height ratio of the camera sensor.\nAxis to rotate around.\nVisual length of the 3 axes.\nSpecifies the configuration of the internal data batching …\nSwaps the underlying sink for a …\nNumber of bits used to represent this element type.\nThe asset’s bytes.\nThe asset’s bytes.\nThe encoded content of some image file, e.g. a PNG or JPEG.\nReturns the maximum of a box with these half-extents and a …\nReturns the maximum of a box with these half-extents and a …\nReturns the min position of a box with these half-extents …\nReturns the min position of a box with these half-extents …\nThe raw depth image data.\nThe raw image data.\nThe raw image data.\nThe content/data.\nCreates a new <code>RecordingStream</code> that starts in a buffering …\nThe version of the Rerun SDK.\nSets the view coordinates for the camera.\nOptional center positions of the boxes.\nOptional center positions of the boxes.\nOptional center positions of the ellipsoids.\nGet a chunk based on its ID.\nThe chunk that was added or removed.\nIntegration with integration with the <code>clap</code> command line …\nOptional class Ids for the points.\nOptional class Ids for the points.\nOptional <code>components::ClassId</code>s for the boxes.\nOptional <code>components::ClassId</code>s for the boxes.\nOptional class ID for the ellipsoids.\nOptional <code>components::ClassId</code>s for the lines.\nOptional <code>components::ClassId</code>s for the lines.\nOptional class Ids for the vertices.\nOptional class Ids for the points.\nOptional class Ids for the points.\nCheck whether we are the child of a fork.\nCreate a new <code>Transform3D</code> which when logged will clear the …\nClones the <code>RecordingStream</code> without incrementing the …\nReturns the matrix column for the given <code>index</code>.\nThe color of the bar chart\nColor for the corresponding series.\nColor for the corresponding series.\nOptional color to use for the log line in the Rerun Viewer.\nThe color that will be applied to the annotated entity.\nThe color model represented by this image format.\nThe color model derived from this pixel format.\nColormap to use for rendering the depth image.\nOptional colors for the points.\nOptional colors for the points.\nOptional colors for the boxes.\nOptional colors for the boxes.\nOptional colors for the ellipsoids.\nOptional colors for the line strips.\nOptional colors for the line strips.\nOptional colors for the points.\nOptional colors for the points.\nReturns the first common ancestor of two paths.\nReturns the first common ancestor of a list of entity …\nReports which <code>Chunk</code>s were merged into a new <code>ChunkId</code> (srcs, …\nComponents are the basic building blocks of <code>archetypes</code>.\nSee <code>ChunkStoreConfig</code> for more information about …\nCreates a new <code>RecordingStream</code> that is pre-configured to …\nSwaps the underlying sink for a <code>crate::log_sink::TcpSink</code> …\nResolves the final connect address value.\nCreates a new <code>RecordingStream</code> that is pre-configured to …\nSwaps the underlying sink for a <code>crate::log_sink::TcpSink</code> …\nList of class descriptions, mapping class indices to class …\nCoordinate system helpers, for use with …\nAccessor to the underlying <code>TensorData</code>.\nThe tensor data\nReturns the appropriate arrow datatype to represent this …\nThe datatype represented by this image format.\nThe datatype that this decodes into.\nThe low-level datatypes that <code>components</code> are built from.\nChecks the <code>RERUN</code> environment variable. If not found, …\nRandom-access decoding of a specific pixel of an image.\nRandom-access decoding of a specific pixel of an image.\nSet whether or not Rerun is enabled by default.\nThe default amount of time to wait for the TCP connection …\nGet <code>RUST_LOG</code> environment variable or <code>info</code>, if not set.\nThe default address of a Rerun TCP server which an SDK …\nAngle in degrees (converts from radians).\n<code>-1</code> for deletions, <code>+1</code> for additions.\nThis module contains utilities to support Rerun examples.\nHeight of a box using this half-extent.\nCreate a new depth image format with the given resolution …\nCreate a new dimension with a given size, and the name “…\nThe expected range of depth values.\nWhat actually changed?\nClears out the current time of the recording for the …\nCreates a new no-op <code>RecordingStream</code> that drops all logging …\nSwaps the underlying sink for a <code>crate::sink::BufferedSink</code>.\nWhether the entity path at which this is logged is …\nReadable name for displaying in ui.\nWeb URL to the Rerun documentation for this component.\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nUnconditionally drops all the data for a given <code>entity_path</code>.\nDrop all events that are in the given range on the given …\nThe underlying data type of the buffer.\nThe datatype of the tensor.\nSet whether or not Rerun is enabled.\nCheck whether an entity has a static component or a …\nCheck whether an entity has a static component or a …\nCheck whether an entity has any static data or any …\nCheck whether an entity has any data on a specific …\nCheck whether an entity has a specific static component.\nCheck whether an entity has any static data.\nCheck whether an entity has a temporal component on any …\nCheck whether an entity has a temporal component on a …\nCheck whether an entity has any temporal data.\nCheck whether an entity has any temporal data.\nFind the earliest time at which something was logged for a …\nBuild an <code>EntityPath</code> from parts that are <em>not</em> escaped:\nWhat should the logged entity paths be prefixed with?\nStats about all the chunks that has data for an entity on …\nStats about all chunks with static data for an entity.\nReturns the min and max times at which data was logged for …\nUse this when it is part of a full entity path.\nMonotonically increasing ID of the event.\nSpecifies the name of the Rerun executable.\nResolves the final executable path.\nEnforce a specific executable to use instead of searching …\nRe-exports of other crates.\nExtra arguments that will be passed as-is to the Rerun …\nExtra environment variables that will be passed as-is to …\nReturn e.g. “jpg” for <code>image/jpeg</code>.\nOptionally choose whether the boxes are drawn with lines …\nOptionally choose whether the ellipsoids are drawn with …\nReturns a non-recursive clear.\nInitiates a flush of the pipeline and returns immediately.\nInitiates a flush the batching pipeline and waits for it …\nX &amp; Y focal length in pixels.\nReturns path for force sink if private environment …\nForgets the currently active recording of the specified …\nForgets the currently active recording of the specified …\nHuman-readable formatting\nThe format of the image.\nThe format of the image.\nThe format of the image.\nUseful when showing dates/times on a timeline and you want …\nReturns a formatted string of <code>time_range</code> on this <code>Timeline</code>.\nReturns a formatted string of <code>time_range</code> on this <code>Timeline</code>.\nField of View on the Y axis, i.e. the angle between top …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Instance</code> that identifies a 2D coordinate.\nGiven an iterator of Arrow arrays and their respective …\nGiven an Arrow array, deserializes it into a collection of …\nGiven an iterator of Arrow arrays and their respective …\nGiven an Arrow array, deserializes it into a collection of …\nSet the limit to some number of bytes.\nCreates new <code>Boxes2D</code> with <code>Self::centers</code> and <code>Self::half_sizes</code>…\nCreates new <code>Boxes3D</code> with <code>Self::centers</code> and <code>Self::half_sizes</code>…\nCreates a new <code>Ellipsoids3D</code> with <code>Self::centers</code> and …\nCreates a new <code>Ellipsoids3D</code> for spheres with the given …\nCreates new <code>Boxes2D</code> with <code>Self::centers</code> and <code>Self::half_sizes</code>…\nCreates new <code>Boxes3D</code> with <code>Self::centers</code> and <code>Self::half_sizes</code>…\nConstruct an image from a byte buffer given its …\nTry to construct an <code>Image</code> from a color model (L, RGB, …\nCreate a new angle from degrees.\nConstruct a tensor from <code>image::DynamicImage</code>.\nConstruct a tensor from <code>image::DynamicImage</code>.\nConstruct a tensor from <code>image::DynamicImage</code>.\nConstruct an image from a byte buffer given its …\nCreates a new <code>Asset3D</code> from the file contents at <code>path</code>.\nCreates a new image from the file contents at <code>path</code>.\nCreates a new <code>Asset3D</code> from the given <code>contents</code>.\nCreates a new <code>AssetVideo</code> from the given <code>contents</code>.\nConstruct an image given the encoded content of some image …\nCreates a new <code>Image</code> from the contents of a file.\nCreates a new <code>Points3D</code> from the contents of a <code>.ply</code> file.\nCreates a new <code>TextDocument</code> from the contents of a utf8 …\nTreat the file path as an entity path hierarchy.\nCreates a new <code>AssetVideo</code> from the file contents at <code>path</code>.\nCreates a new <code>Image</code> from a file.\nCreates a new <code>Points3D</code> from a <code>.ply</code> file.\nCreates a new <code>TextDocument</code> from a utf8 file.\nTreat the file path as one opaque string.\nCreates a pinhole from the camera focal length and …\nCreates a pinhole from the camera vertical field of view …\nSet the limit to some fraction (0-1) of the total …\nCreates new <code>Boxes2D</code> with <code>Self::half_sizes</code> centered around …\nCreates new <code>Boxes3D</code> with <code>Self::half_sizes</code> centered around …\nCreates a new <code>Ellipsoids3D</code> with <code>Self::half_sizes</code>.\nConstruct a tensor from something that can be turned into …\nConstruct a tensor from something that can be turned into …\nConstruct a tensor from something that can be turned into …\nConstruct a tensor from the contents of an image file.\nConstruct a tensor from the contents of an image file.\nConstruct a tensor from the contents of an image file on …\nCreate a new line strip from a list of positions.\nConstruct a line strip from a sequence of points.\nFrom an 8-bit grayscale image.\nFrom linear-space sRGB values in 0-1 range, with a …\nCreates a new <code>TextDocument</code> containing Markdown.\nFrom a translation.\nCreates new <code>Boxes2D</code> with <code>Self::centers</code> and <code>Self::half_sizes</code>…\nCreates new <code>Boxes3D</code> with <code>Self::centers</code> and <code>Self::half_sizes</code>…\nIndicate that this transform is from parent to child.\nConstruct an image from a byte buffer given its resolution …\nFrom a speicifc pixel format.\nCreate a new angle from radians.\nCreates a new <code>Ellipsoids3D</code> for spheres with the given …\nFrom gamma-space sRGB values.\nFrom gamma-space sRGB values.\nAssumes RGB, 8-bit per channel, interleaved as <code>RGBRGBRGB</code>.\nAssumes RGBA, 8-bit per channel, with separate alpha.\nFrom a rotation\nFrom a rotation &amp; scale\nInstantiate a new <code>ChunkStore</code> with the given …\nFrom a scale\nTreat the string as one opaque string, NOT splitting on …\nCreates new <code>Boxes2D</code> with <code>Self::half_sizes</code> created from …\nCreates new <code>Boxes3D</code> with <code>Self::half_sizes</code> created from …\nFrom a translation.\nFrom a translation applied after a 3x3 matrix.\nFrom a translation applied after a rotation, known as a …\nFrom a translation, applied after a rotation &amp; scale, …\nFrom a translation applied after a scale.\nMost significant byte is <code>r</code>, least significant byte is <code>a</code>.\nMost significant byte is <code>r</code>, least significant byte is <code>a</code>.\nFrom gamma-space sRGB values, with a separate/unmultiplied …\nFrom gamma-space sRGB values, with a separate/unmultiplied …\nCreates new 2D arrows pointing in the given directions, …\nCreates new 3D arrows pointing in the given directions, …\nFrom WXYZ.\nFrom XYZW.\nReturns the fully-qualified name, e.g. …\nReturns the fully-qualified name, e.g. …\nReturns the fully-qualified name, e.g. …\nTriggers a garbage collection according to the desired …\nReturn the current <code>ChunkStoreGeneration</code>. This can be used …\nReturns <code>overrides</code> if it exists, otherwise returns the most …\nGet a specific element.\nGet the value of the element at the given index.\n<code>model/gltf-binary</code>\nReturns the currently active recording of the specified …\n<code>model/gltf+json</code>\nTries to guess the media type of the file at <code>path</code> based on …\nTries to guess the media type of the file at <code>path</code> based on …\nAll half-extents that make up the batch of boxes.\nAll half-extents that make up the batch of boxes.\nFor each ellipsoid, half of its size on its three axes.\nDetermine if the image format has an alpha channel.\nDo we have an alpha channel?\nDo we have an alpha channel?\nPrecomputed hash of the string.\nPrecomputed hash of the string.\nPrecomputed hash of the string.\nPrecomputed 64-bit hash.\nReturns the total size of <code>self</code> on the heap, in bytes.\nHeight of a box using this half-extent.\nHeight of a box using this half-extent.\nCreate a new dimension with a given size, and the name “…\nHide the welcome screen.\n<code>datatypes::ClassId</code> or <code>datatypes::KeypointId</code> to which this …\nCamera projection, from image coordinates to view …\nThe distance from the camera origin to the image plane …\nHelper function to iterate over all incremental <code>EntityPath</code>…\nColumn-major order matrix coefficients.\nCreates a <code>ComponentBatch</code> out of the associated …\nIf this is an indicator component, for which archetype?\nThe <code>datatypes::AnnotationInfo</code> for the class.\nInserts a <code>Chunk</code> in the store.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether or not logging is enabled, a <code>StoreInfo</code> and …\nPack the data into a <code>LogMsg</code>.\nIf true, this time is likely relative to unix epoch.\nAre we referring to all instances of the entity (e.g. all …\nIs this a direct child of the other path.\nIs this a strict descendant of the given path.\nIs this buffer empty?\nCheck if logging is enabled on this <code>RecordingStream</code>.\nReturns how large fraction of memory we should free to go …\nDetermine if the image format represents floating point …\nIs this datatype a floating point number?\nIs this pixel format floating point?\nDetermine whether a fork has happened since creating this …\nReturns <code>true</code> if this is an image media type.\nIs this an indicator component for an archetype?\nIs this datatype an integer?\nReturns true if the format is a YUV format using limited …\nIs <code>Self</code> just plain old data?\nAre we referring to a specific instance of the entity …\nReturns true if either all dimensions have size 1 or only …\nIterate over all chunks in the store, in ascending <code>ChunkId</code> …\n<code>image/jpeg</code>\nThe first point of the pair.\nThe second point of the pair.\nThe <code>datatypes::AnnotationInfo</code> for all of the keypoints.\nThe connections between keypoints.\nOptional keypoint IDs for the points, identifying them …\nOptional keypoint IDs for the points, identifying them …\nAddition or deletion?\nThe label that will be shown in the UI.\nOptional text labels for the arrows.\nOptional text labels for the arrows.\nOptional text labels for the boxes.\nOptional text labels for the boxes.\nOptional text labels for the ellipsoids.\nOptional text labels for the line strips.\nOptional text labels for the line strips.\nOptional text labels for the points.\nOptional text labels for the points.\nReturns the most-relevant chunk(s) for the given …\nReturns the most-relevant <em>temporal</em> chunk(s) for the given …\nNumber of parts\nThe verbosity level of the message.\nOptional radii for the lines used when the ellipsoid is …\nResolves the final listen address value.\nLoads data from in-memory file contents and sends it to <code>tx</code>.\nLoads data from a file on the local filesystem and sends …\nThings directly related to logging.\nLog data to Rerun.\nLogs a single <code>Chunk</code>.\nLogs a set of <code>ComponentBatch</code>es into Rerun.\nLogs the given <code>contents</code> using all …\nLogs the file at the given <code>path</code> using all …\nIntegrates the Rerun SDK with the <code>log</code> crate.\nLog data to Rerun.\nThe log tick timeline to which all API functions will …\nThe log time timeline to which all API functions will …\nLogs the contents of a component bundle into Rerun.\nLookup the <code>ColumnMetadata</code> for a specific <code>EntityPath</code> and …\nLookup the <em>latest</em> arrow <code>ArrowDataType</code> used by a specific …\n<code>text/markdown</code>\nWhat shape to use to represent the point\nSize of the marker.\n3x3 transformation matrices.\n3x3 transformation matrix.\nDetermine if component matches a string\nLimit in bytes.\nWhat is the maximum finite value representable by this …\nThe Media Type of the asset.\nThe Media Type of the asset.\nThe Media Type of the asset.\nThe Media Type of the text.\nCreates a new <code>RecordingStream</code> that is pre-configured to …\nSwaps the underlying sink for a <code>crate::sink::MemorySink</code> …\nAn upper limit on how much memory the Rerun Viewer should …\nAn optional floating point value that specifies how long a …\nWhat is the minimum finite value representable by this …\n<code>video/mp4</code>\nThe fully-qualified name of this archetype, e.g. …\nThe fully-qualified name of this loggable, e.g. …\nName of the <code>DataLoader</code>.\nThe fully-qualified name of this batch, e.g. …\nArbitrary name for the subscriber.\nDisplay name of the series.\nDisplay name of the series.\nThe name of this dimension, e.g. “width”, “height”…\nCreate a named dimension.\nMethods for spawning the native viewer and streaming the …\nCreate a new <code>RecordingStreamBuilder</code> with the given …\nCreates a new <code>RecordingStream</code> with a given <code>StoreInfo</code> and …\nInstantiate a new empty <code>ChunkStore</code> with the given …\nThe given string is expected to be unescaped, i.e. any <code>\\</code> …\nCreate a new <code>Clear</code>.\nCreate a new <code>AnnotationContext</code>.\nCreate a new <code>Asset3D</code>.\nCreate a new <code>AssetVideo</code>.\nCreate a new <code>BarChart</code>.\nCreate a new <code>DepthImage</code>.\nCreate a new <code>DisconnectedSpace</code>.\nCreate a new <code>EncodedImage</code>.\nCreate a new <code>Image</code>.\nCreate a new <code>InstancePoses3D</code>.\nCreate a new <code>LineStrips2D</code>.\nCreate a new <code>LineStrips3D</code>.\nCreate a new <code>Mesh3D</code>.\nCreate a new <code>Pinhole</code>.\nCreate a new <code>Points2D</code>.\nCreate a new <code>Points3D</code>.\nCreate a new <code>Scalar</code>.\nCreate a new <code>SegmentationImage</code>.\nCreate a new <code>SeriesLine</code>.\nCreate a new <code>SeriesPoint</code>.\nCreate a new <code>Tensor</code>.\nCreate a new <code>TextDocument</code>.\nCreate a new <code>TextLog</code>.\nCreate a new <code>VideoFrameReference</code>.\nCreate a new <code>ViewCoordinates</code>.\nCreate a new color.\nCreate a new half-extent from half-width and half-height.\nCreate a new half-extent from half-width, half-height, …\nCreate a new position.\nCreate a new position.\nCreate a new rotation from an axis and an angle.\nCreate a new tensor.\nCreate a new vector.\nCreate a new vector.\nCreate a new vector.\nCreate an array of indicator components of this type with …\nCreates a new radius in scene units.\nFor things like camera frames or iteration count.\nCreates a new <code>re_log_types::StoreInfo</code> which can be used …\nFor absolute or relative time.\nCreates a new radius in ui points.\nReturns the current time of the recording on the current …\nNumber of bytes for the whole image.\nNumber of bytes needed to represent an image of the given …\n1 for grayscale, 3 for RGB, etc.\nGet the number of chunks.\nThe number of dimensions of the tensor.\nReturns the number of static events logged for an entity …\nReturns the number of temporal events logged for an entity …\nThe total number of triangles.\nThe total number of vertices.\n<code>model/obj</code>\nThe core of this trait: get notified of changes happening …\nOpacity of the image, useful for layering several images.\nOpacity of the image, useful for layering several images.\nOpacity of the image, useful for layering the segmentation …\nThe <code>re_log_types::ApplicationId</code> that is currently opened …\nThe <code>re_log_types::StoreId</code> that is currently opened in the …\nReturns the names of all components that <em>may</em> be provided …\nReturns <code>opt</code> if not <code>None</code>, otherwise tries to guess a media …\nReturns <code>opt</code> if not <code>None</code>, otherwise tries to guess a media …\nAll the origin (base) positions for each arrow in the …\nAll the origin (base) positions for each arrow in the …\nReturn <code>None</code> if root.\nThe limit can either be absolute (e.g. “16GB”) or …\nParses an entity path, handling any malformed input with a …\nUnescape the string, forgiving any syntax error with a …\nUnescape the string, forgiving any syntax error with a …\nParse an entity path from a string, with strict checks for …\nUnescape the string, returning errors on wrongly escaped …\n<code>text/plain</code>\n<code>image/png</code>\nScale the radii of the points in the point cloud generated …\nThe port to listen on.\nAll the 2D positions at which the point cloud shows points.\nAll the 3D positions at which the point cloud shows points.\nPrincipal point of the pinhole camera, i.e. the …\nProject camera-space coordinates into pixel coordinates, …\nRotation via quaternion.\nRotations via quaternion.\nRotations via quaternion.\nRotations via quaternion.\nAngle in radians.\nAngle in radians. One turn is equal to 2π (or τ) radians.\nOptional radii for the arrows.\nOptional radii for the arrows.\nOptional radii for the lines that make up the boxes.\nOptional radii for the lines that make up the boxes.\nOptional radii for the line strips.\nOptional radii for the line strips.\nOptional radii for the points, effectively turning them …\nOptional radii for the points, effectively turning them …\nReturns the most-relevant chunk(s) for the given <code>RangeQuery</code>…\nReturns the most-relevant <em>temporal</em> chunk(s) for the given …\nDetermines the presentation timestamps of all frames …\nReturns the names of all components that <em>should</em> be …\nRecords an arbitrary <code>LogMsg</code>.\nRecords a single <code>PendingRow</code>.\nSet the <code>RecordingId</code> for this context.\nReturns a recursive clear.\nRegisters a <code>ChunkStoreSubscriber</code> so it gets automatically …\nSpecifies the relation this transform establishes between …\nReturns the names of all components that <em>must</em> be provided …\nClears out the current time of the recording, for the …\nThe resolution of the camera sensor in pixels.\nPixel resolution (usually integers) of child image space. …\nGiven a <code>ComponentColumnSelector</code>, returns the corresponding …\nGiven a set of <code>ColumnSelector</code>s, returns the corresponding …\nGiven a <code>TimeColumnSelector</code>, returns the corresponding …\nCreate a new rgb image format with 8 bit per channel with …\nCreate a new rgba image format with 8 bit per channel with …\nRotation via axis + angle.\nRotations via axis + angle.\nRotations via axis + angle.\nRotations via axis + angle.\nRun the Rerun application and return an exit code.\nCheck that this is a valid mesh, e.g. that the vertex …\nCreates a new <code>RecordingStream</code> that is pre-configured to …\nSwaps the underlying sink for a <code>crate::sink::FileSink</code> at …\nSwaps the underlying sink for a <code>crate::sink::FileSink</code> at …\nThe scalar value to log.\nScaling factor.\nScaling factors.\nIf this radius is in scene units, returns the radius in …\nReturns the full schema of the store.\nReturns the filtered schema for the given <code>QueryExpression</code>.\nCreate a new segmentation image format with the given …\nSend a blueprint through this recording stream\nRecords a single <code>Chunk</code>.\nLower-level logging API to provide data spanning multiple …\nCreates a new <code>RecordingStream</code> that is pre-configured to …\nSet a specific element.\nReplaces the currently active recording of the specified …\nSwaps the underlying sink for a new one.\nReplaces the currently active recording of the specified …\nSet the current time of the recording, for the current …\nSet the current time of the recording, for the current …\nSet the current time of the recording, for the current …\nSet the current time of the recording, for the current …\nThe shape of the tensor, including optional dimension …\nThe shape of the tensor, including optional names for each …\nReturns the shape of the tensor with all leading &amp; …\nReturns the unqualified name, e.g. <code>Points3D</code>.\nReturns the unqualified name, e.g. <code>Position2D</code>.\nReturns the unqualified name, e.g. <code>Vec2D</code>.\nReturns short names for a collection of entities based on …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nDifferent destinations for log messages.\nThe length of this dimension.\nThe size of the buffer in bytes.\nThe size of the tensor data, in bytes.\nSpawns a new Rerun Viewer process ready to listen for TCP …\nSpawns a new Rerun Viewer process from an executable …\nSpawns a new Rerun Viewer process from an executable …\nSpawns a new Rerun Viewer process from an executable …\nSpawns a new Rerun Viewer process from an executable …\nReturns <code>None</code> if <code>ALL</code>, otherwise the index.\nCreate a new half-extent with all the same sizes (a …\nReturns the total size of <code>self</code> on the stack, in bytes.\nIs this equals to, or a descendant of, the given path.\nCreates a new <code>RecordingStream</code> that is pre-configured to …\nSwaps the underlying sink for a <code>crate::sink::FileSink</code> …\nSwaps the underlying sink for a <code>crate::sink::FileSink</code> …\n<code>model/stl</code>\nWhat was the store’s generation when it sent that event?\nSet the <code>StoreId</code> for this context.\nThe recommended <code>re_log_types::StoreId</code> to log the data to, …\nWhich <code>ChunkStore</code> sent this event?\nThe <code>StoreInfo</code> associated with this <code>RecordingStream</code>.\nAll the actual 2D line strips that make up the batch.\nAll the actual 3D line strips that make up the batch.\nContents of the text document.\nThe body of the message.\nReturns the currently active recording of the specified …\nTime-related types.\nReturns the min and max times at which data was logged on …\nAt what time(s) should the data be logged to?\nReferences the closest video frame to this timestamp.\nRetrieves 2D image coordinates (x, y) encoded in an …\n<code>[r, g, b, a]</code>\n<code>[r, g, b, a]</code>\nSerializes the batch into an Arrow array.\nSerializes all non-null <code>Component</code>s of this bundle into …\nGiven an iterator of owned or reference values to the …\nSerializes the batch into an Arrow list array with a …\nGiven an iterator of options of owned or reference values …\nGenerates CLI flags from these settings, for external data …\nReturns the absolute datetime if applicable.\nMost significant byte is <code>r</code>, least significant byte is <code>a</code>.\nMost significant byte is <code>r</code>, least significant byte is <code>a</code>.\nReturns the total size of <code>self</code> in bytes, accounting for …\nTransform helpers, for use with <code>archetypes::Transform3D</code>.\nTranslation vector.\nTranslation vectors.\nOptional indices for the triangles that make up the mesh.\nTry to construct a <code>DepthImage</code> from anything that can be …\nTry to construct a <code>SegmentationImage</code> from anything that …\nTry to construct a <code>Tensor</code> from anything that can be …\nIf this radius is in ui points, returns the radius in ui …\nThe style of string to use in a UI\nThe unescaped string.\nScale the same amount along all axis.\nComputes the union of two <code>TimePoint</code>s, keeping the maximum …\nThe default <code>ApplicationId</code> if the user hasn’t set one.\nCreate an unnamed dimension.\nGiven pixel coordinates and a world-space depth, return a …\nThe expected range of values.\nThe values. Should always be a 1-dimensional tensor (i.e. …\nCreate a vector of <code>KeypointPair</code> from an array of tuples.\nAll the vectors for each arrow in the batch.\nAll the vectors for each arrow in the batch.\nAn optional color for each vertex.\nAn optional normal for each vertex.\nThe positions of each vertex.\nAn optional uv texture coordinate for each vertex.\nOptional reference to an entity with a …\nThe w-coordinate, i.e. index 3.\nIf <code>true</code>, the call to <code>spawn</code> will block until the Rerun …\nMethods for spawning the web viewer and streaming the SDK …\nWidth of a box using this half-extent.\nWidth of a box using this half-extent.\nCreate a new dimension with a given size, and the name “…\nStroke width for the corresponding series.\nConfigures the zoom-dependent scalar aggregation.\nA color multiplier applied to the whole mesh.\nUse this image as the albedo texture.\nOptional albedo texture.\nThe format of the <code>albedo_texture_buffer</code>, if any.\nUse this image as the albedo texture.\nVisual length of the 3 axes.\nSets the view coordinates for the camera.\nOptional center positions of the boxes.\nOptional center positions of the boxes.\nOptional center positions of the ellipsoids.\nOptional class Ids for the points.\nOptional class Ids for the points.\nOptional <code>components::ClassId</code>s for the boxes.\nOptional <code>components::ClassId</code>s for the boxes.\nOptional class ID for the ellipsoids.\nOptional <code>components::ClassId</code>s for the lines.\nOptional <code>components::ClassId</code>s for the lines.\nOptional class Ids for the vertices.\nOptional class Ids for the points.\nOptional class Ids for the points.\nThe color of the bar chart\nColor for the corresponding series.\nColor for the corresponding series.\nOptional color to use for the log line in the Rerun Viewer.\nColormap to use for rendering the depth image.\nOptional colors for the points.\nOptional colors for the points.\nOptional colors for the boxes.\nOptional colors for the boxes.\nOptional colors for the ellipsoids.\nOptional colors for the line strips.\nOptional colors for the line strips.\nOptional colors for the points.\nOptional colors for the points.\nThe expected range of depth values.\nUpdate the <code>names</code> of the contained <code>TensorData</code> dimensions.\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nOptionally choose whether the boxes are drawn with lines …\nOptionally choose whether the ellipsoids are drawn with …\nThe distance from the camera origin to the image plane …\nOptional keypoint IDs for the points, identifying them …\nOptional keypoint IDs for the points, identifying them …\nOptional text labels for the arrows.\nOptional text labels for the arrows.\nOptional text labels for the boxes.\nOptional text labels for the boxes.\nOptional text labels for the ellipsoids.\nOptional text labels for the line strips.\nOptional text labels for the line strips.\nOptional text labels for the points.\nOptional text labels for the points.\nThe verbosity level of the message.\nOptional radii for the lines used when the ellipsoid is …\nWhat shape to use to represent the point\nSize of the marker.\n3x3 transformation matrices.\n3x3 transformation matrix.\nThe Media Type of the asset.\nThe Media Type of the asset.\nThe Media Type of the asset.\nThe Media Type of the text.\nAn optional floating point value that specifies how long a …\nDisplay name of the series.\nDisplay name of the series.\nOpacity of the image, useful for layering several images.\nOpacity of the image, useful for layering several images.\nOpacity of the image, useful for layering the segmentation …\nAll the origin (base) positions for each arrow in the …\nAll the origin (base) positions for each arrow in the …\nScale the radii of the points in the point cloud generated …\nPrincipal point of the pinhole camera, i.e. the …\nRotation via quaternion.\nRotations via quaternion.\nRotations via quaternion.\nRotations via quaternion.\nOptional radii for the arrows.\nOptional radii for the arrows.\nOptional radii for the lines that make up the boxes.\nOptional radii for the lines that make up the boxes.\nOptional radii for the line strips.\nOptional radii for the line strips.\nOptional radii for the points, effectively turning them …\nOptional radii for the points, effectively turning them …\nSpecifies the relation this transform establishes between …\nPixel resolution (usually integers) of child image space. …\nConvenience method that takes any kind of (single) …\nRotation via axis + angle.\nRotations via axis + angle.\nRotations via axis + angle.\nRotations via axis + angle.\nScaling factor.\nScaling factors.\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nPasses a reference to the downcasted subscriber to the …\nPasses a mutable reference to the downcasted subscriber to …\nPasses a reference to the downcasted subscriber to the …\nTranslation vector.\nTranslation vectors.\nOptional indices for the triangles that make up the mesh.\nThe expected range of values.\nAn optional color for each vertex.\nAn optional normal for each vertex.\nAn optional uv texture coordinate for each vertex.\nOptional reference to an entity with a …\nStroke width for the corresponding series.\nThe x coordinate, i.e. index 0\nThe x coordinate, i.e. index 0\nThe x-coordinate, i.e. index 0.\nThe x-coordinate, i.e. index 0.\nThe x-coordinate, i.e. index 0.\nThe directions of the [x, y, z] axes.\nThe components of the quaternion in X,Y,Z,W order.\nThe y coordinate, i.e. index 1\nThe y coordinate, i.e. index 1\nThe y-coordinate, i.e. index 1.\nThe y-coordinate, i.e. index 1.\nThe y-coordinate, i.e. index 1.\nYuv matrix coefficients used by this format.\nThe z coordinate, i.e. index 2\nThe z-coordinate, i.e. index 2.\nThe z-coordinate, i.e. index 2.\nInner error explaining why the thread failed to spawn.\nName of the thread\nName used for the executable search.\nExplicit path of the executable (specified by the caller).\nHigh-level error message meant to be printed to the user …\nValue of the <code>PATH</code> environment variable, if any.\n<strong>Archetype</strong>: The annotation context provides additional …\n<strong>Archetype</strong>: 2D arrows with optional colors, radii, labels, …\n<strong>Archetype</strong>: 3D arrows with optional colors, radii, labels, …\n<strong>Archetype</strong>: A prepacked 3D asset (<code>.gltf</code>, <code>.glb</code>, <code>.obj</code>, <code>.stl</code>, …\n<strong>Archetype</strong>: A video binary.\n<strong>Archetype</strong>: A bar chart.\n<strong>Archetype</strong>: 2D boxes with half-extents and optional center, …\n<strong>Archetype</strong>: 3D boxes with half-extents and optional center, …\n<strong>Archetype</strong>: Empties all the components of an entity.\n<strong>Archetype</strong>: A depth image, i.e. as captured by a depth …\n<strong>Archetype</strong>: Spatially disconnect this entity from its …\n<strong>Archetype</strong>: 3D ellipsoids or spheres.\n<strong>Archetype</strong>: An image encoded as e.g. a JPEG or PNG.\n<strong>Archetype</strong>: A monochrome or color image.\n<strong>Archetype</strong>: One or more transforms between the current …\n<strong>Archetype</strong>: 2D line strips with positions and optional …\n<strong>Archetype</strong>: 3D line strips with positions and optional …\n<strong>Archetype</strong>: A 3D triangle mesh as specified by its per-mesh …\n<strong>Archetype</strong>: Camera perspective projection (a.k.a. …\n<strong>Archetype</strong>: A 2D point cloud with positions and optional …\n<strong>Archetype</strong>: A 3D point cloud with positions and optional …\n<strong>Archetype</strong>: A double-precision scalar, e.g. for use for …\n<strong>Archetype</strong>: An image made up of integer <code>components::ClassId</code>…\n<strong>Archetype</strong>: Define the style properties for a line series …\n<strong>Archetype</strong>: Define the style properties for a point series …\n<strong>Archetype</strong>: An N-dimensional array of numbers.\n<strong>Archetype</strong>: A text element intended to be displayed in its …\n<strong>Archetype</strong>: A log entry in a text log, comprised of a text …\n<strong>Archetype</strong>: A transform between two 3D spaces, i.e. a pose.\n<strong>Archetype</strong>: References a single video frame.\n<strong>Archetype</strong>: How we interpret the coordinate system of an …\nConfigures the zoom-dependent scalar aggregation.\nA color multiplier applied to the whole mesh.\nOptional albedo texture.\nThe format of the <code>albedo_texture_buffer</code>, if any.\nVisual length of the 3 axes.\nThe asset’s bytes.\nThe asset’s bytes.\nThe encoded content of some image file, e.g. a PNG or JPEG.\nThe raw depth image data.\nThe raw image data.\nThe raw image data.\nSets the view coordinates for the camera.\nOptional center positions of the boxes.\nOptional center positions of the boxes.\nOptional center positions of the ellipsoids.\nOptional class Ids for the points.\nOptional class Ids for the points.\nOptional <code>components::ClassId</code>s for the boxes.\nOptional <code>components::ClassId</code>s for the boxes.\nOptional class ID for the ellipsoids.\nOptional <code>components::ClassId</code>s for the lines.\nOptional <code>components::ClassId</code>s for the lines.\nOptional class Ids for the vertices.\nOptional class Ids for the points.\nOptional class Ids for the points.\nThe color of the bar chart\nColor for the corresponding series.\nColor for the corresponding series.\nOptional color to use for the log line in the Rerun Viewer.\nColormap to use for rendering the depth image.\nOptional colors for the points.\nOptional colors for the points.\nOptional colors for the boxes.\nOptional colors for the boxes.\nOptional colors for the ellipsoids.\nOptional colors for the line strips.\nOptional colors for the line strips.\nOptional colors for the points.\nOptional colors for the points.\nList of class descriptions, mapping class indices to class …\nThe tensor data\nThe expected range of depth values.\nWhether the entity path at which this is logged is …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nOptionally choose whether the boxes are drawn with lines …\nOptionally choose whether the ellipsoids are drawn with …\nThe format of the image.\nThe format of the image.\nThe format of the image.\nAll half-extents that make up the batch of boxes.\nAll half-extents that make up the batch of boxes.\nFor each ellipsoid, half of its size on its three axes.\nCamera projection, from image coordinates to view …\nThe distance from the camera origin to the image plane …\nOptional keypoint IDs for the points, identifying them …\nOptional keypoint IDs for the points, identifying them …\nOptional text labels for the arrows.\nOptional text labels for the arrows.\nOptional text labels for the boxes.\nOptional text labels for the boxes.\nOptional text labels for the ellipsoids.\nOptional text labels for the line strips.\nOptional text labels for the line strips.\nOptional text labels for the points.\nOptional text labels for the points.\nThe verbosity level of the message.\nOptional radii for the lines used when the ellipsoid is …\nWhat shape to use to represent the point\nSize of the marker.\n3x3 transformation matrices.\n3x3 transformation matrix.\nThe Media Type of the asset.\nThe Media Type of the asset.\nThe Media Type of the asset.\nThe Media Type of the text.\nAn optional floating point value that specifies how long a …\nDisplay name of the series.\nDisplay name of the series.\nOpacity of the image, useful for layering several images.\nOpacity of the image, useful for layering several images.\nOpacity of the image, useful for layering the segmentation …\nAll the origin (base) positions for each arrow in the …\nAll the origin (base) positions for each arrow in the …\nScale the radii of the points in the point cloud generated …\nAll the 2D positions at which the point cloud shows points.\nAll the 3D positions at which the point cloud shows points.\nRotation via quaternion.\nRotations via quaternion.\nRotations via quaternion.\nRotations via quaternion.\nOptional radii for the arrows.\nOptional radii for the arrows.\nOptional radii for the lines that make up the boxes.\nOptional radii for the lines that make up the boxes.\nOptional radii for the line strips.\nOptional radii for the line strips.\nOptional radii for the points, effectively turning them …\nOptional radii for the points, effectively turning them …\nSpecifies the relation this transform establishes between …\nPixel resolution (usually integers) of child image space. …\nRotation via axis + angle.\nRotations via axis + angle.\nRotations via axis + angle.\nRotations via axis + angle.\nThe scalar value to log.\nScaling factor.\nScaling factors.\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nAll the actual 2D line strips that make up the batch.\nAll the actual 3D line strips that make up the batch.\nContents of the text document.\nThe body of the message.\nReferences the closest video frame to this timestamp.\nTranslation vector.\nTranslation vectors.\nOptional indices for the triangles that make up the mesh.\nThe expected range of values.\nThe values. Should always be a 1-dimensional tensor (i.e. …\nAll the vectors for each arrow in the batch.\nAll the vectors for each arrow in the batch.\nAn optional color for each vertex.\nAn optional normal for each vertex.\nThe positions of each vertex.\nAn optional uv texture coordinate for each vertex.\nOptional reference to an entity with a …\nStroke width for the corresponding series.\nThe directions of the [x, y, z] axes.\nThis struct implements a <code>clap::Parser</code> that defines all the …\nWhat bind address IP to use.\nConnects and sends the logged data to a remote Rerun …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>RecordingStream</code> according to the CLI …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSaves the data to an rrd file rather than visualizing it …\nConnects and sends the logged data to a web-based Rerun …\nAn upper limit on how much memory the WebSocket server …\nStart a new Rerun Viewer process and feed it data in …\nLog data to standard output, to be piped into a Rerun …\nWhere are we calling <code>run</code> from?\nCalled from a command-line-input (the terminal).\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDeletes everything related to analytics.\nPrints the current configuration.\nPrints extra information about analytics.\nDisable analytics.\nAssociate an email address with the current user.\nEnable analytics.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConfigure the behavior of our analytics.\nGenerates the Rerun CLI manual (markdown).\nReset the memory of the Rerun Viewer.\nWhat bind address IP to use.\nSet a maximum input latency, e.g. “200ms” or “10s”.\nThis is a hint that we expect a recording to stream in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nHide the normal Rerun welcome screen.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhat TCP port do we listen to (for SDKs to connect to)?\nStart with the puffin profiler running.\nOverride the default graphics backend and for a specific …\nRun the Rerun application and return an exit code.\nStream incoming log events to an .rrd file at the given …\nTake a screenshot of the app and quit. We use this to …\nServe the recordings over WebSocket to one or more Rerun …\nIngest data and then quit once the goodbye message has …\nThe number of compute threads to use.\nPrint version and quit\nOverwrites hardware acceleration option for video decoding.\nStart the viewer in the browser (instead of locally).\nWhat port do we listen to for hosting the web viewer over …\nSet the screen resolution (in logical points), e.g. “…\nWhat port do we listen to for incoming websocket …\nCompacts the contents of one or more .rrd/.rbl …\nCompares the data between 2 .rrd files, returning a …\nFilters out data from .rrd/.rbl files/streams, and writes …\nMerges the contents of multiple .rrd/.rbl files/streams, …\nPrint the contents of one or more .rrd/.rbl files/streams.\nManipulate the contents of .rrd and .rbl files.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGiven a path to an rrd file, builds up a <code>ChunkStore</code> and …\nReturns the argument unchanged.\nIf specified, dumps both .rrd files as tables.\nCalls <code>U::from(self)</code>.\nChecks whether two .rrd files are <em>similar</em>, i.e. not equal …\nIf set, will try to proceed even in the face of IO and/or …\nPaths of the entities to be filtered out.\nNames of the timelines to be filtered out.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPaths to read from. Reads from standard input if none are …\nPath to write to. Writes to standard output if unspecified.\nIf set, will try to proceed even in the face of IO and/or …\nIf set, will try to proceed even in the face of IO and/or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhat is the threshold, in bytes, after which a Chunk …\nWhat is the threshold, in rows, after which a Chunk cannot …\nWhat is the threshold, in rows, after which a Chunk cannot …\nPaths to read from. Reads from standard input if none are …\nPaths to read from. Reads from standard input if none are …\nPath to write to. Writes to standard output if unspecified.\nPath to write to. Writes to standard output if unspecified.\nIf set, will try to proceed even in the face of IO and/or …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPaths to read from. Reads from standard input if none are …\nIf set, print out table contents.\nAsynchronously decodes potentially multiplexed RRD streams …\n<strong>Component</strong>: Policy for aggregation of multiple scalar plot …\n<strong>Component</strong>: A color multiplier, usually applied to a whole …\n<strong>Component</strong>: The annotation context provides additional …\n<code>*</code>\nAverage all points in the range together.\n<strong>Component</strong>: The length of an axis in local units of the …\nX=Back, Y=Down, Z=Left\nX=Back, Y=Down, Z=Right\nX=Back, Y=Left, Z=Down\nX=Back, Y=Left, Z=Up\nX=Back, Y=Right, Z=Down\nX=Back, Y=Right, Z=Up\nX=Back, Y=Up, Z=Left\nX=Back, Y=Up, Z=Right\n<strong>Component</strong>: A binary blob of data.\nThe transform describes how to transform into the child …\n<code>⏺</code>\n<strong>Component</strong>: A 16-bit ID representing a type of semantic …\n<strong>Component</strong>: Configures how a clear operation should behave …\n<strong>Component</strong>: An RGBA color with unmultiplied/separate alpha, …\n<strong>Component</strong>: Colormap for mapping scalar values within a …\n<code>x</code>\nRasmusgo’s Cyan to Yellow colormap\nX=Down, Y=Back, Z=Left\nX=Down, Y=Back, Z=Right\nDraw order used for 2D boxes if no draw order was …\nDraw order used for depth image when they’re not shown …\nDraw order used for images if no draw order was specified.\nDraw order used for 2D lines if no draw order was …\nDraw order used for 2D points if no draw order was …\nDraw order used for segmentation images if no draw order …\nX=Down, Y=Forward, Z=Left\nX=Down, Y=Forward, Z=Right\nX=Down, Y=Left, Z=Back\nX=Down, Y=Left, Z=Forward\nX=Down, Y=Right, Z=Back\nX=Down, Y=Right, Z=Forward\nMany lines are drawn to represent the surface of the shape …\n<strong>Component</strong>: The world-&gt;depth map scaling factor.\n<code>◆</code>\n<strong>Component</strong>: Spatially disconnect this entity from its …\n<code>▼</code>\n<strong>Component</strong>: Draw order of 2D elements. Higher values are …\n<strong>Component</strong>: A path to an entity, usually to reference some …\nX=Forward, Y=Down, Z=Left\nX=Forward, Y=Down, Z=Right\nX=Forward, Y=Left, Z=Down\nX=Forward, Y=Left, Z=Up\nX=Forward, Y=Right, Z=Down\nX=Forward, Y=Right, Z=Up\nX=Forward, Y=Up, Z=Left\nX=Forward, Y=Up, Z=Right\n<strong>Component</strong>: How a geometric shape is drawn and colored.\n<strong>Component</strong>: How much a primitive fills out the available …\n<strong>Component</strong>: A gamma correction value to be used with a …\nA simple black to white gradient.\n<strong>Component</strong>: Half-size (radius) of a 2D box.\n<strong>Component</strong>: Half-size (radius) of a 3D box.\nThe identity rotation, representing no rotation.\nThe identity rotation, representing no rotation.\nThe identity rotation, representing no rotation.\nThe identity rotation, representing no rotation.\n<strong>Component</strong>: A buffer that is known to store image data.\n<strong>Component</strong>: The metadata describing the contents of a …\n<strong>Component</strong>: The distance from the camera origin to the …\nThe Inferno colormap from Matplotlib.\n<strong>Component</strong>: A 16-bit ID representing a type of semantic …\nX=Left, Y=Back, Z=Down\nX=Left, Y=Back, Z=Up\nX=Left, Y=Down, Z=Back\nX=Left, Y=Down, Z=Forward\nX=Down, Y=Right, Z=Forward\nX=Up, Y=Right, Z=Back\nX=Right, Y=Down, Z=Back\nX=Right, Y=Up, Z=Forward\nX=Right, Y=Forward, Z=Down\nX=Right, Y=Back, Z=Up\nX=Left, Y=Forward, Z=Down\nX=Left, Y=Forward, Z=Up\nX=Left, Y=Up, Z=Back\nX=Left, Y=Up, Z=Forward\n<code>◀</code>\n<strong>Component</strong>: A line strip in 2D space.\n<strong>Component</strong>: A line strip in 3D space.\nLinearly interpolate the nearest neighbors, creating a …\nThe Magma colormap from Matplotlib.\n<strong>Component</strong>: Filter used when magnifying an image/texture …\nLines are drawn around the parts of the shape which …\n<strong>Component</strong>: The visual appearance of a point in e.g. a 2D …\n<strong>Component</strong>: Radius of a marker of a point in e.g. a 2D …\nKeep only the maximum values in the range.\n<strong>Component</strong>: A standardized media type (RFC2046, formerly …\nKeep only the minimum values in the range.\nKeep both the minimum and maximum values in the range.\nFind both the minimum and maximum values in the range, …\n<strong>Component</strong>: A display name, typically for an entity or a …\nShow the nearest pixel value.\nThe corner opposite the origin.\nNo aggregation.\n<strong>Component</strong>: Degree of transparency ranging from 0.0 (fully …\nThe transform describes how to transform into the parent …\n<strong>Component</strong>: Camera projection, from image coordinates to …\nThe Plasma colormap from Matplotlib.\n<code>+</code>\n<strong>Component</strong>: 3D rotation represented by a rotation around a …\n<strong>Component</strong>: A 3D rotation expressed as a quaternion that …\n<strong>Component</strong>: A 3D scale factor that doesn’t propagate in …\n<strong>Component</strong>: A 3x3 transformation matrix Matrix that doesn’…\n<strong>Component</strong>: A translation vector in 3D space that doesn’t …\n<strong>Component</strong>: A position in 2D space.\n<strong>Component</strong>: A position in 3D space.\nX=Right, Y=Back, Z=Down\nX=Right, Y=Back, Z=Up\nX=Right, Y=Down, Z=Back\nX=Right, Y=Down, Z=Forward\nX=Right, Y=Forward, Z=Down\nX=Right, Y=Forward, Z=Up\nX=Down, Y=Right, Z=Back\nX=Up, Y=Right, Z=Forward\nX=Right, Y=Down, Z=Forward\nX=Right, Y=Up, Z=Back\nX=Right, Y=Back, Z=Down\nX=Right, Y=Forward, Z=Up\nX=Right, Y=Up, Z=Back\nX=Right, Y=Up, Z=Forward\n<strong>Component</strong>: The radius of something, e.g. a point.\n<strong>Component</strong>: A 1D range, specifying a lower and upper bound.\n<strong>Component</strong>: Pixel resolution width &amp; height, e.g. of a …\n<code>▶</code>\n<strong>Component</strong>: 3D rotation represented by a rotation around a …\n<strong>Component</strong>: A 3D rotation expressed as a quaternion.\n<strong>Component</strong>: A scalar value, encoded as a 64-bit floating …\n<strong>Component</strong>: A 3D scale factor.\n<strong>Component</strong>: Whether the entity’s <code>components::Text</code> label …\nThe surface of the shape is filled in with a solid color. …\n<code>◼️</code>\n<strong>Component</strong>: The width of a stroke specified in UI points.\n<strong>Component</strong>: An N-dimensional array of numbers.\n<strong>Component</strong>: Specifies a concrete index on a tensor …\n<strong>Component</strong>: Specifies which dimension to use for height.\n<strong>Component</strong>: Specifies which dimension to use for width.\n<strong>Component</strong>: A 2D texture UV coordinate.\n<strong>Component</strong>: A string of text, e.g. for labels and text …\n<strong>Component</strong>: The severity level of a text log message.\n<strong>Component</strong>: A 3x3 transformation matrix Matrix.\n<strong>Component</strong>: Specifies relation a spatial transform …\n<strong>Component</strong>: A translation vector in 3D space.\n<strong>Component</strong>: The three indices of a triangle in a triangle …\nGoogle’s Turbo colormap map.\nX=Up, Y=Back, Z=Left\nX=Up, Y=Back, Z=Right\nX=Up, Y=Forward, Z=Left\nX=Up, Y=Forward, Z=Right\nX=Up, Y=Left, Z=Back\nX=Up, Y=Left, Z=Forward\nX=Up, Y=Right, Z=Back\nX=Up, Y=Right, Z=Forward\n<code>▲</code>\n<strong>Component</strong>: Range of expected or valid values, specifying a …\n<strong>Component</strong>: A vector in 2D space.\n<strong>Component</strong>: A vector in 3D space.\n<strong>Component</strong>: Timestamp inside a <code>archetypes::AssetVideo</code>.\n<strong>Component</strong>: How we interpret the coordinate system of an …\nThe Viridis colormap from Matplotlib\nNo translation.\nThe origin.\nNo translation.\nReturns the name as a string slice.\nA long description of the coordinate system, explicitly …\nDescribe using three letters, e.g. <code>RDF</code> for X=Right, …\nThe end of the range.\nThe end of the range.\nThe end of the range.\nThe end of the range.\nX &amp; Y focal length in pixels.\nThe forward-axis.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new pinhole projection matrix from a focal length …\nCreate new timestamp from milliseconds since video start.\nCreate new timestamp from nanoseconds since video start.\nReturns a matrix that transforms from another coordinate …\nReturns a matrix that transforms from RDF to this …\nReturns a matrix that transforms from RUB to this …\nReturns a quaternion that rotates from RUB to this …\nCreate new timestamp from seconds since video start.\nChooses a coordinate system based on just an up-axis.\nReturns whether or not this coordinate system is left or …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new rotation from an axis and an angle.\nCreate a new translation.\nCreate a new range.\nCreate a new rotation from an axis and an angle.\nCreates a new <code>TensorDimensionIndexSelection</code> from the given …\nCreate a new texture coordinate.\nCreate a new translation.\nCreate a new range.\nConstruct a new <code>ViewCoordinates</code> from an array of <code>ViewDir</code>s.\nPrincipal point of the pinhole camera, i.e. the …\nProject camera-space coordinates into pixel coordinates, …\nThe right-axis.\nReturns an error if this does not span all three …\nThe start of the range.\nThe start of the range.\nThe start of the range.\nThe start of the range.\nReturns a matrix that transforms this coordinate system to …\nReturns a matrix that transforms this coordinate system to …\nThe first coordinate, i.e. index 0.\nScale the same amount along all axis.\nGiven pixel coordinates and a world-space depth, return a …\nThe up-axis.\nThe second coordinate, i.e. index 1.\nPrincipal point of the pinhole camera, i.e. the …\nThe x coordinate, i.e. index 0\nThe x coordinate, i.e. index 0\nThe y coordinate, i.e. index 1\nThe y coordinate, i.e. index 1\nThe z coordinate, i.e. index 2\nThe z coordinate, i.e. index 2\nOne of <code>X</code>, <code>Y</code>, <code>Z</code>.\nLeft or right handedness. Used to describe a coordinate …\nLeft-handed coordinate system.\n-X\n-Y\n-Z\n+X\n+Y\n+Z\nRight-handed coordinate system.\nPositive (<code>+</code>) or Negative (<code>-</code>).\nOne of: <code>+X</code>, <code>-X</code>, <code>+Y</code>, <code>-Y</code>, <code>+Z</code>, <code>-Z</code>, i.e. one of the six …\nConvert to a unit-length 3D vector.\nOne of <code>X</code>, <code>Y</code>, <code>Z</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert a dimension index to an axis.\nCreate a <code>Handedness</code> from a boolean.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPositive or negative.\nA range of zero length exactly at the time cursor.\nPut the boundary at the current time cursor.\nBoundary is an absolute value.\n<strong>Datatype</strong>: Angle in radians.\n<strong>Datatype</strong>: Annotation info annotating a class id or …\nBlue, Green, Red\nBlue, Green, Red, Alpha\n<strong>Datatype</strong>: A binary blob of data.\n<strong>Datatype</strong>: A single boolean.\n<strong>Datatype</strong>: The innermost datatype of an image.\n<strong>Datatype</strong>: The description of a semantic Class.\n<strong>Datatype</strong>: A helper type for mapping <code>datatypes::ClassId</code>s to …\n<strong>Datatype</strong>: A 16-bit ID representing a type of semantic …\n<strong>Datatype</strong>: Specified what color components are present in …\nBoundary is a value relative to the time cursor.\nThe range encompassing all time, from -∞ to +∞.\n<strong>Datatype</strong>: A path to an entity in the <code>ChunkStore</code>.\n16-bit IEEE-754 floating point, also known as <code>half</code>.\n16bit IEEE-754 floating point, also known as <code>half</code>.\n32-bit IEEE-754 floating point, also known as <code>float</code> or …\n32bit IEEE-754 floating point, also known as <code>float</code> or …\n64-bit IEEE-754 floating point, also known as <code>double</code>.\n64bit IEEE-754 floating point, also known as <code>double</code>.\n<strong>Datatype</strong>: A single-precision 32-bit IEEE 754 floating …\n<strong>Datatype</strong>: A double-precision 64-bit IEEE 754 floating …\n16-bit signed integer.\n16bit signed integer.\n32-bit signed integer.\n32bit signed integer.\n64-bit signed integer.\n64bit signed integer.\n8-bit signed integer.\n8bit signed integer.\nThe identity matrix.\nRange that expands from negative infinity to positive …\nRange that expands from negative infinity to positive …\n<strong>Datatype</strong>: The metadata describing the contents of a …\nThe boundary extends to infinity.\n<strong>Datatype</strong>: A 16-bit ID representing a type of semantic …\n<strong>Datatype</strong>: A connection between two <code>datatypes::KeypointId</code>s.\nGrayscale luminance intencity/brightness/value, sometimes …\n<strong>Datatype</strong>: A 3x3 Matrix.\n<strong>Datatype</strong>: A 4x4 Matrix.\n<code>NV12</code> (aka <code>Y_UV12</code>) is a YUV 4:2:0 chroma downsampled form …\nThe unit vector <code>[1, 1]</code>, i.e. the multiplicative identity.\nThe unit vector <code>[1, 1, 1]</code>, i.e. the multiplicative …\nThe unit vector <code>[1, 1, 1]</code>, i.e. the multiplicative …\n<strong>Datatype</strong>: Specifieds a particular format of an …\n<strong>Datatype</strong>: A Quaternion represented by 4 real numbers.\nRed, Green, Blue\nRed, Green, Blue, Alpha\n<strong>Datatype</strong>: A 1D range, specifying a lower and upper bound.\n<strong>Datatype</strong>: An Axis-Aligned Bounding Box in 2D space, …\n<strong>Datatype</strong>: An RGBA color with unmultiplied/separate alpha, …\n<strong>Datatype</strong>: 3D rotation represented by a rotation around a …\n<strong>Datatype</strong>: The underlying storage for <code>archetypes::Tensor</code>.\n<strong>Datatype</strong>: An N-dimensional array of numbers.\n<strong>Datatype</strong>: A single dimension within a multi-dimensional …\n<strong>Datatype</strong>: Indexing a specific tensor dimension.\n<strong>Datatype</strong>: Selection of a single tensor dimension.\n<strong>Datatype</strong>: A 64-bit number describing either nanoseconds OR …\n<strong>Datatype</strong>: Visible time range bounds for a specific …\n<strong>Datatype</strong>: Left or right boundary of a time range.\n16-bit unsigned integer.\n16bit unsigned integer.\n32-bit unsigned integer.\n32bit unsigned integer.\n64-bit unsigned integer.\n64bit unsigned integer.\n8-bit unsigned integer.\n8bit unsigned integer.\n<strong>Datatype</strong>: A 16bit unsigned integer.\n<strong>Datatype</strong>: A 32bit unsigned integer.\n<strong>Datatype</strong>: A 64bit unsigned integer.\n<strong>Datatype</strong>: A uint32 vector in 2D space.\n<strong>Datatype</strong>: A uint32 vector in 3D space.\n<strong>Datatype</strong>: A uint vector in 4D space.\n<strong>Datatype</strong>: A string of text, encoded as UTF-8.\n<strong>Datatype</strong>: A 16-byte UUID.\n<strong>Datatype</strong>: A vector in 2D space.\n<strong>Datatype</strong>: A vector in 3D space.\n<strong>Datatype</strong>: A vector in 4D space.\n<strong>Datatype</strong>: Presentation timestamp within a …\n<strong>Datatype</strong>: How we interpret the coordinate system of an …\n<strong>Datatype</strong>: Visible time range bounds for a specific …\nMonochrome Y plane only, essentially a YUV 4:0:0 planar …\nMonochrome Y plane only, essentially a YUV 4:0:0 planar …\n<code>YUY2</code> (aka <code>YUYV</code>, <code>YUYV16</code> or <code>NV21</code>), is a YUV 4:2:2 chroma …\n<code>Y_U_V12</code> is a YUV 4:2:0 fully planar YUV format without …\n<code>Y_U_V12</code> is a YUV 4:2:0 fully planar YUV format without …\n<code>Y_U_V16</code> is a YUV 4:2:2 fully planar YUV format without …\n<code>Y_U_V16</code> is a YUV 4:2:2 fully planar YUV format without …\n<code>Y_U_V24</code> is a YUV 4:4:4 fully planar YUV format without …\n<code>Y_U_V24</code> is a YUV 4:4:4 fully planar YUV format without …\nThe zero vector, i.e. the additive identity.\nThe zero vector, i.e. the additive identity.\nThe zero vector, i.e. the additive identity.\nAbsolute length of the range.\nHow much to rotate around the axis.\nReturns the timestamp as nanoseconds.\nReturns the timestamp as seconds.\nAxis to rotate around.\nThe content/data.\nThe raw bytes representing the UUID.\nThe data type of each channel (e.g. the red channel) of …\nThe value: class name, color, etc.\nThe key: the <code>components::ClassId</code>.\nReturns the matrix column for the given <code>index</code>.\nThe color that will be applied to the annotated entity.\nThe color model represented by this image format.\nL, RGB, RGBA, …\nThe datatype represented by this image format.\nCreate a new depth image format with the given resolution …\nThe dimension number to select.\nThe dimension number to select.\nHigh time boundary for sequence timeline.\nReturns the correct time assuming this boundary is an end …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate new timestamp from nanoseconds since video start.\nFrom a speicifc pixel format.\nDetermine if the image format has an alpha channel.\nThe height of the image in pixels.\n<code>datatypes::ClassId</code> or <code>datatypes::KeypointId</code> to which this …\nThe index along the dimension to use.\nThe <code>datatypes::AnnotationInfo</code> for the class.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInvert the direction of the dimension.\nDetermine if the image format represents floating point …\nThe first point of the pair.\nThe second point of the pair.\nThe <code>datatypes::AnnotationInfo</code> for all of the keypoints.\nThe connections between keypoints.\nThe label that will be shown in the UI.\nThe name of this dimension, e.g. “width”, “height”…\nCreate a new vector.\nCreate a new vector.\nCreate a new vector.\nNumber of bytes for the whole image.\nUsed mainly for chroma downsampled formats and differing …\nAngle in radians. One turn is equal to 2π (or τ) radians.\nTime range to use for this timeline.\nCreate a new rgb image format with 8 bit per channel with …\nCreate a new rgba image format with 8 bit per channel with …\nCreate a new segmentation image format with the given …\nAssign a new x\nAssign a new y\nThe shape of the tensor, including optional names for each …\nThe length of this dimension.\nReturns a new <code>Blob</code> that is a slice of this buffer starting …\nLow time boundary for sequence timeline.\nReturns the time assuming this boundary is a start …\nName of the timeline this applies to.\nThe w-coordinate, i.e. index 3.\nThe width of the image in pixels.\nThe x-coordinate, i.e. index 0.\nThe x-coordinate, i.e. index 0.\nThe x-coordinate, i.e. index 0.\nThe range of the X-axis (usually left and right bounds).\nThe y-coordinate, i.e. index 1.\nThe y-coordinate, i.e. index 1.\nThe y-coordinate, i.e. index 1.\nThe range of the Y-axis (usually top and bottom bounds).\nThe z-coordinate, i.e. index 2.\nThe z-coordinate, i.e. index 2.\nA linear interpolator that bounces between <code>a</code> and <code>b</code> as <code>t</code> …\nCreate a spiral of points with colors along the Z axis.\nReturns sRGB polynomial approximation from Turbo color …\nGiven two 3D vectors <code>from</code> and <code>to</code>, linearly interpolates …\nLinear interpolator.\nLinearly interpolates from <code>a</code> through <code>b</code> in <code>n</code> steps, …\nThis format is used for space-efficient color …\n3 hexadecimal digits, one for each of the r, g, b channels\n4 hexadecimal digits, one for each of the r, g, b, a …\n6 hexadecimal digits, two for each of the r, g, b channels\n8 hexadecimal digits, one for each of the r, g, b, a …\nA wrapper around Color32 that converts to and from a …\nHue, saturation, value, alpha. All in the range [0, 1]. No …\nLike Hsva but with the <code>v</code> value (brightness) being gamma …\nAn ugly color that is planned to be replaced before making …\n0-1 linear space <code>RGBA</code> color with premultiplied alpha.\nalpha 0-1. A negative value signifies an additive color …\nalpha 0-1. A negative value signifies an additive color …\nReturns an additive version of self\nReturn an additive version of this color (alpha = 0)\nRetrieves the inner <code>Color32</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTransparent black\nParses a color from a hex string.\nFrom <code>sRGBA</code> with premultiplied alpha.\nFrom linear RGBA with premultiplied alpha\nFrom <code>sRGBA</code> WITHOUT premultiplied alpha.\nFrom linear RGBA without premultiplied alpha\nFrom <code>sRGBA</code> with premultiplied alpha\nFrom <code>sRGBA</code> without premultiplied alpha\nParses a string as a hex color without the leading <code>#</code> …\nTransparent white\nlinear [0, 1] -&gt; gamma [0, 1] (not clamped). Works for …\nMultiply with 0.5 to make color half as opaque, …\nlinear [0, 1] -&gt; gamma [0, 255] (clamped). Values outside …\nhue 0-1\nhue 0-1\nAll ranges in 0-1, rgb is linear.\nHow perceptually intense (bright) is the color?\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs the alpha=0 ?\nIs the alpha=0 ?\nLerp this color towards <code>other</code> by <code>t</code> in gamma space.\ngamma [0, 255] -&gt; linear [0, 1].\nlinear [0, 255] -&gt; linear [0, 1]. Useful for alpha-channel.\ngamma [0, 1] -&gt; linear [0, 1] (not clamped). Works for …\nMultiply with 0.5 to make color half as opaque in linear …\nlinear [0, 1] -&gt; linear [0, 255] (clamped). Useful for …\nMultiply with e.g. 0.5 to make us half transparent\nAll ranges in 0-1, rgb is linear.\nsaturation 0-1\nsaturation 0-1\nCheap and ugly. Made for graying out disabled <code>Ui</code>s.\nPremultiplied RGBA\nPremultiplied RGBA\nFormats the color as a hex string.\nConverts to floating point values in the range 0-1 without …\nReturns an opaque version of self\nReturns an opaque version of self\nTo linear space rgba in 0-1 range.\nunmultiply the alpha\nTo gamma-space 0-255.\nunmultiply the alpha\nPremultiplied RGBA\nPremultiplied RGBA\nvalue 0-1, in gamma-space (~perceptually even)\nvalue 0-1\n<code>Storage</code> key used for app\nA request related to <code>accesskit</code>.\nImplement this trait to write apps that can be compiled …\nSomething went wrong in user code when creating the app.\nThis is how your app is created.\nUse WebGL2 first.\nUse WebGL1 first\nData that is passed to <code>AppCreator</code> that can be used to …\nContains the error value\nThe different problems that can occur when trying to run …\nObject that allows building the event loop.\nHook into the building of an event loop before it is run\nRepresents the surroundings of your app.\nSelects the level of hardware graphics acceleration.\nInformation about the integration passed to the use app …\nOptions controlling the behavior of a native window.\nDo NOT use graphics acceleration.\nContains the success value\nPrefer graphics acceleration, but fall back to software.\nWhat rendering backend to use.\nA repaint is requested.\nRequire graphics acceleration.\nShort for <code>Result&lt;T, eframe::Error&gt;</code>.\nA place where you can store custom data in a way that …\nThe custom even <code>eframe</code> uses with the <code>winit</code> event loop.\nForce Use WebGL1.\nForce use WebGL2.\nWebGL Context options\nUse <code>egui_wgpu</code> renderer for <code>wgpu</code>.\nAn error from <code>wgpu</code>.\nAttributes used when creating a window.\nHook into the building of a the native window.\nAn error from <code>winit</code>.\nAn error from <code>winit::event_loop::EventLoop</code>.\nTime between automatic calls to <code>Self::save</code>\nBuilds a new event loop.\nOn desktop: make the window position to be centered at …\nBackground color values for the app, e.g. what is sent to …\nSeconds of cpu usage (in seconds) on the previous frame.\nSets the number of bits in the depth buffer.\nControls whether to apply dithering to minimize banding …\nThe egui Context.\nHook into the building of an event loop before it is run.\nwrite-to-disk or similar\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the value for the given key.\nGet and deserialize the RON stored at the given key.\nSpecify whether or not hardware acceleration is preferred, …\nHelpers for loading <code>egui::IconData</code>.\nInformation about the integration.\nInformation about the surrounding environment.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if you are in a web environment.\nSet the level of the multisampling anti-aliasing (MSAA).\nStart building a new event loop.\nInitializes new attributes with default values.\nCalled once on shutdown, after <code>Self::save</code>.\nGet the parent window stored on the attributes.\nControls whether or not the egui memory (window positions …\nControls whether or not the native window position and …\nThe folder where <code>eframe</code> will store the app state. If not …\nA hook for manipulating or filtering raw input before it …\nWhat rendering backend to use.\nThis controls what happens when you close the main eframe …\nThis is how you start a native (desktop) app.\nThe simplest way to get started when writing a native app.\nCalled on shutdown, and perhaps at regular intervals. …\nSet the value for the given key.\nSerialize the given value as RON and store with the given …\nSets the number of bits in the stencil buffer.\nA place where you can store custom data in a way that …\nYou can use the storage to restore app state(requires the …\nThe folder where <code>eframe</code> will store its state.\nA place where you can store custom data in a way that …\nGet whether the window will support transparency.\nCalled each time the UI needs repainting, which may be …\nControls the native window of the root viewport.\nTurn on vertical syncing, limiting the FPS to the display …\nConfigures wgpu instance/device/adapter/surface creation …\nThe underlying WGPU render state.\nThe underlying WGPU render state.\nHook into the building of a window.\nWhether the window will be initially focused or not.\nSets whether the background of the window should be …\nPrevents the window contents from being captured by other …\nModifies the cursor icon of the window.\nSets whether the window should have a border, a title bar, …\nSets the enabled window buttons.\nSets whether the window should be put into fullscreen upon …\nRequests the window to be of specific dimensions.\nSets the maximum dimensions a window can have.\nRequest that the window is maximized upon creation.\nSets the minimum dimensions a window can have.\nBuild window with parent window.\nSets a desired initial position for the window.\nSets whether the window is resizable or not.\nBuild window with resize increments hint.\nSets a specific theme for the window.\nSets the initial title of the window in the title bar.\nSets whether the background of the window should be …\nSets whether the window will be initially visible or …\nSets the window icon.\nSets the window level.\nWhat the cumulative pass number was when the repaint was …\nWhat to repaint.\nWhen to repaint.\nAll egui keys\nIndicate whether a popup will be shown above or below the …\nAn assistive technology (e.g. screen reader) requested an …\nIndicated an alias, e.g. a shortcut\nleft/center/right or top/center/bottom alignment for e.g. …\nTwo-dimension alignment, e.g. <code>Align2::LEFT_TOP</code>.\nSomething can be scrolled in any direction (panned).\nAlways clamp values, even existing ones.\nAn area on the screen that can be moved by dragging.\nState of an <code>Area</code> that is persisted between frames.\nConvenience for <code>Self::Max</code>\nPainted behind all floating windows\n<code>\\</code>\n`, also known as “backquote” or “grave”\nBegin resizing the viewport with the left mouse button …\nNormal labels. Easily readable, doesn’t take up too much …\nA bottom <code>crate::TopBottomPanel</code>.\nClickable button with text.\nButtons. Maybe slightly bigger than <code>Self::Body</code>.\nLoad the image from some raw bytes.\nOn Mac: ⌘ Command key, elsewhere: Ctrl key\nBackend-specific painting.\nTouch operation has been disrupted by something (various …\nCancel the closing that was signaled by …\nHover a cell in a table\nHorizontal or vertical center.\nA panel that covers the remainder of the screen, i.e. …\nA <code>crate::CentralPanel</code>.\nBoolean on/off control with text label.\nCircle with optional outline and fill.\nStretches the edge pixels to fill beyond the texture’s …\nA <code>Mesh</code> or <code>PaintCallback</code> within a clip rectangle.\nThe user clicked the close-button on the window, or …\nRequest this viewport to be closed.\nPopup will be closed on click anywhere, inside or outside …\nPopup will be closed if the click happened somewhere else …\nA header which can be collapsed/expanded, revealing a …\nThe response from showing a <code>CollapsingHeader</code>.\n<code>:</code>\nRGBA image.\nThis format is used for space-efficient color …\nA 2D RGBA color image in RAM.\nThis should be used on the windows that are popped up by …\nA drop-down selection menu with a descriptive label.\n<code>,</code>\nIME composition ended with this final result.\nYour handle to egui.\nA context menu is available\nThe integration detected a “copy” event (e.g. Cmd+C).\nIndicate that a copy will be made\nRequest an elevated amount of animations and flair for the …\nFor precision work\nA cubic Bézier Curve.\nA mouse cursor icon.\nWill probably not work as expected!\nThe integration detected a “cut” event (e.g. Cmd+X).\n+Y\nDark mode: light text on a dark background.\nDark mode: light text on a dark background.\nDebug layer, always painted last / on top\nShow window decorations, i.e. the chrome around the content\nDefault text style - will use <code>TextStyle::Body</code>, unless …\nNormal cursor icon, whatever that is.\nA viewport run independently from the parent viewport.\nThe user-code that shows the ui in the viewport, used for …\nA desktop feature. This can include a single window …\nThis is a dialog window.\nLayout direction, one of <code>LeftToRight</code>, <code>RightToLeft</code>, <code>TopDown</code>…\nNotifies when the IME was disabled.\nThis indicates the window is being dragged. This property …\nA dock or panel feature. Typically a Window Manager would …\nTracking of drag-and-drop payload.\nA numeric value that you can change by dragging the …\nA dropdown menu that usually appears when the user clicks …\nA file dropped into egui.\nInfinite range that contains everything, from -∞ to …\nInfinite rectangle that contains every point.\nUsers cannot enter new values that are outside the range.\nEllipse with optional outline and fill.\nThe fallback, when the egui integration doesn’t support …\nSet which window buttons are enabled\nNotifies when the IME was enabled.\nUser lifted the finger or pen from the surface, or slid …\n<code>=</code>\nAn input event generated by the integration.\nControls which events that a focused widget will have …\nFit the image to an exact size.\nThe text should expand the <code>Ui</code> size when reaching its …\nThe first extra mouse button on some mice. In web …\nThe second extra mouse button on some mice. In web …\nBring the window into focus (native only).\nUsed for the font texture.\nA <code>.ttf</code> or <code>.otf</code> file and a font face index.\nDescribes the font data and the sizes to use.\nFont of unknown size.\nHow to select a sized font.\nDirectly select size and font family\nA single-channel image designed for the font texture.\nA way to select <code>FontId</code>, either by picking one directly or …\nExtra scale and vertical tweak to apply to all text of a …\nPopups, menus etc that should always be painted on top of …\nFit the image to a fraction of the available size.\nAdd a background, frame and/or margin to a rectangular …\nA <code>crate::Frame</code>.\nWhat egui emits each frame from <code>crate::Context::run</code>.\nTurn borderless fullscreen on/off.\nText that has been laid out, ready for painting.\nUse exactly this galley when painting the text.\nAn <code>crate::Area</code> that is not of any other kind.\nStores the durations between each frame of a gif\nThe thing you are hovering can be grabbed\nYou are grabbing the thing you are hovering\nA simple grid layout.\nHeading. Probably larger than <code>Self::Body</code>.\nScale to height.\nQuestion mark\nA file about to be dropped into egui.\nA clickable hyperlink, e.g. to …\nSet the IME cursor editing area.\nThe window icon.\nImage data for an application icon.\nA function that paints the <code>ComboBox</code> icon\negui tracks widgets frame-to-frame using <code>Id</code>s.\n<code>IdMap&lt;V&gt;</code> is a <code>HashMap&lt;Id, V&gt;</code> optimized by knowing that <code>Id</code> …\nClicks will be ignored. Popup might be closed manually by …\nA widget which displays an image.\nA clickable image within a frame.\nAn image stored in RAM.\nThis type determines how the image should try to fit …\nThis type determines the constraints on how the size of an …\nThis type tells the <code>Ui</code> how to load an image.\nIME Event\nIME event.\nA viewport run inside the parent viewport.\nViewport for immediate rendering.\nRender the given viewport, calling the given ui callback.\nRequest a standard amount of attention-grabbing actions.\nReturned when we wrap some ui-code and want to return both …\nShould be bigger than 0\nInput state that egui updates each frame.\nKeyboard keys.\nA key was pressed or released.\nA keyboard shortcut, e.g. <code>Ctrl+Alt+W</code>.\nConvenience for <code>Self::Min</code>\n-X\nLinear magnification and minification.\nLinear magnification and minification, but with the …\nLinear magnification and minification, but with the …\nStatic text.\nAn identifier for a paint layer. Also acts as an …\nThe layout of a <code>Ui</code>, e.g. “vertical &amp; centered”.\nUse this <code>LayoutJob</code> when laying out the text.\nA left <code>crate::SidePanel</code>.\nLight mode: dark text on a light background.\nLight mode: dark text on a light background.\nNumber of lines\nA line between two points.\nLinearly interpolate the nearest neighbors, creating a …\nClickable text, that looks like a hyperlink.\ne.g. a hyperlink\nThe Mac ⌘ Command key\nTextures allocated using <code>TextureManager</code>.\nA value for all four sides of a rectangle, often used to …\nRight or bottom.\nShould be bigger than 0\nMaximize or unmaximize window.\nThe data that egui persists between frames.\nThe content of a regular menu.\nPinnable menu windows. “Torn off” from the main …\nTextured triangles in two dimensions.\nA general triangle mesh.\nThe tertiary mouse button is usually the middle mouse …\nNormal moveable windows that you reorder by click\nLeft or top.\nShould be bigger than 0\n<code>-</code>\nMirrors the texture with each repetition, creating …\nNames of different modifier keys.\nState of the modifier keys. These must be fed to egui.\nA font where each character is the same width (<code>w</code> is the …\nSame size as <code>Self::Body</code>, but used when monospace is …\nThe mouse moved, the units are unspecified. Represents the …\nEnable mouse pass-through: mouse clicks pass through the …\nA raw mouse wheel event as sent by the backend.\nThe unit associated with the numeric value of a mouse …\nUser moves a touch point along the surface. This event is …\nOmnidirectional move icon (e.g. arrows in all cardinal …\nAll you probably need to know about a multi-touch gesture.\nAlt, Ctrl, Shift, Cmd\nAn invalid <code>Rangef</code> filled with <code>f32::NAN</code>.\nAn invalid <code>Rect</code> filled with <code>f32::NAN</code>.\nNearest magnification and minification.\nNearest magnification and minification, but with the …\nNearest magnification and minification, but with the …\nNo shadow at all.\nSame as <code>Stroke::default</code>.\nThe inverse of <code>Self::EVERYTHING</code>: stretches from positive …\nThe inverse of <code>Self::EVERYTHING</code>: stretches from positive …\nA special <code>Id</code>, in particular as a key to <code>crate::Memory::data</code>\nNumber of pointer buttons supported by egui, i.e. the …\nOne of the names in <code>FontDefinitions::families</code>.\nA user-chosen style, found in <code>Style::text_styles</code>.\nShow the nearest pixel value.\nValues are not clamped.\nCan’t drop here\nShow no cursor\nPaint nothing. This can be useful as a placeholder.\nThis is a normal, top-level window.\nForbidden\nThe window is a notification. This property is typically …\n<code>0</code> (from main row or numpad)\n<code>1</code> (from main row or numpad)\n<code>2</code> (from main row or numpad)\n<code>3</code> (from main row or numpad)\n<code>4</code> (from main row or numpad)\n<code>5</code> (from main row or numpad)\n<code>6</code> (from main row or numpad)\n<code>7</code> (from main row or numpad)\n<code>8</code> (from main row or numpad)\n<code>9</code> (from main row or numpad)\nExtends <code>f32</code>, <code>Vec2</code> etc with <code>at_least</code> and <code>at_most</code> as aliases …\nWhat URL to open, and how.\nSome global options that you can read and write.\nDifferent layer categories\nFit the image to its original size, scaled by some factor.\nIf you cannot fit any of the above slots.\nSet the outer position of the viewport, i.e. moves the …\nNumber of pages\nIf you want to paint some 3D shapes inside an egui region, …\nInformation passed along with <code>PaintCallback</code> (…\nHelper to paint shapes and text to a specific region on a …\nSpecial layer between panels and windows\nThe integration detected a “paste” event (e.g. Cmd+V).\nA series of lines between points. The path can have a …\n<code>.</code>\nA picker, such as color picker.\n<code>|</code>, a vertical bar\nThe non-rendering part of what egui emits each frame.\n<code>+</code>\nNumber of ui points (logical pixels)\nMouse button (or similar for touch input)\nA mouse button was pressed or released (or a touch started …\nThe mouse left the screen, or the last/primary touch input …\nThe mouse or touch moved to a new place.\nMouse or touch state.\nPointing hand, used for e.g. web links\nThe content of a popup menu.\nDetermines popup’s close behavior\nA popup menu that usually appears when the user right …\nA position on screen.\nA new IME candidate is being suggested.\nThe primary mouse button is usually the left one.\nShows that processing is being done, but that the program …\nA simple progress bar.\nA font where some characters are wider than other (e.g. ‘…\nA quadratic Bézier Curve.\n<code>?</code>\n<code>&#39;</code>\nConvenience for <code>Self::Max</code>\n+X\nThe <code>ViewportId</code> of the root viewport.\nThe <code>ViewportIdPair</code> of the root viewport, which is its own …\nOne out of several alternatives, either selected or not.\nA group of radio buttons.\nInclusive range of floats, i.e. <code>min..=max</code>, but more …\nWhat the integrations provides to egui at the start of …\nA rectangular region of space.\nRectangle with optional outline and fill.\nWhat called <code>Context::request_repaint</code> or …\nTiles the texture across the surface, repeating it …\nRequest a copy of the current selection.\nRequest cut of the current selection\nRequest a paste from the clipboard to the current focused …\nInformation given to the backend about when it is time to …\nIf the window is unfocused, attract the user’s attention …\nReset the attention request and interrupt related …\nCan the window be resized?\nA region that can be resized by dragging the bottom right …\nA <code>crate::Resize</code>.\nResize a column\nResize something rightwards (e.g. when dragging the …\nHorizontal resize <code>-</code> to make something wider or more narrow …\nShould be bigger than 0\nDiagonal resize <code>/</code> (right-up to/from left-down)\nResize something up (e.g. when dragging the top edge of …\nResize something up and right (e.g. when dragging the …\nResize something up and left (e.g. when dragging the …\nDiagonal resize <code>\\</code> (left-up to/from right-down)\nResize a row\nResize something downwards (e.g. when dragging the bottom …\nResize something down and right (e.g. when dragging the …\nResize something down and left (e.g. when dragging the …\nVertical resize <code>|</code> (up-down or down-up)\nResize something leftwards (e.g. when dragging the left …\nThe result of adding a widget to a <code>Ui</code>.\n0-1 linear space <code>RGBA</code> color with premultiplied alpha.\nText and optional style choices for it.\nA right <code>crate::SidePanel</code>.\nThe root viewport; i.e. the original window.\nHow rounded the corners of things should be\n⌥ ⌃ ⇧ ⌘ - NOTE: not supported by the default egui …\nScale original size by some factor.\nThe reply of a screenshot requested with …\nTake a screenshot.\nAdd vertical and/or horizontal scrolling to a contained <code>Ui</code>.\nA <code>crate::ScrollArea</code>.\nThe secondary mouse button is usually the right one, and …\nOne out of several alternatives, either selected or not. …\n<code>;</code>\nWhat sort of interaction is a widget sensitive to?\nA visual separator. A horizontal or vertical line …\nThe color and fuzziness of a fuzzy shape.\nA paint primitive such as a circle or a piece of text. …\nA panel that covers the entire left or right side of a <code>Ui</code> …\nPut some widgets on the left and right sides of a ui.\nScale to size.\nGiven as a hint for image loading requests.\n<code>/</code>\nControl a number with a slider.\nSpecifies how values in a <code>Slider</code> are clamped.\nSpecifies the orientation of a <code>Slider</code>.\nUsed when small text is needed.\nControls the sizes and distances between widgets.\nA spinner widget used to indicate loading.\nThe window is a splash screen displayed as an application …\nUser just placed a touch point on the touch surface\nMoves the window with the left mouse button until the …\nDescribes the width and color of a line.\nSpecifies the look and feel of egui.\nUse a <code>TextStyle</code> to look up the <code>FontId</code> in <code>Style::text_styles</code>…\nFollow the system’s theme preference.\nConvenience for <code>Self::Min</code>\nA table cell (from the <code>egui_extras</code> crate).\nText.\nText input, e.g. via keyboard.\nText caret, e.g. “Click here to edit text”\nTrait constraining what types <code>crate::TextEdit</code> may use as …\nA text region that the user can edit the contents of.\nFormatting option for a section of text.\nAlias for a <code>FontId</code> (font of a certain size).\nHow to wrap and elide text.\nLoad the image from an existing texture.\nHow the texture texels are filtered.\nUsed to paint images.\nWhat texture to use in a <code>Mesh</code> mesh.\nHow the texture texels are filtered.\nDefines how textures are wrapped around objects when …\nWhat has been allocated and freed during the last period.\nDark or Light theme.\nThe user’s theme preference.\nSet the window title.\nToolbar windows. “Torn off” from the main application.\nThings floating on top of everything else, like tooltips. …\nA tooltip, as shown by e.g. <code>crate::Response::on_hover_ui</code>.\nA tooltip window. Usually used to show additional …\nA panel that covers the entire top or bottom of a <code>Ui</code> or …\nA top <code>crate::TopBottomPanel</code>.\nOn touch screens, report this <em>in addition to</em> …\nthis is a <code>u64</code> as values of this kind can always be …\nUnique identification of a touch occurrence (finger or pen …\nIn what phase a touch event is in.\nTurn the window transparent or not.\nThe text should be elided using “…” when reaching …\n-Y\nThis is what you use to place widgets.\nBuild a <code>Ui</code> as the chlild of another <code>Ui</code>.\nWhat kind is this <code>crate::Ui</code>?\nInformation about a <code>crate::Ui</code> and its parents.\nInformation about a <code>crate::Ui</code> to be included in the …\nIterator that walks up a stack of <code>StackFrame</code>s.\nUser-chosen tags.\nLoad the image from a URI, e.g. …\nYour own texture, defined in any which way you want. The …\nTypes of attention to request from a user when a native …\nA small persistent utility window, such as a palette or …\nRecursively nest more shapes - sometimes a convenience to …\nA vector has a direction and length. A <code>Vec2</code> is often used …\nTwo bools, one for each axis (X and Y).\nVertical text caret, e.g. “Click here to edit vertical …\nControl the building of a new egui viewport (i.e. native …\nThe different types of viewports supported by egui.\nAn output viewport-command from egui to the backend, e.g. …\nAn input event from the backend into egui, about a …\nA unique identifier of a viewport.\nA fast hash map from <code>ViewportId</code> to <code>T</code>.\nA pair of <code>ViewportId</code>, used to identify a viewport and its …\nA fast hash set of <code>ViewportId</code>.\nInformation about the current viewport, given as input …\nDescribes a viewport, i.e. a native window.\nSet the visibility of the window.\nControls the visual style (colors etc) of egui.\nNot yet ready, try later.\nAnything implementing Widget can be added to a <code>Ui</code> with …\nDescribes a widget such as a <code>crate::Button</code> or a …\nUsed to store each widget’s Id, Rect and Sense each …\nStores the <code>WidgetRect</code>s of all widgets generated during a …\nThis is how you specify text for a widget.\nThe different types of built-in widgets in egui\nHelper so that you can do e.g. <code>TextEdit::State::load</code>.\nScale to width.\nBuilder for a floating window which can be dragged, …\nA <code>crate::Window</code>.\nThe native window gained or lost focused (e.g. the user …\nSet window to be always-on-top, always-on-bottom, or …\nThe text should wrap to the next line when reaching the <code>Ui</code> …\nRight\nDown\nThe zero position, the origin. The top left corner in a …\nA <code>Rect</code> filled with zeroes.\nNo rounding on any corner.\nZoom scale factor this frame (e.g. from a pinch gesture).\nEnhance!\nLet’s get a better overview\nFor use in tests; especially doctests.\nFor use in tests; especially doctests.\nIf AccessKit support is active for the current frame, get …\nThe difference in the widget tree since last frame.\nAdd a <code>Widget</code> to this <code>Ui</code> at a location dependent on the …\nIt is up to the caller to make sure there is room for this.\nAdd a new bytes loader.\nUniformly colored rectangle.\nAdd a single <code>Widget</code> that is possibly disabled, i.e. greyed …\nAdd a section that is possibly disabled, i.e. greyed out …\nAdd a new image loader.\nRectangle with a texture and color.\nAdd a <code>Widget</code> to this <code>Ui</code> with a given size. The widget will …\nAdd extra space before the next widget.\nAdd a new texture loader.\nAdd a triangle.\nAdd a single <code>Widget</code> that is possibly invisible.\nAdd a section that is possibly invisible, i.e. greyed out …\nAllocate a rect without interacting with it.\nHow imprecise do we expect the mouse/touch input to be? …\nReturns a range of given size within a specified range.\ne.g. center a size within a given frame\nAre both <code>x</code> and <code>y</code> true?\nMutate the <code>Style</code>s used by all subsequent windows, panels …\nAllocate at least as much space as needed, and interact …\nReturns a <code>Rect</code> with exactly what you asked for.\nAllocated space (<code>UiBuilder::max_rect</code>) and then add content …\nConvenience function to get a region to paint on.\nAllocate a specific part of the <code>Ui</code>.\nAllocate space for a widget and check for interaction in …\nReserve this much space and move the cursor. Returns where …\nAllocated the given space and then adds content to that …\nAllocated the given rectangle and then adds content to …\nAllocated the given space and then adds content to that …\nEither of the alt keys are down (option ⌥ on Mac).\nIf true and scrolling is enabled for only one direction, …\nSet anchor and distance.\nSet anchor and distance.\nUsed e.g. to anchor a piece of text to a part of the …\nUse this anchor to position something around <code>pos</code>, e.g. …\nMeasures the angle of the vector.\nCreate a unit vector with the given CW angle (in radians).\nWhether to display a loading animation when progress <code>&lt; 1</code>. …\nReturns a value in the range [0, 1], to indicate “how on…\nLike <code>Self::animate_bool</code>, but uses an easing function that …\nLike <code>Self::animate_bool</code> but allows you to control the …\nLike <code>Self::animate_bool</code> but allows you to control the …\nLike <code>Self::animate_bool</code> but allows you to control the …\nSmoothly animate an <code>f32</code> value.\nShould the scroll area animate <code>scroll_to_*</code> functions?\nHow many seconds a typical animation should last.\nWere there any type of click this frame?\nIs any pointer button currently down?\nTrue if any member is NaN.\nTrue if any member is NaN.\nTrue if any member is NaN.\nIs any popup open?\nWas any pointer button pressed (<code>!down -&gt; down</code>) this frame?\nWas any pointer button released (<code>down -&gt; !down</code>) this frame?\nTrue if there currently are any fingers touching egui.\nThis is wayland only. See <code>Self::with_app_id</code>.\nAppend all the indices and vertices of <code>other</code> to <code>self</code>.\nAdd on new input.\nAdd on new output.\nAdd on new output.\nAdd on new output.\nAppend all the indices and vertices of <code>other</code> to <code>self</code> …\nAppend to an existing <code>LayoutJob</code>\nObtain the previous rectangle of an area.\nAccess memory of the <code>Area</code>s, such as <code>Window</code>s.\nAccess memory of the <code>Area</code>s, such as <code>Window</code>s.\nShow an arrow starting at <code>origin</code> and going in the …\nFlip <code>min</code> and <code>max</code> if needed, so that <code>min &lt;= max</code> after.\nA view of the underlying data as <code>&amp;[u8]</code>\nA view of the underlying data as <code>&amp;mut [u8]</code>\nThe argument is the rectangle of the shadow caster.\nReturns this buffer as a <code>str</code>.\nwidth / height\nWidth / height\nMore readable version of <code>self.max(lower_limit)</code>\nMake sure each corner has a rounding of at least this.\nMore readable version of <code>self.min(upper_limit)</code>\nMake sure each corner has a rounding of at most this.\nSame as <code>ui.next_auto_id().with(id_salt)</code>\nFor each axis, should the containing area shrink if the …\nNot resizable, just takes the size of its contents. Also …\nNot manually resizable, just takes the size of its …\nThe available height at the moment, given the current …\nHow much space is still available after panels has been …\nIn case of a wrapping layout, how much space is left on …\nThe available space at the moment, given the current …\nIn case of a wrapping layout, how much space is left on …\nThe available width at the moment, given the current …\nFill-color behind the text.\nPrefer using <code>RichText</code> directly!\nWhen using this font’s metrics to layout a row, shift …\nCursor to the first character.\nBegin a dynamically colored frame.\nSee <code>Self::begin_pass</code>.\nAn alternative to calling <code>Self::run</code>.\nA solid color to put behind the image. Useful for …\nA solid color to put behind the image. Useful for …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nThe width of the blur, i.e. the width of the fuzzy …\nNone iff collapsed.\nNone iff collapsed.\nCreate a bi-directional (horizontal and vertical) scroll …\nThe id should be globally unique, e.g. …\n<code>max.y</code>\n<code>max.y</code>\nPlace elements vertically, bottom up.\nThe window attrbiutes such as title, position, size, etc.\nList of all the builtin font names used by <code>epaint</code>.\nUsage: <code>if ui.button(&quot;Click me&quot;).clicked() { … }</code>\nWas the given pointer button given clicked this frame?\nWas the button given double clicked this frame?\nIs this button currently down?\nShow a background behind buttons.\nButton size is text size plus this on each side\nWas the button given pressed this frame?\nWas the button given released this frame?\nWas the button given triple clicked this frame?\n<code>width x height x bytes_per_pixel</code>\nSet by the <code>eframe</code> web backend.\nReturns the amount of memory used by the vertices and …\nCan be used to cache computations from one frame to …\nCalculate a bounding rectangle.\nReturns the size the image will occupy in the final UI.\nCalculate the final on-screen size in points.\nPaint something custom (e.g. 3D stuff).\nA canvas to draw on.\nThe center of the range\nConstruct a command to center the viewport on the monitor, …\nThis will make the next added widget centered and …\nFor when you want to add a single widget to a layout, and …\nWas the underlying data changed?\nSets the limit for the amount of characters can be entered\nReads the given character range.\nIf the given <code>Id</code> has been used previously the same pass at …\nShow a checkbox.\nCreate a new <code>Ui</code> at a specific region.\nCreate a new <code>Ui</code> at a specific region with a specific id.\nEquivalent to <code>x.clamp(min, max)</code>\nReturn the given points clamped to be inside the rectangle …\nIf set to <code>true</code>, existing values will be clamped to …\nSets valid range for the value.\nWhether clamp the window’s size to monitor’s size. The …\nControls when the values will be clamped to the range.\nWhat type of viewport are we?\nRestore to default state, but without freeing memory.\nClears all characters in this buffer\nClear the contents while retaining allocated memory.\nClear memory of any animations.\nClears the payload, setting it to <code>None</code>.\nSense clicks and hover, but not drags.\nButtons, sliders, windows, …\nSense both clicks, drags and hover (e.g. a slider or …\nReturns true if this widget was clicked this frame by the …\nReturns true if this widget was clicked this frame by the …\n<code>true</code> if there was a click <em>outside</em> the rect of this widget.\nScreen-space rectangle for clipping what we paint in this …\nEverything painted in this <code>Painter</code> will be clipped against …")