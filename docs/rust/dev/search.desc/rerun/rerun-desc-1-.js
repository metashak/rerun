searchState.loadedDescShard("rerun", 1, "Clip rectangle in points.\nClip / scissor rectangle. Only show the part of the <code>Mesh</code> …\nThe “scissor” or “clip” rectangle. This is what …\nAllow child widgets to be just on the border and still …\nWhen <code>true</code> (default), overflowing text will be clipped.\nClose the menu we are in (including submenus), if any.\nClose the open popup, if any.\nThis viewport has been told to close.\nA line that closes back to the start point again.\nChecks only cmd/ctrl, not alt/shift.\nShow text as monospace with a gray background.\nMonospace label with different background color.\nPrefer using <code>RichText</code> directly!\nBackground color behind code-styled monospaced labels.\nA <code>TextEdit</code> for code editing.\nBuild a <code>TextEdit</code> focused on code editing. By default it …\nCan the window be collapsed by clicking on its title?\nA <code>CollapsingHeader</code> that starts out collapsed.\nShow a background behind collapsing headers.\nOverride text color.\nOverride text color if, and only if, this is a <code>RichText</code>.\nSets the spinner’s color.\nColor of the opaque center of the shadow.\nText color\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShow colored text.\nAdd a colored vertex.\nTemporarily split a <code>Ui</code> into several columns.\nTemporarily split a <code>Ui</code> into several columns.\nHeight of a combo-box before showing scroll bars.\nDefault (minimum) width of a <code>ComboBox</code>.\nOn Windows and Linux, set this to the same value as <code>ctrl</code>. …\ntrue if only <code>Self::ctrl</code> or only <code>Self::mac_cmd</code> is pressed.\nCommands to change the viewport, e.g. window title and …\nWhat goes between the names\nConstrains this window to <code>Context::screen_rect</code>.\nConstrains this area to <code>Context::screen_rect</code>?\nConstrain the movement of the window to the given …\nConstrain the movement of the window to the given …\nCheck for a key press. If found, <code>true</code> is returned and the …\nCheck if the given shortcut has been pressed.\nCheck if this node is or is contained in a <code>crate::Ui</code> of a …\nContainers are pieces of the UI which wraps other pieces …\nWhether another set of modifiers is contained in this set …\nReturns true if the pointer is contained by the response …\nResponse to secondary clicks (right-clicks) by showing the …\nReturns whether a context menu is currently open for this …\nA convex polygon with a fill and optional stroke.\nIf set, put this text in the system clipboard. Ignore if …\nCopy the given text to the system clipboard.\nIf the pointer button is down, will it register as a click …\nCount presses of a key. If non-zero, the presses are …\nHow to align things on the cross axis. For vertical …\nJustify the cross axis? For vertical layouts justify mean …\nEither of the control keys are down. When checking for …\nGet a reference to the parent <code>Context</code>.\nGet a reference to the parent <code>Context</code>.\nUsed for optionally showing a tooltip and checking for …\nThe total number of completed passes (usually there is one …\nThe total number of completed passes (usually there is one …\nThe number of fully completed passes, of the entire …\nSet current position of the window. If the window is …\nPositions the window but you can still move it.\nThe contents of some editable text (for <code>TextEdit</code> fields).\nWhere the next widget will be put.\nWhen <code>true</code> (default), the cursor will initially be placed …\nCursor at the given position within the galley.\nSet the cursor to this icon.\nSet custom formatter defining how numbers are converted …\nSet custom formatter defining how numbers are converted …\nSet custom parser defining how the text input is parsed …\nSet custom parser defining how the text input is parsed …\nDefault dark theme.\nA dark canvas to draw on.\nIf true, the visuals are overall dark with light text. If …\nThe default style for new <code>Ui</code>:s in dark mode.\nTurn a line into dashes.\nTurn a line into dashes. If you need to create many dashed …\nTurn a line into dashes with different dash/gap lengths …\nTurn a line into dashes with different dash/gap lengths …\nRead-only access to the shared <code>IdTypeMap</code>, which stores …\nRead-only access to <code>IdTypeMap</code>, which stores superficial …\nThis map stores some superficial state for all widgets …\nRead-write access to the shared <code>IdTypeMap</code>, which stores …\nRead-write access to <code>IdTypeMap</code>, which stores superficial …\nOptions to help debug why egui behaves strangely.\nWhether or not to debug widget layout on hover.\nShows where the next widget is going to be placed\nPaint on top of everything else\nThis is an example of how to create a plugin for egui.\nPrint this text next to the cursor at the end of the pass.\nText with a background.\nextracts uri and frame index\nSpecifies the default fonts if the feature <code>default_fonts</code> …\nThe default is linear for both magnification and …\nThe epaint font texture.\nThe size used for the <code>Ui::max_rect</code> the first frame.\nThe initial height of the <code>TopBottomPanel</code>, including …\nSet initial height of the window.\nSee <code>Self::default_size</code>.\nPreferred / suggested height. Actual height will depend on …\nBy default, the <code>CollapsingHeader</code> is collapsed. Call …\nSet initial collapsed state of the window\nSet initial position of the window.\nSet initial position and size of the window.\nSet initial size of the window.\nThe size used for the <code>Ui::max_rect</code> the first frame.\nDefault style for this theme.\nDefault visuals for this theme.\nThe initial wrapping width of the <code>SidePanel</code>, including …\nSet initial width of the window.\nSee <code>Self::default_size</code>.\nPreferred / suggested width. Actual width will depend on …\nRepaint after this duration. If zero, repaint as soon as …\nDeletes a range of text <code>char_range</code> from this buffer.\nHow much the pointer moved compared to last frame, in …\nThis can be used by a text-to-speech system to describe …\nThe desired height of the bar. Will use the default …\nSet the number of rows to show by default. The default for …\nThe desired width of the bar. Will use all horizontal …\nSet to 0.0 to keep as small as possible. Set to …\nCurrent direction of the pointer.\nCalling <code>disable()</code> will cause the <code>Ui</code> to deny all future …\nDisable generation of AccessKit tree updates in all future …\nMake the new <code>Ui</code> disabled, i.e. grayed-out and …\nThe distance from the rect to the position, squared.\nThe distance from the rect to the position.\nCreate something that can be drag-and-dropped.\nSurround the given ui with a frame which changes colors …\nDrag-and-Drop: Return what is being held over this widget, …\nDrag-and-Drop: Return what is being dropped onto this …\nIf the user started dragging this widget this frame, store …\nThe dot-product of two vectors.\nTurn a line into equally spaced dots.\nReturns true if this widget was double-clicked this frame …\nReturns true if this widget was double-clicked this frame …\nSense drags and hover, but not clicks.\nSliders, windows, scroll bars, scroll areas, …\nModify an angle. The given angle should be in radians, but …\nModify an angle. The given angle should be in radians, but …\nIf dragged, how many points were we dragged and in what …\nIf dragged, how far did the mouse move? This will use raw …\nThe widget was being dragged, but now it has been released.\nThe widget was being dragged by the button, but now it has …\nDid a drag on this widgets begin this frame?\nDid a drag on this widgets by the button begin this frame?\nThis widget just started being dragged this pass.\nThe widget was being dragged, but now it has been released.\nThe widget was being dragged by the button, but now it has …\nThis widget was being dragged, but was released this pass\nEnable/disable scrolling on the window by dragging with …\nCan the user drag the scroll area to scroll?\nWhen dragging the value, how fast does it move?\nThe style to use for <code>DragValue</code> text.\nThe widget is being dragged.\nSee <code>Self::dragged</code>.\nThe widget currently being dragged, if any.\nGet the id of the widget being dragged, if any.\nIs something else being dragged?\nIs something else being dragged?\nDragged files dropped into egui.\nSet to true the text was truncated due to …\nIf <code>true</code>, <code>Self::show_viewport_deferred</code> and …\nNo fonts.\nEnable generation of AccessKit tree updates in all future …\nControl the scrolling behavior.\nIf you set this to <code>false</code>, the <code>CollapsingHeader</code> will be …\nIf <code>false</code> the window will be grayed out and non-interactive.\nIf false, no content responds to click and widgets will be …\nWas the widget enabled? If false, there was no interaction …\nWhether the widget is enabled.\nIs the widget enabled?\nCursor to one-past last character.\nCall at the end of each frame if you called …\nCall at the end of each frame if you called …\nMove to the next row in a grid layout or wrapping layout. …\nA good color for error text (e.g. red).\nIf <code>true</code>, pressing escape will act on the widget, and NOT …\nIn-order events received this frame.\nEvents that may be useful to e.g. a screen reader.\nIn-order events received this frame\nThis can be used by a text-to-speech system to describe …\nA <code>Rect</code> that contains every point above a certain y …\nA <code>Rect</code> that contains every point below a certain y …\nIf true, all windows, menus, tooltips, etc., will be …\nA <code>Rect</code> that contains every point to the left of the given …\nA <code>Rect</code> that contains every point to the right of the given …\nEnforce this exact height, including margins.\nEnforce this exact width, including margins.\nAn example color image, useful for tests.\nExpand by this much on each side, keeping the center\nExpand by this much in each direction, keeping the center\nExpand by this much in each direction, keeping the center\nExpand the <code>min_rect</code> and <code>max_rect</code> of this ui to include a …\nEnsure we are big enough to contain the given x-coordinate.\nEnsure we are big enough to contain the given y-coordinate.\nShow tooltips explaining <code>DragValue</code>:s etc when hovered.\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Extend</code>, disabling …\nAdd many shapes at once.\nExpand to include the given x coordinate\nExpand to include the given y coordinate\nExtra spacing between letters, in points.\nExtra spacing between letters, in points.\nVery dark or light color (for corresponding theme). Used …\nIf <code>true</code>, quickly fade in the <code>Window</code> when it first appears.\nIf <code>true</code>, quickly fade in the area.\nIf <code>true</code>, quickly fade out the <code>Window</code> when it closes.\nWhen fading out things, we fade the colors towards this.\nSomething just barely different from the background color. …\nSet the <code>TextStyle</code> unless it has already been set\nSet the <code>TextStyle</code> unless it has already been set\nWhich theme to use in case <code>Self::theme_preference</code> is …\nWhich fonts (names) to use for each <code>FontFamily</code>.\nSelect the font family.\nWhat font family to use.\nWhat file had the call that requested the repaint?\nOverride background fill color. Note that this will …\nThe fill color of the bar.\nGet all events that matches the given filter.\nDetermines how the image should shrink/expand/stretch/etc. …\nFit the image to an exact size.\nFit the image to a fraction of the available space.\nFit the image to its original size with some scaling.\nSet an exact number of decimals to display. Values will …\nSet an exact number of decimals to display.\nSets the window position and prevents it from being …\nPositions the window and prevents it from being moved\nSets the window pos and size and prevents it from being …\nSets the window size and prevents it from being resized by …\nFlip the min and the max\nThis widget wants focus.\nSenses no clicks or drags, but can be focused with the …\nWhich widget has keyboard focus?\nThe native window has the keyboard focus (i.e. is …\nIs the window focused and able to receive input?\nThe native window has the keyboard focus (i.e. is …\nPick a <code>crate::FontId</code> or <code>TextStyle</code>.\nSelect the font and size. This overrides the value from …\nThe content of a <code>.ttf</code> or <code>.otf</code> file.\nList of font names and their definitions.\nRead the font height of the selected text style.\nRead-only access to <code>Fonts</code>.\nRead-only access to <code>Fonts</code>.\nRead-only access to the shared <code>Fonts</code>.\nAccess all shapes added this frame.\nCurrent force of the touch (average of the forces of the …\nRelease all memory and textures related to images used in …\nRelease all memory and textures related to the given image …\nFormat the given shortcut in a human-readable way (e.g. …\nChange the background color, margins, etc.\nChange the background color, margins, etc.\nChange the background color, margins, etc.\nTurn off the frame\nDefault is <code>true</code>. If set to <code>false</code> there will be no frame …\nChange the background color, margins, etc.\nTurn off the frame\nTextures to free after painting.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoad the image from some raw bytes.\nChooses between <code>Self::Dark</code> or <code>Self::Light</code> based on a …\nCreate a <code>ColorImage</code> from flat opaque gray data.\nAlternative method to <code>from_gray</code>. Create a <code>ColorImage</code> from …\nWithout label.\nWithout label.\nLabel shown next to the combo box\nleft-top corner plus a size (stretching right-down).\nConverts <code>&quot;A&quot;</code> to <code>Key::A</code>, <code>Space</code> to <code>Key::Space</code>, etc.\nBounding-box around the points.\nA zero-sized rect at a specific point.\nCreate a <code>ColorImage</code> from flat RGB data.\nCreate a <code>ColorImage</code> from flat un-multiplied RGBA data.\nLoad the image from an existing texture.\nReturns the bounding rectangle of the two points.\nLoad the image from a URI.\nAre we in fullscreen mode?\nWas the <code>CollapsingHeader</code> fully closed (and not being …\nWas the <code>CollapsingHeader</code> fully open (and not being …\nTrue if this widget has keyboard focus this frame, but didn…\nAny uncolored parts of the <code>Galley</code> (using …\nPaint text that has already been laid out in a <code>Galley</code>.\nAll text color in the <code>Galley</code> will be replaced with the …\nPaint text that has already been laid out in a <code>Galley</code>.\nUsed to get a unique ID when implementing one of the …\nGet the value of a tag.\nGet the value of a tag.\nAll widgets in this layer, sorted back-to-front.\nCreate a <code>Hyperlink</code> to the current <code>file!()</code> on github.\nCreate a <code>Hyperlink</code> to the current <code>file!()</code> (and line) on …\nShow larger buttons for switching between light and dark …\nShow a small button to switch to/from dark/light mode …\nShow larger buttons for switching between light and dark …\nShow a small button to switch to/from dark/light mode …\nRead-only access to <code>GraphicLayers</code>, where painted …\nRead-write access to <code>GraphicLayers</code>, where painted …\nReturned a “grayed out” version of the given color.\nPut into a <code>Frame::group</code>, visually grouping the contents …\nFor when you want to group a few widgets together within a …\nExtend each end of the separator line by this much.\nHelpers for zooming the whole GUI of an app (changing …\nCheck if the layer had focus last frame. returns <code>true</code> if …\nSets the horizontal alignment of the Label to the given …\nChange the shape of the slider handle\nShape of the handle for sliders and similar widgets.\nAre we carrying a payload?\nDoes this widget have keyboard focus?\nThis widget has the keyboard focus (i.e. is receiving key …\nchecks if bytes are gifs\nAre we carrying a payload of the given type?\nDo we have a pointer?\nHas a repaint been requested for the current viewport?\nHas a repaint been requested for the given viewport?\nTrue if we have ever received a touch event.\nThis this <code>crate::Ui</code> a <code>crate::Frame</code> with a visible stroke?\nResponse of the actual clickable header.\nShow large text.\nUse <code>TextStyle::Heading</code>.\nPrefer using <code>RichText</code> directly!\nSet the maximum outer height of the menu.\nThe minimum height of the sides.\nImage height. This should be a multiple of 4.\nThe allowable height range for the panel, including …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nHighlight this widget, to make it look like it is hovered, …\nHighlight this widget, to make it look like it is hovered, …\nSize hint for e.g. rasterizing an svg.\nShow a faint hint text when the text field is empty.\nSet a specific style for the hint text.\nA horizontal line.\nPaints a horizontal line.\nStart a ui with horizontal layout. After you have called …\nExplicitly ask for a horizontal line.\nCreate a horizontal scroll area.\nSet the horizontal align of the inner text.\ne.g. for when aligning text within a button.\nIf <code>true</code>, pressing horizontal arrows will act on the …\nLike <code>Self::horizontal</code>, but allocates the full vertical …\ne.g. for adjusting the placement of something.\nSet the horizontal scroll offset position.\nLike <code>Self::horizontal</code>, but aligns content with top.\nStart a ui with horizontal layout that wraps to a new row …\nSenses no clicks or drags. Only senses mouse hover.\nIf it is a good idea to show a tooltip, where is pointer?\nIf it is a good idea to show a tooltip, where is pointer?\nThe pointer is hovering above this widget or the widget …\nDragged files hovering over egui.\nEnable/disable horizontal scrolling. <code>false</code> by default.\nTurn on/off scrolling on the horizontal axis.\nLink to a web page.\nThe color used for <code>crate::Hyperlink</code>,\nShortcut for <code>add(Hyperlink::from_label_and_url(label, url))</code>…\nUse the provided function to render a different …\nUse the provided function to render a different <code>ComboBox</code> …\nReturns small icon rectangle and big icon rectangle\nCheckboxes, radio button and collapsing headers have an …\nCheckboxes, radio button and collapsing headers have an …\nCheckboxes, radio button and collapsing headers have an …\nAssign a unique id to the Window. Required if the title …\nGenerated based on id of parent ui together with an …\nUse if you want to set an explicit <code>Id</code> for this widget.\nLet’s you change the <code>id</code> that you assigned in <code>Self::new</code>.\nAssign an explicit and globally unique id.\nThe <code>Id</code> of the widget/area this response pertains.\nThe globally unique widget id.\nExplicitly set the source of the <code>Id</code> of this widget, …\nA source for the unique <code>Id</code>, e.g. …\nA source for the unique <code>Id</code>, e.g. …\nA source for the unique <code>Id</code>, e.g. …\nSeed the child <code>Ui</code> with this <code>id_salt</code>, which will be mixed …\nExplicitly set the source of the <code>Id</code> of this widget, …\nA source for the unique <code>Id</code>, e.g. …\nA source for the unique <code>Id</code>, e.g. …\nA source for the unique <code>Id</code>, e.g. …\nId of us and our parent.\nAn image at the given position.\nShow an image available at the given <code>uri</code>.\nCreates a button with an image. The size of the image as …\nAn image at the given position.\nCreates a button with an image to the left of the text. …\nShow a spinner when loading an image.\nThis is set if, and only if, the user is currently editing …\nAssociate some static bytes with a <code>uri</code>.\nInclude an image in the binary.\nCreate a child ui which is indented to the right.\nIndent collapsing regions etc by this much.\nEnd indented regions with a horizontal line\nDraw a vertical lien left of indented region, in e.g. …\nDisplay an indeterminate state (neither checked nor …\nWhich font face in the file to use. When in doubt, use <code>0</code>.\nDraw as triangles (i.e. the length is always multiple of …\nWhat the user closure returned.\nMargin within the painted frame.\nMargin within the painted frame.\nThe inner rectangle of the native window, in monitor space …\nRead-only access to the shared <code>InputState</code>.\nRead-only access to <code>InputState</code>.\nThis will create a <code>InputState::default()</code> if there is no …\nRead-write access to the shared <code>InputState</code>.\nRead-write access to <code>InputState</code>.\nThis will create a <code>InputState::default()</code> if there is no …\nOptions related to input state handling.\nInsert the given widget rect in the given layer.\nInserts text <code>text</code> into this buffer at character index …\nShow the state of egui, including its input and output.\nHelper: equivalent to …\nCheck for clicks, drags and/or hover on a specific region …\nSense more interactions (e.g. sense clicks on a <code>Response</code> …\nUse this style for interactive things. Note that you must …\nInteract with the background of this <code>Ui</code>, i.e. behind all …\nShould the cursor change when the user hovers over an …\nWhere the pointer (mouse/touch) were when when this widget …\nIf you detect a click or drag and wants to know where it …\nThe rectangle sensing interaction.\nWhere the widget is.\nMinimum size of a <code>DragValue</code>, color picker button, and …\nDeprecated: use <code>Self::interact</code> instead.\nIf false, clicks goes straight through to what is behind …\nIf false, clicks goes straight through to what is behind …\nIf false, clicks goes straight through to what is behind …\nHow and when interaction happens.\nRead you what widgets are currently being interacted with.\nDefault is <code>true</code>. If set to <code>false</code> then you cannot interact …\nReturns true if we sense either clicks or drags.\nRegister this widget as being interested in getting …\nThe intersection of two <code>Rect</code>, i.e. the area covered by …\nThe overlap of two ranges, i.e. the range that is …\nDo the two ranges intersect?\nDoes this Rect intersect the given ray (where <code>d</code> is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLayout with wrap mode based on the containing <code>Ui</code>.\nThe intrinsic / desired size of the widget.\nShowing UI:s for egui/epaint types.\nMake the contents invisible.\nIs any widget being dragged?\nIs this any kind of <code>crate::Area</code>?\nIs this specific widget being dragged?\nIs this specific widget being dragged?\nIs an egui context menu open?\nJust because the mouse is down doesn’t mean we are …\nTrue if width is zero or color is transparent\nIf <code>false</code>, the <code>Ui</code> does not allow any interaction and the …\nTrue if all members are also finite.\nTrue if all members are also finite.\nTrue if all members are also finite.\nReturns <code>true</code> if the chain of bytes, image, or texture …\nIs the pointer currently moving? This is smoothed so a few …\nCan this text be edited?\n<code>width &lt; 0 || height &lt; 0</code>\nCheck if the <code>ComboBox</code> with the given id has its popup menu …\nIs this any kind of panel?\nIs this <code>crate::Ui</code> a panel?\nIs the pointer button currently down on this widget?\nIs the pointer (mouse/touch) over any egui area?\nIs the given popup open?\n<code>width &gt; 0 &amp;&amp; height &gt; 0</code>\nCan be used for culling: if <code>false</code>, then no part of <code>rect</code> …\nIs this a root <code>crate::Ui</code>, i.e. created with …\nAre the margin on every side the same?\nDo all corners have the same rounding?\nSet to true in special cases where we do one frame where …\nIs the pointer currently still? This is smoothed so a few …\nWas the tooltip open last frame?\nIs egui currently using the pointer position (e.g. …\nAre all indices within the bounds of the contained …\nIf <code>false</code>, any widgets added to the <code>Ui</code> will be invisible …\nTilt the characters to the right.\nPrefer using <code>RichText</code> directly!\nHorizontal and vertical spacing between widgets.\nReturn an iterator that walks the stack from this node to …\nThe job that this galley is the result of. Contains the …\nIs the given key currently held down?\nWas the given key pressed this frame?\nWas the given key released this frame?\nChange the <code>UiKind</code> of the arena.\nShow some text.\nThe text on labels, buttons, checkboxes etc.\nAssociate a label with a control for accessibility.\nFor logarithmic sliders, the largest positive value we are …\nAt what time was this area first shown?\nSet by the <code>eframe</code> web backend.\nLatest reported pointer position. When tapping a touch …\nUse this to paint stuff within this <code>Ui</code>.\nWhere we paint\nWhich layer the widget is part of.\nWhat layer the widget is on.\nTop-most layer at the given position.\nTop-most layer at the given position.\nAn iterator over all layers. Back-to-front, top is last.\nAll known layers with widgets.\nGet a full-screen painter for a new or existing layer\nTransforms per layer\nHandles paint layers, i.e. how things are sometimes …\nRead the <code>Layout</code>.\nWill wrap text at the given width and line break at <code>\\n</code>.\nOverride the layout.\nDo layout and position the galley in the ui, without …\nLay out this text layut job in a galley.\nWill line break at <code>\\n</code>.\nOverride how text is being shown inside the <code>TextEdit</code>.\nThe id should be globally unique, e.g. …\n<code>min.x</code>\n<code>min.x</code>\nPlace elements horizontally, left to right.\nThe left top positions of the area.\nLinear interpolation.\nLinearly interpolate towards another point, so that …\nLinearly interpolate so that <code>[0, 0]</code> is <code>Self::min</code> and <code>[1, 1]</code>…\nLinearly self towards other rect.\nDefault light theme.\nThe default style for new <code>Ui</code>:s in light mode.\nA line through many points.\nWhat line number of the call that requested the repaint?\nExplicit line height of the text in points.\nExplicit line height of the text in points.\nMultiplier for the scroll speed when reported in …\nA line between two points. More efficient than calling …\nPaints a line from the first point to the second.\nLooks like a hyperlink.\nImage loading\nLoad the state of an <code>Area</code> from memory.\nErrors\nLoad the image from its <code>Image::source</code>, returning the …\nAllocate a texture.\nThe loaders of bytes, images, and textures.\nWhen <code>false</code> (default), pressing TAB will move focus to the …\nMake this a logarithmic slider. This is great for when the …\nWas this long-pressed on a touch screen?\nThe widget had keyboard focus and lost it, either because …\nThe Mac ⌘ Command key. Should always be set to <code>false</code> on …\nHow to filter when magnifying (when texels are larger than …\nHow to align things on the main axis.\nMain axis direction\nJustify the main axis?\nIf true, wrap around when reading the end of the main …\nWhether or not the <code>ImageFit</code> should maintain the image’s …\nWhether or not the final size should maintain the original …\nUse this to generate widget ids for widgets that have …\nHow much larger than the parent rect are we in each …\nSet margin of text. Default is <code>Margin::symmetric(4.0, 2.0)</code>\nReport the data shown by this widget changed.\nCheck for equality but with proper handling of …\nChecks that the <code>ctrl/cmd</code> matches, and that the <code>shift/alt</code> …\nThe other corner, opposing <code>Self::min</code>. Usually the right …\nSet soft maximum width (wrapping width) of each column.\nSet a maximum number of decimals to display. Values will …\nSet a maximum number of decimals to display.\nReturns the maximum of <code>self.x</code> and <code>self.y</code>.\nMaximum height of the panel, including margins.\nSet maximum height of the window.\nWon’t expand to larger than this\nThe maximum height of the outer frame of the scroll area.\nSet the max height of the image.\nMaximum number of passes to run in one frame.\nNew widgets will <em>try</em> to fit within this rectangle.\nSet the max rectangle, within which widgets will go.\nSet maximum size of the window, equivalent to calling both …\nWon’t expand to larger than this\nSet the max size of the image.\nDetermines the maximum size of the image.\nMaximum size of one side of the font texture.\nMaximum size of one side of a texture.\nMaximum width of the panel, including margins.\nSet maximum width of the window.\nWon’t expand to larger than this\nThe maximum width of the outer frame of the scroll area.\nSet the max width of the image.\nAre we maximized?\nRead-only access to the shared <code>Memory</code>.\nRead-only access to <code>Memory</code>.\nRead-write access to the shared <code>Memory</code>.\nRead-write access to <code>Memory</code>.\nShows the contents of <code>Self::memory</code>.\nMenu bar functionality (very basic so far).\nCreate a menu button that when clicked will show the given …\nCreate a menu button with an image that when clicked will …\nCreate a menu button with an image and a text that when …\nHorizontal and vertical margins within a menu frame.\nHorizontal distance between a menu and a submenu.\nThe default wrapping width of a menu.\nTight bounding box around all the meshes in all the rows. …\nReturns true if this widget was clicked this frame by the …\nIs the middle button currently down?\nWith the <code>eframe</code> web backend, this is set to the mime-type …\nWith the <code>eframe</code> web backend, this is set to the mime-type …\nOne of the corners of the rectangle, usually the left top …\nSet minimum width of each column. Default: …\nSet a minimum number of decimals to display. Normally you …\nSet a minimum number of decimals to display.\nReturns the minimum of <code>self.x</code> and <code>self.y</code>.\nMinimum height of the panel, including margins.\nSet minimum height of the window.\nWon’t shrink to smaller than this\nWhere and how large the <code>Ui</code> is already. All widgets that …\nSet minimum height of each row. Default: …\nThe minimum height of a vertical scroll area which …\nThe minimum width of a horizontal scroll area which …\nSet minimum size of the window, equivalent to calling both …\nSize of content; same as <code>min_rect().size()</code>\nSet the minimum size of the button.\nSet the minimum size of the <code>TextEdit</code>.\nWon’t shrink to smaller than this\nMinimum width of the panel, including margins.\nSet minimum width of the window.\nWon’t shrink to smaller than this\nHow to filter when minifying (when texels are smaller than …\nAre we minimized?\nHow to filter between texture mipmaps.\nWhich modifier keys are down at the start of the frame?\nWhich modifier keys are down at the start of the frame?\nCurrent monitor size in egui points.\nShow monospace (fixed width) text.\nUse <code>TextStyle::Monospace</code>.\nPrefer using <code>RichText</code> directly!\nHow much the mouse moved since the last frame, in …\nIf <code>false</code> the window will be immovable.\nMoveable by dragging the area?\nMoves the given area to the top in its <code>Order</code>.\nCalls <code>InputState::multi_touch</code>.\nReturns details about the currently ongoing multi-touch …\nA <code>TextEdit</code> for multiple lines. Pressing enter key will …\nLike <code>Self::set_opacity</code>, but multiplies the given value …\nLike <code>Self::set_opacity</code>, but multiplies the given value …\nOpacity multiplier in gamma space.\nIs there a mutable <code>TextEdit</code> under the cursor? Use by <code>eframe</code>…\nUsage: …\nDebug-name.\nHuman-readable English name.\nName of the file. Set by the <code>eframe</code> web backend.\nThe number of physical pixels for each logical point on …\nThe OS native pixels-per-point.\nRadius of the rounding of the North-East (right top) …\nCreate a scroll area where both direction of scrolling is …\nThe <code>CollapsingHeader</code> starts out collapsed unless you call …\nCreate new <code>ComboBox</code> with id and label\nThe id should be globally unique, e.g. <code>Id::new(&quot;my_panel&quot;)</code>.\nThe id should be globally unique, e.g. <code>Id::new(&quot;my_panel&quot;)</code>.\nThe window title is used as a unique <code>Id</code> and must be …\nIf you are using egui, use <code>egui::Context::load_texture</code> …\nCreate an image filled with the given color.\nCreate a new <code>Grid</code> with a locally unique identifier.\nCreate a new top-level <code>Ui</code>.\nProgress in the <code>[0, 1]</code> range, where <code>1</code> means “completed”…\nCreates a new horizontal slider.\nThe <code>id</code> must be globally unique.\nCreate a scroll area where you decide which axis has …\nCapture the file and line number of the call site.\nGenerate a new <code>Id</code> by hashing some source (e.g. a string or …\nCreate a painter to a specific layer within a certain clip …\nCreate a new <code>UiStackInfo</code> with the given kind and an empty …\nLoad the image from some source.\nCreate a new spinner that uses the style’s <code>interact_size</code> …\nCreate a child <code>Ui</code> with the properties of the given builder.\nCapture the file and line number of the call site, as well …\nIf <code>true</code>, open the url in a new tab. If <code>false</code> open it in …\nThis is the <code>Id</code> that will be assigned to the next widget …\nWhat is the id of the next tooltip for this widget?\nWhere do we expect a zero-sized widget to be placed?\nStyle to use for non-interactive widgets.\nSafe normalize: returns zero if input is zero.\nSetting this will allow the last column to expand to take …\nHow many ui passes is this the sum of?\nTotal number of indices in all the row meshes.\nHow many times was the given key pressed this frame?\nNumber of touches (fingers) on the surface. Value is ≥ 2 …\nTotal number of vertices in all the row meshes.\nHow to format numbers as strings, e.g. in a …\nHow to display numeric color values.\nRadius of the rounding of the North-West (left top) corner.\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nMove the shadow by this much.\nCall the given callback at the start of each pass of each …\nShow this text when hovering if the widget is disabled.\nShow this UI when hovering if the widget is disabled.\nCall the given callback at the end of each pass of each …\nWhen hovered or dragged, use this icon for the mouse …\nWhen hovered, use this icon for the mouse cursor.\nShow this text if the widget was hovered (i.e. a tooltip).\nLike <code>on_hover_text</code>, but show the text next to cursor.\nShow this UI if the widget was hovered (i.e. a tooltip).\nLike <code>on_hover_ui</code>, but show the ui next to cursor.\nRead the current opacity of the underlying painter.\nRead the current opacity of the underlying painter.\nCalling <code>.open(Some(true))</code> will make the collapsing header …\nCall this to add a close-button to the window title bar.\nAlways open this hyperlink in a new browser tab.\nOpen the given popup and close all others.\nOpen an URL in a browser.\nIf set, open this url.\n0.0 if fully closed, 1.0 if fully open, and something …\nRead-only access to <code>Options</code>.\nGlobal egui options.\nRead-write access to <code>Options</code>.\n<code>order(Order::Foreground)</code> for a Window that should always …\n<code>order(Order::Foreground)</code> for an Area that should always be …\nIn which layer, and in which order in that layer?\nVertical or horizontal slider? The default is horizontal.\nWhat operating system are we running on?\nMargin outside the painted frame.\nMargin outside the painted frame.\nThe outer rectangle of the native window, in monitor space …\nAll the data egui returns to the backend at the end of …\nRead-only access to the shared <code>PlatformOutput</code>.\nRead-only access to <code>PlatformOutput</code>.\nRead-write access to the shared <code>PlatformOutput</code>.\nRead-write access to <code>PlatformOutput</code>.\nIf set this will change the font family and size for all …\nOverride default text color for all text.\nIf set this will change the default <code>TextStyle</code> for all …\nHow to vertically align text.\nPaint this frame as a shape.\nPaint the image in the given rectangle.\nPaint the spinner in the given rectangle.\nDraw a debug rectangle over the response displaying the …\nUse this to paint stuff within this <code>Ui</code>.\nCreate a painter for a sub-region of this Ui.\nPanel background color\nParent viewport, if known.\nId of our parent viewport.\nReturn the <code>ViewportId</code> of his parent.\nIf true, hide the letters from view and prevent copying …\nUpdate this <code>ViewportBuilder</code> with a delta, returning a list …\nSet by the <code>egui-winit</code> backend.\nSet by the <code>egui-winit</code> backend.\nRetrieve the payload, if any.\nSize of a physical pixel in logical gui coordinates …\nWhere the “root” of the window is.\nWhere the “root” of the area is.\nThe anchor point of the area, i.e. where on the area the …\nLast known position of the pivot.\nThe pixels, row by row, from top to bottom.\nThe coverage value.\nThe number of physical pixels for each logical point.\nAlso known as device pixel ratio, &gt; 1 for high resolution …\nPixels per point.\nThe number of physical pixels for each logical point. …\nThe number of physical pixels per logical ui point, for …\nAlso known as device pixel ratio, &gt; 1 for high resolution …\nNon-rendering related output.\nState of the mouse or simple touch gestures which can be …\nIf it is a good idea to show a tooltip, where is pointer?\nIf you detect a click or drag and wants to know where it …\nLatest reported pointer position.\nShows a popup above or below another widget.\nHelper for <code>popup_above_or_below_widget</code>.\n<code>pos2(x, y) == Pos2::new(x, y)</code>\nReturns a 0-width Rect.\nReturns a 0-width Rect.\nReturns a 0-width Rect.\nReturns a 0-width Rect.\nReturns the point on the rect’s frame or in the center …\nThe desired outer position of the window.\nShould be set to the expected time between frames when …\nEstimated time until next frame (provided we repaint right …\nShow a prefix before the number, e.g. “x: “\nShow a prefix before the number, e.g. “x: “\nIf true, the most common glyphs (ASCII) are pre-rendered …\nWhere did the current click/drag originate? <code>None</code> if no …\nWhen did the current click/drag originate? <code>None</code> if no …\nThe previous text value.\nWas the primary button clicked this frame?\nIs the primary button currently down?\nWas the primary button pressed this frame?\nWas the primary button released this frame?\nWhat to paint - either a <code>Mesh</code> or a <code>PaintCallback</code>.\nCreate a child Ui with an explicit <code>Id</code>.\nPush another level onto the <code>UiStack</code>.\nAdd a <code>Widget</code> to this <code>Ui</code> at a specific location (manual …\nShow a <code>RadioButton</code>. Often you want to use <code>Self::radio_value</code>…\nShow radio-buttons to switch between light mode, dark mode …\nShow a <code>RadioButton</code>. It is selected if …\nAlign text to top. Only applicable together with …\nPrefer using <code>RichText</code> directly!\nSets valid range for dragging the value.\nThe raw input we got this frame from the backend.\nYou probably want to use <code>Self::smooth_scroll_delta</code> instead.\nRead the response of some widget, which may be called …\nExplicit reason; human readable.\nWhere the area is on screen.\nWhere to paint.\nBounding rect.\nThe area of the screen we are talking about.\nThe full widget rectangle.\nIs the pointer (mouse/touch) above this rectangle in this …\nDoes the given rectangle contain the mouse pointer?\nIf <code>true</code>, <code>egui</code> will discard the loaded image data after the …\nCreate a new Image from a patch of the current image. This …\nClone a sub-region as a new image.\nThis is called by <code>Response::widget_info</code>, but can also be …\nLinearly remap a value from one range to another, so that …\nLike <code>remap</code>, but also clamps the value so that the returned …\nWhy are we repainting?\nSchedule a repaint of this viewport after this delay.\nIf any widget moves or changes id, repaint everything.\nReplaces all contents of this string with <code>text</code>\nRequest to discard the visual output of this pass, and to …\nWas <code>crate::Context::request_discard</code> called during the …\nGive keyboard focus to a specific widget. See also …\nRequest that this widget get keyboard focus.\nCall this if there is need to repaint the UI, i.e. if you …\nRequest repaint after at most the specified duration …\nRequest repaint after at most the specified duration …\nRepaint after this many seconds.\nCall this if there is need to repaint the UI, i.e. if you …\nWas <code>crate::Context::request_discard</code> called?\nWas a repaint requested last pass for the current viewport?\nWas a repaint requested last pass for the given viewport?\nThis command requires the parent viewport to repaint.\nMake room for this many additional triangles (will reserve …\nMake room for this many additional vertices. See also …\nForget window positions, sizes etc. Can be used to …\nShow a button to reset a value to its default. The button …\nShow a button to reset a value to its default. The button …\nReset to the default style set in <code>Context</code>.\nCan panel be resized by dragging the edge of it?\nCan panel be resized by dragging the edge of it?\nCan the user resize the window by dragging its edges?\nCan you resize it with the mouse?\nUsage: …\nLook up this <code>TextStyle</code> in <code>Style::text_styles</code>.\nRead the <code>Ui</code>s background <code>Response</code>. It’s <code>Sense</code> will be …\nThe response of the area.\nSet the return key combination.\nRGBA pixels, with separate/unmultiplied alpha.\nThe id should be globally unique, e.g. …\n<code>max.x</code>\n<code>max.x</code>\nPlace elements horizontally, right to left.\nRotates the vector by 90°, i.e positive X to positive Y …\nRotate by some angle about an origin, in-place.\nRotate the image about an origin by some angle\nRotate the bounds (will expand the <code>Rect</code>)\nRotate the image about an origin by some angle\nRotation in radians. Moving fingers around each other will …\nUseful for pixel-perfect rendering of lines that are one …\nUseful for pixel-perfect rendering.\nUseful for pixel-perfect rendering.\nUseful for pixel-perfect rendering of filled shapes.\nUseful for pixel-perfect rendering of lines that are one …\nUseful for pixel-perfect rendering.\nSet the rounding of the button.\nSet the rounding of the progress bar.\nRound the corners of the image.\nSet rounding for the <code>ImageButton</code>. If the underlying image …\nRound the corners of the image.\nRows of text, from top to bottom.\nRun the ui code for one 1.\nThe same margin on every side.\nScale the shape by <code>factor</code>, in-place.\nScale the font’s glyphs by this much. this is only a …\nScale up by this factor in each direction, keeping the …\nScale up by this factor in each direction, keeping the …\nCreate a scoped child ui.\nCreate a child, add content to it, and then allocate only …\nCreate a child, add content to it, and then allocate only …\nThis is a signal to any backend that we want the …\nPosition and size of the egui area.\nPosition and size of the area that egui should use, in …\nPosition and size of the egui area.\nFull size of the screen, in pixels.\nEnable/disable horizontal/vertical scrolling. <code>false</code> by …\nTurn on/off scrolling on the horizontal/vertical axes.\nControls the spacing of a <code>crate::ScrollArea</code>.\nEnable/disable horizontal/vertical scrolling. <code>false</code> by …\nTurn on/off scrolling on the horizontal/vertical axes.\nThe animation that should be used when scrolling a …\nSpecify within which screen-space rectangle to show the …\nSet the visibility of both horizontal and vertical scroll …\nSet the horizontal and vertical scroll offset position.\nAdjust the scroll position of any parent <code>crate::ScrollArea</code> …\nSame as <code>Self::scroll_to_cursor</code>, but allows you to specify …\nAdjust the scroll position until this UI becomes visible.\nLike <code>Self::scroll_to_me</code>, but allows you to specify the …\nAdjust the scroll position of any parent <code>crate::ScrollArea</code> …\nSame as <code>Self::scroll_to_rect</code>, but allows you to specify …\nScroll this many points in the given direction, in the …\nSame as <code>Self::scroll_with_delta</code>, but allows you to specify …\nControls the speed at which we zoom in when doing ctrl/cmd …\nRadius of the rounding of the South-East (right bottom) …\nWas the secondary button clicked this frame?\nReturns true if this widget was clicked this frame by the …\nIs the secondary button currently down?\nWas the secondary button pressed this frame?\nWas the secondary button released this frame?\nCan the user select the text with the mouse?\nShow a label which can be selected or not.\nShow selectable text. It is selected if …\nIf <code>true</code>, mark this button as “selected”.\ncheckboxes, radio-buttons etc\nIf <code>true</code>, mark this button as “selected”.\nThe current value of checkboxes and radio buttons.\nWhat we show as the currently selected value\nSend a command to the current viewport.\nSend a command to a specific viewport.\nBy default, buttons senses clicks. Change this to a …\nMake the label respond to clicks and/or drags.\nExplicitly set a sense.\nSet if you want sense clicks and/or drags. Default is …\nMake the image respond to clicks and/or drags.\nBy default, buttons senses clicks. Change this to a …\nThe senses (click and/or drag) that the widget was …\nHow the widget responds to interaction.\nShortcut for <code>add(Separator::default())</code>\nAssign a new image to an existing texture.\nModify an existing <code>Shape</code>.\nNew or changed textures. Apply before painting.\n<code>max.y</code>\nKeep size\nScreen-space rectangle for clipping what we paint in this …\nEverything painted in this <code>Painter</code> will be clipped against …\nSet the cursor icon.\nTurn on/off whether or not to debug widget layout on hover.\nSet which widget is being dragged.\nSet which widget is being dragged.\nIf <code>true</code>, <code>Self::show_viewport_deferred</code> and …\nCalling <code>set_enabled(false)</code> will cause the <code>Ui</code> to deny all …\nIf true, all windows, menus, tooltips etc are to be …\nSet an event filter for a widget.\nTell <code>egui</code> which fonts to use.\nkeep min\nSet both the minimum and maximum height.\n<code>ui.set_height_range(min..=max);</code> is equivalent to …\nFor integrations: Set this to render a sync viewport.\nCalling <code>set_invisible()</code> will cause all further widgets to …\nRedirect where you are painting.\n<code>min.x</code>\nMove the left top positions of the area.\nSet the maximum height of the ui. You won’t be able to …\nSet the maximum size of the ui. You won’t be able to …\nSet the maximum width of the ui. You won’t be able to …\nSet the minimum height of the ui. This can’t shrink the …\nSet the minimum size of the ui. This can’t shrink the …\nSet the minimum width of the ui. This can’t shrink the …\nMake the widget in this <code>Ui</code> semi-transparent.\nSet the opacity (alpha multiplier) of everything painted …\nSet the operating system we are running on.\nAssign a new image to a subregion of the whole texture.\nSet a drag-and-drop payload.\nSet the number of physical pixels for each logical point. …\nFor integrations: this callback will be called when an …\n<code>max.x</code>\nSet row height in horizontal wrapping layout.\nSet to true in special cases where we do one frame where …\nChanges apply to this <code>Ui</code> and its subsequent children.\nThe currently active <code>Style</code> used by all new windows, panels …\nThe <code>Style</code> used by all new windows, panels etc. Use …\nMark the <code>child</code> layer as a sublayer of <code>parent</code>.\nThe <code>Theme</code> used to select between dark and light <code>Self::style</code>\n<code>min.y</code>\nTransform the graphics of the given layer.\nCalling <code>set_visible(false)</code> will cause all further widgets …\nThe <code>crate::Visuals</code> used by all subsequent windows, panels …\nThe <code>crate::Visuals</code> used by all subsequent windows, panels …\nkeep min\nSet both the minimum and maximum width.\n<code>ui.set_width_range(min..=max);</code> is equivalent to …\nSets zoom factor of the UI. Will become active at the …\nShow a ui for settings (style and tessellation options).\nWhat to paint.\nEither of the shift keys are down.\nIs shift the only pressed button?\nShort and readable summary\nShort and readable summary\nShort and readable summary\nShow some text on the right side of the button, in weak …\nShow the panel at the top level.\nShow the panel at the top level.\nReturns <code>None</code> if the window is not open (if <code>Window::open</code> …\nShow the <code>TextEdit</code>, returning a rich <code>TextEditOutput</code>.\nShow the given ui surrounded by this frame.\nShow the panel at the top level.\nShow the <code>ScrollArea</code>, and add the contents to the viewport.\nShow the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …\nShow the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …\nShow either a collapsed or a expanded panel, with a nice …\nShow either a collapsed or a expanded panel, with a nice …\nShow either a collapsed or a expanded panel, with a nice …\nShow either a collapsed or a expanded panel, with a nice …\nShow the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …\nShow the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …\nShould the <code>CollapsingHeader</code> show a background behind it? …\nShow using dynamic dispatch.\nShow a list of items with the given selected index.\nShow the panel inside a <code>Ui</code>.\nShow the panel inside a <code>Ui</code>.\nShow the panel inside a <code>Ui</code>.\nShow a spinner when the image is loading.\nShow the progress in percent on the progress bar.\nEfficiently show only the visible part of a large number …\nShow a separator line, even when not interacting with it?\nShow a separator line, even when not interacting with it?\nShow a tooltip at the current pointer position (if any).\nShow a tooltip at the given position.\nShow a tooltip at the current pointer position (if any).\nShow a tooltip under the given area.\nShow some text at the current pointer position (if any).\nAlways show this tooltip, even if disabled and the user isn…\nAlways show this tooltip, even if disabled and the user isn…\nShow the combo box, with the given ui code for the menu …\nControl whether or not the slider shows the current value. …\nThis can be used to only paint the visible part of the …\nShow a deferred viewport, creating a new native window, if …\nShow an immediate viewport, creating a new native window, …\nShrink by this much on each side, keeping the center\nShrink by this much in each direction, keeping the center\nContract each end of the separator line by this much.\nShrink by this much in each direction, keeping the center\nConstrain the rectangle in which we can paint.\nConstrain the rectangle in which we can paint.\nHelper: shrinks the max height to the current height, so …\nFit the image to 100% of its available size, shrinking it …\nHelper: shrinks the max width to the current width, so …\nSigned distance to the edge of the box.\nNo newlines (<code>\\n</code>) allowed. Pressing enter key will result …\nwidth x height\n<code>rect.size() == Vec2 { x: rect.width(), y: rect.height() }</code>\nSelect the font size (in points). This overrides the value …\nSets the spinner’s size. The size sets both the height …\nwidth, height.\nwidth, height\nHeight in points.\nLast known size.\nwidth x height\nSet to true in special cases where we do one frame where …\nPretend like <code>count</code> widgets have been allocated.\nDefault rail height of a <code>Slider</code>.\nShow trailing color behind the circle of a <code>Slider</code>. Default …\nDefault width of a <code>Slider</code>.\nShow small text.\nMake this a small button, suitable for embedding into text.\nSmaller text.\nPrefer using <code>RichText</code> directly!\nA button as small as normal body text.\nFor e.g. exponents.\nPrefer using <code>RichText</code> directly!\nFor logarithmic sliders that includes zero: what is the …\nTurn smart aim on/off. Default is ON. There is almost no …\nHow many points the user scrolled, smoothed over a few …\nSet spacing between columns/rows. Default: …\nThe current spacing options for this <code>Ui</code>. Short for …\nHow much space we take up. The line is painted in the …\nThe horizontal spacing between the left and right UIs.\nSizes and distances between widgets\nMutably borrow internal <code>Spacing</code>. Changes apply to this <code>Ui</code> …\nThe length of the range, i.e. <code>max - min</code>.\nThe default egui fonts supports around 1216 emojis in …\nHow much the value changes when dragged one point (logical …\nShortcut for <code>add(Spinner::new())</code>\nSet both <code>x</code> and <code>y</code> to the same value.\nSplit rectangle in left and right halves. <code>t</code> is expected to …\nSplit rectangle in left and right halves at the given <code>x</code> …\nThis is for platforms that only support 16-bit index …\nSplit rectangle in top and bottom halves. <code>t</code> is expected to …\nSplit rectangle in top and bottom halves at the given <code>y</code> …\nExpand the shadow in all directions by this much.\n<code>[2, 1]</code> for wide screen, and <code>[1, 2]</code> for portrait, etc. At …\nReturns the textures as <code>sRGBA</code> premultiplied pixels, row by …\nTime since last frame (in seconds), but gracefully handles …\nGet a reference to this <code>Ui</code>’s <code>UiStack</code>.\nPosition of the pointer at the time the gesture started.\nChange which row number the grid starts on. This can be …\nPoint in time when the gesture started.\nSets the minimal change of the value.\nThe scroll handle will stick to the bottom position even …\nThe scroll handle will stick to the rightmost position …\nStop dragging any widget.\nStop dragging any widget.\nStop editing the active <code>TextEdit</code> (if any).\nDraw a line through the text, crossing it out.\nPrefer using <code>RichText</code> directly!\nIf <code>true</code>, add a subtle background color to every other row.\nWhether or not Grids and Tables should be striped by …\nOverride button stroke. Note that this will override any …\nShow text that stand out a bit (e.g. slightly brighter).\nExtra strong text (stronger color).\nPrefer using <code>RichText</code> directly!\negui theme (spacing, colors, etc).\nStyle options for this <code>Ui</code> and its children.\nThe currently active <code>Style</code> used by all subsequent windows, …\nOverride the style.\nMutably borrow internal <code>Style</code>. Changes apply to this <code>Ui</code> …\nMutate the currently active <code>Style</code> used by all subsequent …\nMutate the <code>Style</code> used by all subsequent windows, panels …\nThe <code>Style</code> used by all subsequent windows, panels etc.\nEdit the <code>Style</code>.\nAdd a suffix to the number, this can be e.g. a unit (“°…\nAdd a suffix to the number, this can be e.g. a unit (“°…\nTotal margins on both sides\nSurrender keyboard focus for a specific widget. See also …\nSurrender keyboard focus for this widget.\nRadius of the rounding of the South-West (left bottom) …\nEmoji or name representing the key\nMargins with the same size on opposing sides\nDoes the OS use dark or light mode? This is used when the …\nDoes the OS use dark or light mode?\nIf <code>true</code>, pressing tab will act on the widget, and NOT move …\nUser tags.\nClears all characters in this buffer and returns a string …\nHelper: move volatile (deltas and events), clone the rest.\nHelper: move <code>Self::events</code>, clone the other fields.\nTake everything ephemeral (everything except <code>cursor_icon</code> …\nRetrieve and clear the payload, if any.\nTessellate the given shapes into triangle meshes.\nRead-only access to <code>TessellationOptions</code>.\nControls the tessellator.\nRead-write access to <code>TessellationOptions</code>.\nLow-level texture manager.\nThe full, non-elided text of the input job.\nA custom text to display on the progress bar.\nShow a text next to the slider (e.g. explaining what the …\nLay out and paint some text.\nHow the text cursor acts.\nA <code>TextEdit</code> for multiple lines. Pressing enter key will …\nNo newlines (<code>\\n</code>) allowed. Pressing enter key will result …\nDefault width of a <code>crate::TextEdit</code>.\nHelpers regarding text selection for labels and text edit.\nSelected range of characters in <code>Self::current_text_value</code>.\nOverride the <code>TextStyle</code>.\nOverride the <code>TextStyle</code> if, and only if, this is a <code>RichText</code>.\nThe height of text of this text style\nAll known text styles.\nThe <code>FontFamily</code> and size you want to use for a specific …\nHow to vertically align text\nThe texture to use when drawing these triangles.\nTexture options used when creating the texture.\nSize of the texture, if known.\nShow stats about the allocated textures.\nTexture changes since last frame (including the font …\nThe <code>Theme</code> used to select the appropriate <code>Style</code> (dark or …\nPreference for selection between dark and light …\nMonotonically increasing time, in seconds. Relative to …\nTime in seconds. Relative to whatever. Used for animation.\nHow long has it been (in seconds) since the pointer was …\nHow long has it been (in seconds) since the pointer was …\nHow long has it been (in seconds) since the use last …\nMultiply image color with this. Default is WHITE (no tint).\nMultiply image color with this. Default is WHITE (no tint).\nMultiply image color with this. Default is WHITE (no tint).\nName of the viewport, if known.\nThe title of the viewport. <code>eframe</code> will use this as the …\nShow title bar on top of the window? If <code>false</code>, the window …\nConvert <code>Min =&gt; 0.0</code>, <code>Center =&gt; 0.5</code> or <code>Max =&gt; 1.0</code>.\nTreat this vector as a position. <code>v.to_pos2()</code> is equivalent …\nConvert <code>Min =&gt; -1.0</code>, <code>Center =&gt; 0.0</code> or <code>Max =&gt; 1.0</code>.\n-1, 0, or +1 for each axis\nThe vector from origin to this position. <code>p.to_vec2()</code> is …\nToggle the given popup between closed and open.\nActs like a checkbox, but looks like a <code>SelectableLabel</code>.\nWidth of a tooltip (<code>on_hover_ui</code>, <code>on_hover_text</code> etc).\nThe id should be globally unique, e.g. …\n<code>min.y</code>\nPlace elements vertically, top to bottom.\nTop-down layout justified so that buttons etc fill the …\nRetrieve the <code>LayerId</code> of the top level windows.\n<code>min.y</code>\ninner margin plus outer margin.\nDisplay trailing color behind the slider’s circle. …\nTransform the mesh in-place with the given transform.\nMove the shape by this many points, in-place.\nTransform all the graphics at the given layer.\nTranslate location by this much, in-place\nMove the shape by <code>delta</code>, in-place.\nMove all the graphics at the given layer.\nRelative movement (comparing previous frame and current …\nReturns true if this widget was triple-clicked this frame …\nReturns true if this widget was triple-clicked this frame …\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Truncate</code>.\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Truncate</code>.\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Truncate</code>.\nTry loading the bytes from the given uri using any …\nTry loading the image from the given uri using any …\nTry loading the texture from the given uri using any …\nExtra scale and vertical tweak to apply to all text of …\nThe type of widget this is.\nAllocate space, interact, paint, and return a <code>Response</code>.\nShow the options in the ui.\nIs the pointer (mouse/touch) above the current <code>Ui</code>?\nProvide some information about the new <code>Ui</code> being built.\nDraw a line under the text.\nPrefer using <code>RichText</code> directly!\nThe union of two bounding rectangle, i.e. the minimum <code>Rect</code> …\nA logical “or” operation. For instance …\nThe logical “or” of two <code>Sense</code>s.\nThis is a globally unique ID of this <code>Ui</code>, based on where in …\nTime since last frame, in seconds.\nUpdate the value on each key press when text-editing the …\nReturns the URI of the image.\nGet the <code>uri</code> that this image was constructed from.\nShow the URL of hyperlinks in a tooltip when hovered.\nHow much space is used by panels and windows.\nHow much space is used by panels and windows.\nMiscellaneous tools used by the rest of egui.\nSelect UV range. Default is (0,0) in top-left, (1,1) …\nSelect UV range. Default is (0,0) in top-left, (1,1) …\nSelect UV range. Default is (0,0) in top-left, (1,1) …\nIf you use a small font and <code>Align::TOP</code> you can get the …\nThe inner value of the <code>Id</code>.\nThe current value of sliders etc.\n<code>vec2(x, y) == Vec2::new(x, y)</code>\nCurrent velocity of pointer.\nStart a ui with vertical layout. Widgets will be …\nExplicitly ask for a vertical line.\nMake this a vertical slider.\nCreate a vertical scroll area.\nSet the vertical align of the inner text.\ne.g. for when aligning text within a button.\nIf <code>true</code>, pressing vertical arrows will act on the widget, …\nStart a ui with vertical layout. Widgets will be …\nStart a ui with vertical layout. Widgets will be …\nSet the vertical scroll offset position.\nThe vertex data indexed by <code>indices</code>.\negui supports multiple viewports, corresponding to …\nRead the state of the current viewport.\nInfo about the active viewport\nInfo about the active viewport\nViewport in points.\nRead the state of a specific current viewport.\nReturn the <code>ViewportId</code> of the current viewport.\nThis is used to specify what viewport that should repaint.\nThe id of the active viewport.\nThe viewport rectangle. This is what you would use in e.g. …\nAll the active viewports, including the root.\nThe user-code that shows the GUI.\nThe user-code that shows the GUI, used for deferred …\nInformation about all egui viewports.\nThe visual bounding rectangle (includes stroke widths)\nThe current visuals settings of this <code>Ui</code>. Short for …\nColors etc.\nMutably borrow internal <code>visuals</code>. Changes apply to this <code>Ui</code> …\nA vertical line.\nPaints a vertical line.\nEnable/disable vertical scrolling. <code>false</code> by default.\nTurn on/off scrolling on the vertical axis.\nIf <code>true</code>, egui is currently listening on text input (e.g. …\nTrue if egui is currently interested in the pointer (mouse …\nThe <code>crate::Context</code> will call this at the end of each frame …\nA good color for warning text (e.g. orange).\nHelper function that adds a label when compiling with …\nCheck reusing of <code>Id</code>s, and show a visual warning on screen …\nWas this popup visible last frame?\nShow text that is weaker (fainter color).\nExtra weak text (fainter color).\nPrefer using <code>RichText</code> directly!\nReturns <code>true</code> if the widget with the given <code>Id</code> contains the …\nFor accessibility.\nWidgets are pieces of GUI such as <code>Label</code>, <code>Button</code>, <code>Slider</code> …\nVisual styles of widgets\nSet the outer width of the button and menu.\nImage width. This should be a multiple of 4.\nThe allowable width range for the panel, including margins.\nWill the visual output of this pass be discarded?\nWindow background color.\nHighlight the topmost window.\nHorizontal and vertical margins within a window frame.\nGenerate a new <code>Id</code> by hashing the parent <code>Id</code> and the given …\nCall the provided function with the given ID pushed on the …\nWhether the window will be initially focused or not.\nThis window is always on top\nOn Wayland\nSets whether clamp the window’s size to monitor’s …\nCreate a painter for a sub-region of this <code>Painter</code>.\nDoes not work on X11.\nThe alignment to use on the cross axis.\nJustify widgets along the cross axis?\nSets whether the window should have a border, a title bar, …\nOn Windows: enable drag and drop support. Drag and drop can\nSets whether the window should be put into fullscreen upon …\nmacOS: Makes the window content appear behind the titlebar.\nThe application icon, e.g. in the Windows task bar or the …\nRequests the window to be of specific dimensions.\nRedirect shapes to another paint layer.\nRedirect where you are painting.\nThe new layout will take up all available space.\nThe alignment to use on the main axis.\nJustify widgets on the main axis?\nWrap widgets when we overflow the main axis?\nSets the maximum dimensions a window can have.\nDoes not work on X11.\nRequest that the window is maximized upon creation.\nSets the minimum dimensions a window can have.\nDoes not work on X11.\nOn desktop: mouse clicks pass through the window, used for …\nReturns a response with a modified <code>Self::rect</code>.\nThe initial “outer” position of the window, i.e. where …\nSets whether the window is resizable or not.\nSetting this will allow for dynamic coloring of rows of …\nInsert a tag with no value.\nInsert a tag with some value.\nwindows: Whether show or hide the window icon in the …\nSets the initial title of the window in the title bar.\nmacOS: Set to <code>false</code> to hide the window title.\nmacOS: Set to <code>false</code> to hide the titlebar button (close, …\nmacOS: Set to <code>false</code> to make the titlebar transparent, …\nSets whether the background of the window should be …\nSets whether the window will be initially visible or …\nCreate a new Scope and transform its contents via a …\nControl if window is always-on-top, always-on-bottom, or …\nOn X11\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Wrap</code>.\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Wrap</code>.\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Wrap</code>.\nIf set, labels, buttons, etc. will use this to determine …\nControls the wrap mode used for the selected text.\nWhich wrap mode should the text use in this <code>Ui</code>?\nSet the wrap mode for the text.\nSet the wrap mode for the text.\nHow to wrap the texture when the texture coordinates are …\nIf set, labels, buttons, etc. will use this to determine …\nShould text wrap in this <code>Ui</code>?\nReturns an alignment by the X (horizontal) axis\nHow far to the right.\nRightwards. Width.\nReturns an alignment by the Y (vertical) axis\nHow far down.\nDownwards. Height.\nShift font’s glyphs downwards by this amount of logical …\nShift font’s glyphs downwards by this fraction of the …\nSwizzle the axes.\nZoom scale factor this frame (e.g. from ctrl-scroll or …\nProportional zoom factor (pinch gesture).\n2D non-proportional zoom scale factor this frame (e.g. …\n2D non-proportional zoom factor (pinch gesture).\nGlobal zoom factor of the UI.\nGlobal zoom factor of the UI.\nIf <code>true</code>, egui will change the scale of the ui (…\nWhat mouse button? For touches, use <code>PointerButton::Primary</code>.\nThe direction of the vector indicates how to move the …\nHashed device identifier (if available; may be zero). Can …\nDescribes how hard the touch device was pressed. May …\nUnique identifier of a finger/pen. Value is stable from …\nMost of the time, it’s the logical key, heeding the …\nThe state of the modifier keys at the time of the event.\nThe state of the modifier keys at the time of the event.\nThe state of the modifier keys at the time of the event.\nOne of: start move end cancel.\nThe physical key, corresponding to the actual position on …\nWhere is the pointer?\nPosition of the touch (or where the touch was last …\nWas it pressed or released?\nWas it the button/touch pressed this frame, or released?\nIf this is a <code>pressed</code> event, is it a key-repeat?\nThe unit of <code>delta</code>: points, lines, or pages.\nThe unique identifier for this image, e.g. …\nAn action to be taken on an accessibility node.\nHandles requests from assistive technologies or other …\nHandles activation of the application’s accessibility …\nA 2D affine transform. Derived from kurbo.\nA click will be performed on one of the node’s ancestors.\nDefines a custom action for a UI element.\nRequires <code>ActionRequest::data</code> to be set to …\nHandles deactivation of the application’s accessibility …\nDecrement a numeric value by one step.\nDo the default action for an object, typically this means …\nDescribes the action that will be performed on a given …\nA transform that is flipped on the x-axis.\nA transform that is flipped on the y-axis. Useful for …\nA generic container that should be ignored by assistive …\nE.g. most toolbars and separators.\nThe identity transform.\nIncrement a numeric value by one step.\nIndicates if a form control has invalid input or if a web …\nBehaves similar to an ARIA grid but is primarily used by …\nContains the bullet, number, or other marker for a list …\nA single accessible object. A complete UI is represented …\nBuilds a <code>Node</code>.\nThe stable identity of a <code>Node</code>, unique within the node’s …\nThe point at the origin; (0, 0).\nLanguage specific ordering (alpha, roman, cjk-ideographic, …\nA 2D point. Derived from kurbo.\nA rectangle. Derived from kurbo.\nDelete any selected text in the control’s text value and …\nThe type of an accessibility node.\nScroll any scrollable containers to make the target object …\nOptional target rectangle for <code>Action::ScrollIntoView</code>, in …\nScroll the given object to a specified point in the tree’…\nTarget for <code>Action::ScrollToPoint</code>, in platform-native …\nRequires <code>ActionRequest::data</code> to be set to …\nTarget for <code>Action::SetScrollOffset</code>, in the coordinate space\nDon’t focus this node, but set it as the sequential …\nRequires <code>ActionRequest::data</code> to be set to …\nReplace the value of the control with the specified value …\nA 2D size. Derived from kurbo.\nThis is just like a multi-line document, but signals that …\nThe data associated with an accessibility tree that’s …\nA serializable representation of an atomic change to a <code>Tree</code>…\nA 2D vector. Derived from kurbo.\nE.g. menu or combo box.\nThe point (0, 0).\nThe empty rectangle at the origin.\nA size with zero width or height.\nThe vector (0, 0).\nTake absolute value of width and height.\nA single character, usually part of this node’s name, …\nA single character, usually part of this node’s name, …\nThe position where the selection started, and which does …\nThe name of the application this tree belongs to.\nThe area of the rectangle.\nGet the coefficients of the transform.\nA way for application authors to identify this node for …\nA way for application authors to identify this node for …\nBackground color in RGBA.\nBackground color in RGBA.\nThe bounding box of this node, in the node’s coordinate …\nThe bounding box of this node, in the node’s coordinate …\nThe index of an item in <code>Node::character_lengths</code>, or the …\nFor inline text. The length (non-inclusive) of each …\nFor inline text. The length (non-inclusive) of each …\nFor inline text. This is the position of each character …\nFor inline text. This is the position of each character …\nFor inline text. This is the advance width of each …\nFor inline text. This is the advance width of each …\nIndicates that this node clips its children, i.e. may have …\nIndicates that this node clips its children, i.e. may have …\nFor <code>Role::ColorWell</code>, specifies the selected color in RGBA.\nFor <code>Role::ColorWell</code>, specifies the selected color in RGBA.\nReturns <code>true</code> if <code>point</code> lies within <code>self</code>.\nDeactivate the application’s accessibility …\nCompute the determinant of this transform.\nNote: division by a scalar is implemented by multiplying …\nPerform the requested action. If the requested action is …\nThe active end of the selection, which changes as the …\nThe node within this tree that has keyboard focus when the …\nOnly present when different from parent.\nOnly present when different from parent.\nFont size is in pixels.\nFont size is in pixels.\nFont weight can take on any arbitrary numeric value. …\nFont weight can take on any arbitrary numeric value. …\nForeground color in RGBA.\nForeground color in RGBA.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA new rectangle from origin and size.\nA new rectangle from two points.\nThe height of the rectangle.\nThe height.\nInner HTML of an element. Only used for a top-level math …\nInner HTML of an element. Only used for a top-level math …\nThe intersection of two rectangles.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompute the inverse transform.\nUse for a control or group of controls that disallows …\nUse for a control or group of controls that disallows …\nWhether this rectangle has zero area.\nWhether this node is expanded, collapsed, or neither.\nWhether this node is expanded, collapsed, or neither.\nIs this map finite?\nExclude this node and its descendants from the tree …\nExclude this node and its descendants from the tree …\nIndicates whether this node causes a hard line-break (e.g. …\nIndicates whether this node causes a hard line-break (e.g. …\nIf a dialog box is marked as explicitly modal.\nIf a dialog box is marked as explicitly modal.\nIs this map NaN?\nIndicates whether this node causes a page break.\nIndicates whether this node causes a page break.\nUse for a textbox that allows focus/selection but not …\nUse for a textbox that allows focus/selection but not …\nIndicates whether this node is selected or unselected.\nIndicates whether this node is selected or unselected.\nThis element allows touches to be passed through when a …\nThis element allows touches to be passed through when a …\nA keystroke or sequence of keystrokes, complete with any …\nA keystroke or sequence of keystrokes, complete with any …\nOnly present when different from parent.\nOnly present when different from parent.\nThe list style type. Only available on list items.\nThe list style type. Only available on list items.\nCreates an affine transformation that takes the unit …\nReturns the maximum value for the x-coordinate of the …\nReturns the maximum value for the y-coordinate of the …\nReturns the minimum value for the x-coordinate of the …\nReturns the minimum value for the y-coordinate of the …\nConstruct an affine transform from coefficients.\nCreate a new <code>Point</code> with the provided <code>x</code> and <code>y</code> coordinates.\nA new rectangle from minimum and maximum coordinates.\nCreate a new <code>Size</code> with the provided <code>width</code> and <code>height</code>.\nCreate a new vector.\nThe node’s role must be <code>Role::InlineTextBox</code>.\nZero or more new or updated nodes. Order doesn’t matter.\nThe origin of the rectangle.\nAs with the <code>aria-owns</code> property in ARIA, this property …\nAs with the <code>aria-owns</code> property in ARIA, this property …\nIf a text input has placeholder text, it should be exposed …\nIf a text input has placeholder text, it should be exposed …\nOn radio buttons this should be set to a list of all of …\nOn radio buttons this should be set to a list of all of …\nRequests a <code>TreeUpdate</code> with a full tree. If the application …\nAn optional string that may override an assistive …\nAn optional string that may override an assistive …\nThe identifier of the tree’s root node.\nAn affine transform representing rotation.\nAn affine transform representing uniform scaling.\nAn affine transform representing non-uniform scaling with …\nThe size of the rectangle.\nAn optional string that may override an assistive …\nAn optional string that may override an assistive …\nConvert this vector into a <code>Point</code>.\nConvert this vector into a <code>Size</code>.\nConvert this point into a <code>Vec2</code>.\nConvert this size into a <code>Vec2</code>, with <code>width</code> mapped to <code>x</code> and …\nThe name of the UI toolkit in use.\nThe version of the UI toolkit.\nIf a node’s only accessible name comes from a tooltip, …\nIf a node’s only accessible name comes from a tooltip, …\nAn affine transform to apply to any coordinates within …\nAn affine transform to apply to any coordinates within …\nCompute the bounding box of a transformed rectangle.\nAn affine transform representing translation.\nRarely updated information about the tree as a whole. This …\nThe smallest rectangle enclosing two rectangles.\nCompute the union with one point.\nThe width of the rectangle.\nThe width.\nCreate a new <code>Rect</code> with the same size as <code>self</code> and a new …\nCreate a new <code>Rect</code> with the same origin as <code>self</code> and a new …\nFor inline text. The length of each word in characters, as …\nFor inline text. The length of each word in characters, as …\nThe x coordinate.\nThe x-coordinate.\nThe minimum x coordinate (left edge).\nThe maximum x coordinate (right edge).\nThe y coordinate.\nThe y-coordinate.\nThe minimum y coordinate (top edge in y-down spaces).\nThe maximum y coordinate (bottom edge in y-down spaces).\nA <code>HashMap</code> using <code>RandomState</code> to hash the items. (Requires …\nA <code>HashSet</code> using <code>RandomState</code> to hash the items. (Requires …\nA <code>Hasher</code> for hashing an arbitrary stream of bytes.\nType alias for HashMap&lt;K, V, ahash::RandomState&gt;\nA convenience trait that can be used together with the …\nType alias for HashSet&lt;K, ahash::RandomState&gt;\nA convenience trait that can be used together with the …\nProvides a Hasher factory. This is typically used (e.g. by …\nReturns the intersection of <code>self</code> and <code>rhs</code> as a new …\nReturns the union of <code>self</code> and <code>rhs</code> as a new <code>AHashSet&lt;T, S&gt;</code>.\nReturns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …\nConstructs a new AHasher with keys based on this …\nConstructs a new AHasher with fixed keys. If <code>std</code> is …\nCreates an empty <code>AHashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …\nReturns the argument unchanged.\nExamples\nReturns the argument unchanged.\nReturns the argument unchanged.\nThis crates a hashset from the provided iterator using …\nCreate a new <code>RandomState</code> <code>BuildHasher</code> based on the provided …\nCalculates the hash of a single value. This provides a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a new HashMap\nConstructs a new HashSet\nThis crates a hashset using RandomState::new. See the …\nCreate a new <code>RandomState</code> <code>BuildHasher</code> using random keys.\nReturns the difference of <code>self</code> and <code>rhs</code> as a new …\nConstructs a new HashMap with a given initial capacity\nConstructs a new HashSet with a given initial capacity\nThis crates a hashset with the specified capacity using …\nBuild a <code>RandomState</code> from a single key. The provided key …\nAllows for explicitly setting the seeds to used. All …\nA supplier of Randomness used for different hashers. See …\nProvides a Hasher factory. This is typically used (e.g. by …\nProvides an optional way to manually supply a source of …\nIndicate whether a popup will be shown above or below the …\nAn area on the screen that can be moved by dragging.\nState of an <code>Area</code> that is persisted between frames.\nA panel that covers the remainder of the screen, i.e. …\nPopup will be closed on click anywhere, inside or outside …\nPopup will be closed if the click happened somewhere else …\nA header which can be collapsed/expanded, revealing a …\nThe response from showing a <code>CollapsingHeader</code>.\nA drop-down selection menu with a descriptive label.\nAdd a background, frame and/or margin to a rectangular …\nA function that paints the <code>ComboBox</code> icon\nClicks will be ignored. Popup might be closed manually by …\nDetermines popup’s close behavior\nA region that can be resized by dragging the bottom right …\nAdd vertical and/or horizontal scrolling to a contained <code>Ui</code>.\nA panel that covers the entire left or right side of a <code>Ui</code> …\nPut some widgets on the left and right sides of a ui.\nA panel that covers the entire top or bottom of a <code>Ui</code> or …\nBuilder for a floating window which can be dragged, …\nNone iff collapsed.\nNone iff collapsed.\nFrame container\nResponse of the actual clickable header.\nMargin within the painted frame.\nIf false, clicks goes straight through to what is behind …\nAt what time was this area first shown?\nWhat is the id of the next tooltip for this widget?\n0.0 if fully closed, 1.0 if fully open, and something …\nMargin outside the painted frame.\nPanels are <code>Ui</code> regions taking up e.g. the left side of a <code>Ui</code> …\nThe anchor point of the area, i.e. where on the area the …\nLast known position of the pivot.\nShow popup windows, tooltips, context menus etc.\nShows a popup above or below another widget.\nHelper for <code>popup_above_or_below_widget</code>.\nShow a tooltip at the current pointer position (if any).\nShow a tooltip at the given position.\nShow a tooltip at the current pointer position (if any).\nShow a tooltip under the given area.\nShow some text at the current pointer position (if any).\nLast known size.\nWas this popup visible last frame?\nA header which can be collapsed/expanded, revealing a …\nThe response from showing a <code>CollapsingHeader</code>.\nThis is a a building block for building collapsing regions.\nFrom <code>CollapsingState::show_header</code>.\nA function that paints an icon indicating if the region is …\nReturns the response of the collapsing button, the custom …\nNone iff collapsed.\nNone iff collapsed.\nReturns the response of the collapsing button, the custom …\nReturns the argument unchanged.\nReturns the argument unchanged.\nResponse of the actual clickable header.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n0 for closed, 1 for open, with tweening\n0.0 if fully closed, 1.0 if fully open, and something …\nPaint the arrow icon that indicated if the region is open …\nShow body if we are open, with a nice animation between …\nShow body if we are open, with a nice animation between …\nShows header and body (if expanded).\nPaint this <code>CollapsingState</code>’s toggle button. Takes an …\nAdd a background, frame and/or margin to a rectangular …\nAllocate the space that was used by <code>Self::content_ui</code>.\nAdd your widgets to this UI so it ends up within the frame.\nConvenience for calling <code>Self::allocate_space</code> and …\nThe frame that was prepared.\nReturns the argument unchanged.\nMargin within the painted frame.\nCalls <code>U::from(self)</code>.\nMargin outside the painted frame.\nPaint the frame.\nA panel that covers the remainder of the screen, i.e. …\nState regarding panels.\n<code>Left</code> or <code>Right</code>\nA panel that covers the entire left or right side of a <code>Ui</code> …\nA panel that covers the entire top or bottom of a <code>Ui</code> or …\n<code>Top</code> or <code>Bottom</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe size of the panel (from previous frame).\nPopup will be closed on click anywhere, inside or outside …\nPopup will be closed if the click happened somewhere else …\nClicks will be ignored. Popup might be closed manually by …\nDetermines popup’s close behavior\nWhat is the id of the next tooltip for this widget?\nShows a popup above or below another widget.\nHelper for <code>popup_above_or_below_widget</code>.\nShow a tooltip at the current pointer position (if any).\nShow a tooltip at the given position.\nShow a tooltip at the current pointer position (if any).\nShow a tooltip under the given area.\nShow some text at the current pointer position (if any).\nWas this popup visible last frame?\nHide scroll bar even if they are needed.\nAlways show the scroll bar, even if the contents fit in …\nAdd vertical and/or horizontal scrolling to a contained <code>Ui</code>.\nIndicate whether the horizontal and vertical scroll bars …\nShow scroll bars only when the content size exceeds the …\nThe size of the content. If this is larger than …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n<code>Id</code> of the <code>ScrollArea</code>.\nWhat the user closure returned.\nWhere on the screen the content is (excludes scroll bars).\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPositive offset means scrolling down/right\nThe current state of the scroll area.\nGet the current kinetic scrolling velocity.\nPrint this text next to the cursor at the end of the pass.\nBackend-specific painting.\nCircle with optional outline and fill.\nHow to paint a circle.\nA <code>Mesh</code> or <code>PaintCallback</code> within a clip rectangle.\nA <code>Shape</code> within a clip rectangle.\nRGBA image.\nThis format is used for space-efficient color …\nA 2D RGBA color image in RAM.\nHow paths will be colored.\nA cubic Bézier Curve.\nA cubic Bézier Curve.\nEllipse with optional outline and fill.\nHow to paint an ellipse.\nUsed for the font texture.\nFont of unknown size.\nHow to select a sized font.\nA single-channel image designed for the font texture.\nThe collection of fonts used by <code>epaint</code>.\nText that has been laid out, ready for painting.\nWas epaint compiled with the <code>rayon</code> feature?\nHue, saturation, value, alpha. All in the range [0, 1]. No …\nLike Hsva but with the <code>v</code> value (brightness) being gamma …\nAn image stored in RAM.\nA change to an image.\nA line between two points.\nTextures allocated using <code>TextureManager</code>.\nA value for all four sides of a rectangle, often used to …\nTextured triangles in two dimensions.\nA general triangle mesh.\nA version of <code>Mesh</code> that uses 16-bit indices.\nA font where each character is the same width (<code>w</code> is the …\nSame as <code>PathStroke::default</code>.\nOne of the names in <code>FontDefinitions::families</code>.\nPaint nothing. This can be useful as a placeholder.\nIf you want to paint some 3D shapes inside an egui region, …\nInformation passed along with <code>PaintCallback</code> (…\nCollected allocation statistics for shapes and meshes.\nA series of lines between points. The path can have a …\nA path which can be stroked and/or filled (if closed).\nDescribes the width and color of paths. The color can …\nA position on screen.\nA rendering primitive - either a <code>Mesh</code> or a <code>PaintCallback</code>.\nA font where some characters are wider than other (e.g. ‘…\nA quadratic Bézier Curve.\nA quadratic Bézier Curve.\nA rectangular region of space.\nRectangle with optional outline and fill.\nHow to paint a rectangle.\n0-1 linear space <code>RGBA</code> color with premultiplied alpha.\nHow rounded the corners of things should be\nThe color and fuzziness of a fuzzy shape.\nA paint primitive such as a circle or a piece of text. …\nThe entire path is one solid color, this is the default.\nDescribes the width and color of a line.\nTessellation quality options\nConverts <code>Shape</code>s into triangles (<code>Mesh</code>).\nText.\nHow to paint some text on screen.\nContains font data in an atlas, where each character …\nUsed to paint images.\nWhat texture to use in a <code>Mesh</code> mesh.\nLow-level manager for allocating textures.\nProvide a callback which takes in the path’s bounding …\nYour own texture, defined in any which way you want. The …\nRecursively nest more shapes - sometimes a convenience to …\nA vector has a direction and length. A <code>Vec2</code> is often used …\nThe 2D vertex type.\nThe UV coordinate of a white region of the texture mesh.\nalpha 0-1. A negative value signifies an additive color …\nalpha 0-1. A negative value signifies an additive color …\nAllocate a new texture.\nReturns the coordinates of where the rect ended up, and …\nGet meta-data about all allocated textures in some …\nRotate text by this many radians clockwise. The pivot is …\nCall at the start of each frame with the latest known …\nThe maximum distance between the original curve and the …\nThe width of the blur, i.e. the width of the fuzzy …\nIf larger than zero, the edges of the rectangle (for both …\nPaint something custom (e.g. 3D stuff).\nClip rectangle in points.\nClip / scissor rectangle. Only show the part of the <code>Shape</code> …\nClip / scissor rectangle. Only show the part of the <code>Mesh</code> …\nNumber of separate clip rectangles\nIf true, connect the first and last of the points together.\nA line that closes back to the start point again.\nIf <code>true</code> (default) cull certain primitives before …\nsRGBA with premultiplied alpha\nColor of the opaque center of the shadow.\nA convex polygon with a fill and optional stroke.\nIf true, no clipping will be done.\nOutput the clip rectangles to be painted.\nOutput the text-containing rectangles.\nSet to true the text was truncated due to …\nThe default value will be 1.0e-5, it will be used during …\nAny <code>Color32::PLACEHOLDER</code> in the galley will be replaced by …\nList of all known font families.\nWhat font family to use.\nUse “feathering” to smooth out the edges of shapes as …\nThe size of the feathering, in physical pixels.\nFill is only supported for convex polygons.\nHow to fill the rectangle.\nWhen this get high, it might be time to clear and start …\nIf the rect should be filled with a texture, which one?\nFind out the t value for the point where the curve is …\nfind a set of points that approximate the cubic Bézier …\nfind a set of points that approximate the quadratic …\nfind a set of points that approximate the cubic Bézier …\nHow full is the font atlas?\nCall at the end of each frame (before painting) to get the …\nCurrent size of the font image. Pass this to …\nIterates through the curve invoking a callback at each …\nCompute a flattened approximation of the curve, invoking a …\nFree an existing texture.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a cubic Bézier curve based on 4 points and stroke.\nCreate a new quadratic Bézier shape based on the 3 points …\nUpdate the whole texture.\nThe laid out text, from <code>Fonts::layout_job</code>.\nWidth of this character in points.\nhue 0-1\nhue 0-1\nCan we display this glyph?\nCan we display all the glyphs in this text?\nThe full font atlas image.\nThe full font atlas image.\nWhat to set the texture to.\nDraw as triangles (i.e. the length is always multiple of …\nDraw as triangles (i.e. the length is always multiple of …\nSet the stroke to be painted entirely inside of the shape\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if width is zero or color is solid and transparent\nAre all indices within the bounds of the contained …\nIs this affecting the whole texture? If <code>false</code>, this is a …\nThe job that this galley is the result of. Contains the …\nWill wrap text at the given width and line break at <code>\\n</code>.\nLike <code>Self::layout</code>, made for when you want to pick a color …\nLayout some text.\nWill line break at <code>\\n</code>.\nA line through many points.\nLogical bounding rectangle (ignoring stroke width)\nLogical bounding rectangle (ignoring stroke width)\nThe other corner, opposing <code>Self::min</code>. Usually the right …\nTight bounding box around all the meshes in all the rows. …\nGet meta-data about a specific texture.\nSet the stroke to be painted right on the edge of the …\nOne of the corners of the rectangle, usually the left top …\nHelper module that adds extra checks when the …\nRadius of the rounding of the North-East (right top) …\nThe given fallback color will be used for any uncolored …\nCreate a new <code>Tessellator</code>.\nCreate a new <code>Fonts</code> for text layout. This call is …\nCreate a new <code>PathStroke</code> with a UV function\nTotal number of allocated textures.\nTotal number of indices in all the row meshes.\nTotal number of vertices in all the row meshes.\nRadius of the rounding of the North-West (left top) corner.\nMove the shadow by this much.\nIf set, the text will be rendered with the given opacity …\nSet the stroke to be painted entirely outside of the shape\nIf set, the text color in the galley will be ignored and …\nIf <code>rayon</code> feature is activated, should we parallelize …\nUpdate a sub-region of an existing texture.\nThe pixels, row by row, from top to bottom.\nThe coverage value.\nPixels per point.\nThe number of physical pixels for each logical point. …\nThe first point is the starting point and the last one is …\nThe first point is the starting point and the last one is …\nFilled paths should prefer clockwise order.\nIf <code>None</code>, set the whole texture to <code>Self::image</code>.\nLogical pixel coordinates (points). (0,0) is the top left …\nTop left corner of the first character.\n<code>pos2(x, y) == Pos2::new(x, y)</code>\nReturns the locations and sizes of pre-rasterized discs …\nIf <code>true</code>, small filled circled will be optimized by using …\nWhat to paint - either a <code>Mesh</code> or a <code>PaintCallback</code>.\nRadius is the vector (a, b) where the width of the Ellipse …\nWhere to paint.\nBounding rect.\nIncrease the retain-count of the given texture.\nIf <code>true</code> (default) align text to mesh grid. This makes the …\nHow rounded the corners are. Use <code>Rounding::ZERO</code> for no …\nHeight of one row of text in points\nRows of text, from top to bottom.\nsaturation 0-1\nsaturation 0-1\nCalculate the point (x,y) at t based on the cubic Bézier …\nCalculate the point (x,y) at t based on the quadratic …\nFull size of the screen, in pixels.\nRadius of the rounding of the South-East (right bottom) …\nAssign a new image to an existing texture, or update a …\nSet the <code>Rect</code> to use for culling.\nThe shape\nwidth, height.\nwidth, height\nHeight in points.\nsplit the original cubic curve into a new one within a …\nExpand the shadow in all directions by this much.\nCollect statistics about what is being painted.\nColor and thickness of the line.\nThe thickness and color of the outline.\nRadius of the rounding of the South-West (left bottom) …\nCall to get the change to the image since last call.\nTake and reset changes since last frame.\nTessellate a single <code>CircleShape</code> into a <code>Mesh</code>.\nTessellate a clipped shape into a list of primitives.\nTessellate a single <code>CubicBezierShape</code> into a <code>Mesh</code>.\nTessellate a single <code>EllipseShape</code> into a <code>Mesh</code>.\nTessellate a line segment between the two points with the …\nTessellate a single <code>Mesh</code> into a <code>Mesh</code>.\nTessellate a single <code>PathShape</code> into a <code>Mesh</code>.\nTessellate a single <code>QuadraticBezierShape</code> into a <code>Mesh</code>.\nTessellate a single <code>Rect</code> into a <code>Mesh</code>.\nTessellate a single <code>Shape</code> into a <code>Mesh</code>.\nTurns <code>Shape</code>:s into sets of triangles.\nTessellate a single <code>TextShape</code> into a <code>Mesh</code>.\nConverts graphics primitives into textured triangles.\nEverything related to text, fonts, text layout, cursors …\nThe font atlas. Pass this to <code>crate::Tessellator</code>.\nThe texture to use when drawing these triangles.\nThe texture to use when drawing these triangles.\nThe texture options suitable for a font texture\nConvert the quadratic Bézier curve to one <code>PathShape</code>. The …\nConvert the cubic Bézier curve to one or two <code>PathShape</code>’…\nTransform the curve with the given transform.\nTransform the curve with the given transform.\nAdd this underline to the whole text. You can also set an …\nNormalized texture coordinates. (0, 0) is the top left …\nWhat UV coordinates to use for the texture?\nvalue 0-1, in gamma-space (~perceptually even)\nvalue 0-1\nIf <code>true</code>, invalid meshes will be silently ignored. If <code>false</code>…\n<code>vec2(x, y) == Vec2::new(x, y)</code>\nThe vertex data indexed by <code>indices</code>.\nThe vertex data indexed by <code>indices</code>.\nViewport in points.\nThe visual bounding rectangle (includes stroke width)\nThe visual bounding rectangle (includes stroke width)\nThe visual bounding rectangle (includes stroke width)\nThe visual bounding rectangle (includes stroke width)\nThe visual bounding rectangle (includes stroke width)\nThe visual bounding rectangle (includes stroke width)\nThe visual bounding rectangle\nRotate text by this many radians clockwise. The pivot is …\nIf larger than zero, the edges of the rectangle (for both …\nRender text with this opacity in gamma space\nUse the given color for the text, regardless of what color …\nHow far to the right.\nRightwards. Width.\nHow far down.\nDownwards. Height.\nHow paths will be colored.\nThe entire path is one solid color, this is the default.\nProvide a callback which takes in the path’s bounding …\nThis format is used for space-efficient color …\n3 hexadecimal digits, one for each of the r, g, b channels\n4 hexadecimal digits, one for each of the r, g, b, a …\n6 hexadecimal digits, two for each of the r, g, b channels\n8 hexadecimal digits, one for each of the r, g, b, a …\nA wrapper around Color32 that converts to and from a …\nHue, saturation, value, alpha. All in the range [0, 1]. No …\nLike Hsva but with the <code>v</code> value (brightness) being gamma …\n0-1 linear space <code>RGBA</code> color with premultiplied alpha.\nalpha 0-1. A negative value signifies an additive color …\nalpha 0-1. A negative value signifies an additive color …\nlinear [0, 1] -&gt; gamma [0, 1] (not clamped). Works for …\nlinear [0, 1] -&gt; gamma [0, 255] (clamped). Values outside …\nhue 0-1\nhue 0-1\nAll ranges in 0-1, rgb is linear.\ngamma [0, 255] -&gt; linear [0, 1].\nlinear [0, 255] -&gt; linear [0, 1]. Useful for alpha-channel.\ngamma [0, 1] -&gt; linear [0, 1] (not clamped). Works for …\nlinear [0, 1] -&gt; linear [0, 255] (clamped). Useful for …\nAll ranges in 0-1, rgb is linear.\nsaturation 0-1\nsaturation 0-1\nCheap and ugly. Made for graying out disabled <code>Ui</code>s.\nvalue 0-1, in gamma-space (~perceptually even)\nvalue 0-1\nleft/center/right or top/center/bottom alignment for e.g. …\nTwo-dimension alignment, e.g. <code>Align2::LEFT_TOP</code>.\nHorizontal or vertical center.\nExtension trait to provide <code>ord()</code> method.\nThis struct tracks recent values of some time series.\nThe identity rotation: nothing rotates\nIs this an integer type?\nLargest finite value\nSmallest finite value\nRight or bottom.\nLeft or top.\nExtends <code>f32</code>, <code>Vec2</code> etc with <code>at_least</code> and <code>at_most</code> as aliases …\nImplemented for all builtin numeric types\nHelper trait to implement <code>lerp</code> and <code>remap</code>.\nWraps a floating-point value to add total order and hash. …\nA position on screen.\nInclusive range of floats, i.e. <code>min..=max</code>, but more …\nHelper trait to implement <code>lerp</code> and <code>remap</code>.\nA rectangular region of space.\nLinearly transforms positions from one <code>Rect</code> to another.\nRepresents a rotation in the 2D plane.\nLinearly transforms positions via a translation, then a …\nA vector has a direction and length. A <code>Vec2</code> is often used …\nTwo bools, one for each axis (X and Y).\nValues must be added with a monotonically increasing time, …\nOne- and two-dimensional alignment (<code>Align::Center</code>, …\nReturn true when arguments are the same within some …\nMore readable version of <code>self.max(lower_limit)</code>\nMore readable version of <code>self.min(upper_limit)</code>\nAverage times rate. If you are keeping track of individual …\nIdentity rotation\nAmount of time contained from start to end in this <code>History</code>.\nEase in, ease out.\nEasing functions for animations.\nCalculate a lerp-factor for exponential smoothing using a …\nRemove samples that are too old.\nUse as few decimals as possible to show the value …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAngle is clockwise in radians. A 𝞃/4 = 90° rotation …\nIf you have a value animating over time, how much towards …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInverts the transform.\nWhere in the range is this value? Returns 0-1 if within …\n<code>(time, value)</code> pairs Time difference between values can be …\nCurrent number of values kept in history\nThe factor by which vectors will be scaled.\nLinear interpolation.\nThe other corner, opposing <code>Self::min</code>. Usually the right …\nMean time difference between values in this <code>History</code>.\nOne of the corners of the rectangle, usually the left top …\nApplies the right hand side transform, then the left hand …\nTransforms the given coordinate.\nTransforms the given rectangle.\nExample:\nCreates a new translation that first scales points around …\nWrap angle to <code>[-PI, PI]</code> range.\nType to provide total order, useful as key in sorted …\n<code>pos2(x, y) == Pos2::new(x, y)</code>\nLinearly remap a value from one range to another, so that …\nLike <code>remap</code>, but also clamps the value so that the returned …\nRound a value to the given number of decimal places.\nThe scale factors.\nScaling applied first, scaled around (0, 0).\nFind “simple” numbers is some range. Used by sliders.\nTotal number of values seen. Includes those that have been …\nTransforms the given coordinate in the <code>from</code> space to the <code>to</code>…\nTransforms the given coordinate in the <code>from</code> space to the <code>to</code>…\nTransforms the given rectangle in the <code>in</code>-space to a …\nTranslation amount, applied after scaling.\n<code>vec2(x, y) == Vec2::new(x, y)</code>\nCalculate a smooth velocity (per second) over the entire …\nHow far to the right.\nRightwards. Width.\nHow far down.\nDownwards. Height.\nleft/center/right or top/center/bottom alignment for e.g. …\nTwo-dimension alignment, e.g. <code>Align2::LEFT_TOP</code>.\nHorizontal or vertical center.\nRight or bottom.\nLeft or top.\nAllocates a rectangle of the specified <code>size</code> inside the …\nhttps://easings.net/#easeInBack\nhttps://easings.net/#easeInOutBack\nhttps://easings.net/#easeOutBack\nhttps://easings.net/#easeInBounce\nhttps://easings.net/#easeInOutBounce\nhttps://easings.net/#easeOutBounce\nhttps://easings.net/#easeInCirc\nhttps://easings.net/#easeInOutCirc\nhttps://easings.net/#easeOutCirc\nhttps://easings.net/#easeInCubic\nhttps://easings.net/#easeInOutCubic\nhttps://easings.net/#easeOutCubic\nhttps://easings.net/#easeInExpo\nhttps://easings.net/#easeInOutExpo\nhttps://easings.net/#easeOutExpo\nNo easing, just <code>y = x</code>\nhttps://easings.net/#easeInQuad\nhttps://easings.net/#easeInOutQuad\nhttps://easings.net/#easeOutQuad\nhttps://easings.net/#easeInSine\nhttps://easings.net/#easeInOutSine\nhttps://easings.net/#easeOuSine\nFind the “simplest” number in a closed range [min, max]…\nRGBA image.\nA 2D RGBA color image in RAM.\nUsed for the font texture.\nA single-channel image designed for the font texture.\nAn image stored in RAM.\nA change to an image.\nWhat to set the texture to.\nThe pixels, row by row, from top to bottom.\nThe coverage value.\nIf <code>None</code>, set the whole texture to <code>Self::image</code>.\nwidth, height.\nwidth, height\nProvides interior mutability.\nAn RAII implementation of a “scoped lock” of a mutex. …\nProvides interior mutability.\nAn RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …\nAn RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemember to handle <code>Color32::PLACEHOLDER</code> specially!\nAggregate information about a bunch of allocations.\nCollected allocation statistics for shapes and meshes.\nNumber of separate clip rectangles\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA connected line (without thickness or gaps) which can be …\nTessellation quality options\nConverts <code>Shape</code>s into triangles (<code>Mesh</code>).\nThe maximum distance between the original curve and the …\nIf <code>true</code> (default) cull certain primitives before …\nIf true, no clipping will be done.\nOutput the clip rectangles to be painted.\nOutput the text-containing rectangles.\nThe default value will be 1.0e-5, it will be used during …\nUse “feathering” to smooth out the edges of shapes as …\nThe size of the feathering, in physical pixels.\nThe path is taken to be closed (i.e. returning to the …\nLike <code>Self::fill</code> but with texturing.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf <code>rayon</code> feature is activated, should we parallelize …\nHelpers for constructing paths\nIf <code>true</code>, small filled circled will be optimized by using …\nIf <code>true</code> (default) align text to mesh grid. This makes the …\nA closed path (returning to the first point).\nOpen-ended.\nIf <code>true</code>, invalid meshes will be silently ignored. If <code>false</code>…\nAdd one quadrant of a circle\noverwrites existing points\nThe text should expand the <code>Ui</code> size when reaching its …\nA <code>.ttf</code> or <code>.otf</code> file and a font face index.\nDescribes the font data and the sizes to use.\nFont of unknown size.\nHow to select a sized font.\nExtra scale and vertical tweak to apply to all text of a …\nThe collection of fonts used by <code>epaint</code>.\nThe collection of fonts used by <code>epaint</code>.\nText that has been laid out, ready for painting.\nDescribes the task of laying out text.\nA font where each character is the same width (<code>w</code> is the …\nOne of the names in <code>FontDefinitions::families</code>.\nSuggested character to use to replace those in password …\nA font where some characters are wider than other (e.g. ‘…\nThe tessellated output of a row.\nOne <code>\\t</code> character is this many spaces wide.\nFormatting option for a section of text.\nHow to wrap and elide text.\nControls the text wrapping and elision of a <code>LayoutJob</code>.\nThe text should be elided using “…” when reaching …\nThe text should wrap to the next line when reaching the <code>Ui</code> …\nLogical width of the glyph.\nHelper for adding a new section when building a <code>LayoutJob</code>.\nWhen using this font’s metrics to layout a row, shift …\nIf <code>true</code>: Allow breaking between any characters. If <code>false</code> …\nIf <code>true</code>, all <code>\\n</code> characters will result in a new <em>paragraph</em>, …\nRange into the galley text\nClosest char at the desired x coordinate. Returns …\nExcludes the implicit <code>\\n</code> after the <code>Row</code>, if any.\nIncludes the implicit <code>\\n</code> after the <code>Row</code>, if any.\nThe character this glyph represents.\nText color\nDifferent types of text cursors, i.e. ways to point into a …\nThe wrap with, with a small margin in some cases.\nSet to true the text was truncated due to …\nIf true, this <code>Row</code> came from a paragraph ending with a <code>\\n</code>. …\nExtra spacing between letters, in points.\nWhich fonts (names) to use for each <code>FontFamily</code>.\nWhat font family to use.\nThe first row must be at least this high. This is in case …\nGet the right font implementation from size and <code>FontFamily</code>.\nThe content of a <code>.ttf</code> or <code>.otf</code> file.\nThe ascent of this font.\nList of font names and their definitions.\nThe height of the tallest font used in the job.\nThe row/line height of this font.\nThe ascent of the sub-font within the font (“FontImpl”…\nThe row/line height of the sub-font within the font (“…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>TextWrapping</code> from a <code>TextWrapMode</code> and an available …\nThe number of triangle indices added before the first …\nThe range of vertices in the mesh that contain glyphs (as …\nOne for each <code>char</code>.\nHow to horizontally align the text (<code>Align::LEFT</code>, …\nCan we display this glyph?\nCan we display all the glyphs in this text?\nWhich font face in the file to use. When in doubt, use <code>0</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe job that this galley is the result of. Contains the …\nJustify text so that word-wrapped rows fill the whole …\nLayout text into a <code>Galley</code>.\nCan be used for first row indentation.\nExplicit line height of the text in points.\nHeight of this row of text.\nSame y range for all characters with the same <code>TextFormat</code>.\nMaximum amount of rows the text galley should have.\nWrap text so that no row is wider than this.\nThe tessellated text, using non-normalized (texel) UV …\nTight bounding box around all the meshes in all the rows. …\nBounds of the mesh, and can be used for culling. Does NOT …\nCreate a new <code>FontsImpl</code> for text layout. This call is …\nA row can be as long as it need to be.\nTotal number of indices in all the row meshes.\nTotal number of vertices in all the row meshes.\nCharacter to use to represent elided text.\nThe number of physical pixels for each logical point. …\nBaseline position, relative to the galley. Logical …\nBounding rect.\nLogical bounding rectangle based on font heights etc. Use …\nRounding to the closest ui point (not pixel!) allows the …\nRows of text, from top to bottom.\nScale the font’s glyphs by this much. this is only a …\nIndex into <code>LayoutJob::sections</code>. Decides color etc.\nThis is included in case there are no glyphs\nThe different section, which can have different fonts, …\nBreak on <code>\\n</code> and at the given wrap width.\nDoes not break on <code>\\n</code>, but shows the replacement character …\nHeight in points.\nThe text on this row, excluding the implicit <code>\\n</code> if any.\nThe complete text of this job, referenced by <code>LayoutSection</code>.\nElide text that doesn’t fit within the given width, …\nExtra scale and vertical tweak to apply to all text of …\nPosition and size of the glyph in the font texture, in …\nIf you use a small font and <code>Align::TOP</code> you can get the …\nThe mesh, ready to be rendered.\nControls the text wrapping and elision.\nA row can be at most <code>max_width</code> wide but can wrap in any …\nShift font’s glyphs downwards by this amount of logical …\nShift font’s glyphs downwards by this fraction of the …\nCharacter cursor.\nAll different types of cursors together.\nParagraph Cursor\nRow Cursor\nCharacter based (NOT bytes). It is fine if this points to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCharacter offset (NOT byte offset!).\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCharacter based (NOT bytes). It is fine if this points to …\n0 is first paragraph, and so on. Note that a single …\nIf this cursors sits right at the border of a wrapped row …\nIf this cursors sits right at the border of a wrapped row …\n0 is first row, and so on. Note that a single paragraph …\nStretches the edge pixels to fill beyond the texture’s …\nLinearly interpolate the nearest neighbors, creating a …\nMirrors the texture with each repetition, creating …\nShow the nearest pixel value.\nTiles the texture across the surface, repeating it …\nHow the texture texels are filtered.\nLow-level manager for allocating textures.\nMeta-data about an allocated texture.\nHow the texture texels are filtered.\nDefines how textures are wrapped around objects when …\nWhat has been allocated and freed during the last period.\n4 or 1\nSize in bytes. width x height x <code>Self::bytes_per_pixel</code>.\nTextures to free after painting.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHow to filter when magnifying (when texels are larger than …\nHow to filter when minifying (when texels are smaller than …\nHow to filter between texture mipmaps.\nA human-readable name useful for debugging.\nThe texture filtering mode to use when rendering.\nFree when this reaches zero.\nNew or changed textures. Apply before painting.\nwidth x height\nHow to wrap the texture when the texture coordinates are …\nWraps a floating-point value to add total order and hash. …\nHash the given value with a predictable hasher.\nHash the given value with the given hasher.\nThe suggested keyboard shortcuts for global gui zooming.\nMake everything larger by increasing <code>Context::zoom_factor</code>.\nShow buttons for zooming the ui.\nMake everything smaller by decreasing <code>Context::zoom_factor</code>.\nPrimary keyboard shortcut for zooming in (<code>Cmd</code> + <code>+</code>).\nSecondary keyboard shortcut for zooming in (<code>Cmd</code> + <code>=</code>).\nKeyboard shortcut for zooming in (<code>Cmd</code> + <code>-</code>).\nKeyboard shortcut for resetting zoom in (<code>Cmd</code> + <code>0</code>).\nPainted behind all floating windows\nDebug layer, always painted last / on top\nPopups, menus etc that should always be painted on top of …\nThis is where painted <code>Shape</code>s end up during a frame.\nAn identifier for a paint layer. Also acts as an …\nNormal moveable windows that you reorder by click\nDifferent layer categories\nA list of <code>Shape</code>s paired with a clip rectangle.\nSpecial layer between panels and windows\nA unique identifier of a specific <code>Shape</code> in a <code>PaintList</code>.\nThings floating on top of everything else, like tooltips. …\nReturns the index of the new <code>Shape</code> that can be used with …\nRead-only access to all held shapes.\nGet or insert the <code>PaintList</code> for the given <code>LayerId</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the <code>PaintList</code> for the given <code>LayerId</code>.\nGet the <code>PaintList</code> for the given <code>LayerId</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMutate the shape at the given index, if any.\nSet the given shape to be empty (a <code>Shape::Noop</code>).\nModify an existing <code>Shape</code>.\nTransform each <code>Shape</code> and clip rectangle by this much, …\nTransform each <code>Shape</code> and clip rectangle in range by this …\nRepresents a byte buffer.\nRepresents a loader capable of loading raw unstructured …\nRepresents bytes which are currently being loaded.\nMaps URI:s to <code>Bytes</code>, e.g. found with <code>include_bytes!</code>.\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nScale to height.\nAn <code>ImageLoader</code> decodes raw bytes into a <code>ColorImage</code>.\nRepresents an image which is currently being loaded.\nRepresents a failed attempt at loading an image.\nThe loaders of bytes, images, and textures.\nRuntime error: Loading was attempted, but failed (e.g. “…\nProgrammer error: There are no image loaders installed.\nProgrammer error: Failed to find the bytes for this image …\nProgrammer error: Failed to parse the bytes as an image …\nProgrammer error: no matching <code>TextureLoader</code>. Because of …\nA specific loader does not support this scheme, protocol …\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nBytes are being loaded.\nImage is loading.\nTexture is loading.\nBytes are loaded.\nImage is loaded.\nTexture is loaded.\nScale original size by some factor.\nScale to size.\nGiven as a hint for image loading requests.\nA texture with a known size.\nA <code>TextureLoader</code> uploads a <code>ColorImage</code> to the GPU, returning …\nRepresents a texture is currently being loaded.\nScale to width.\nIf the loader caches any data, this should return the size …\nIf the loader caches any data, this should return the size …\nIf the loader caches any data, this should return the size …")